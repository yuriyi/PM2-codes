(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
<<<<<<< Updated upstream
NotebookDataLength[    391759,       7565]
NotebookOptionsPosition[    386071,       7468]
NotebookOutlinePosition[    386424,       7484]
CellTagsIndexPosition[    386381,       7481]
=======
NotebookDataLength[    220398,       4913]
NotebookOptionsPosition[    207860,       4718]
NotebookOutlinePosition[    208203,       4733]
CellTagsIndexPosition[    208160,       4730]
>>>>>>> Stashed changes
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Functions for modeling", "Section",
 CellChangeTimes->{{3.747377317072413*^9, 
  3.7473773300932627`*^9}},ExpressionUUID->"4252a514-f584-47d0-aff6-\
7b89297f0eb3"],

Cell["\<\
UNITS:
\tGPa;
\tkm;
\ts;\
\>", "Text",
 CellChangeTimes->{{3.748631186680934*^9, 
  3.748631239042861*^9}},ExpressionUUID->"4b0ac36b-4b51-49a0-865d-\
342e48e3fd8b"],

Cell[CellGroupData[{

Cell["Linear-solid stiffness matrix", "Subsection",
 CellChangeTimes->{{3.747376755757457*^9, 3.747376825838875*^9}, 
   3.747463822529325*^9},ExpressionUUID->"7db7c486-ac47-4517-b555-\
2e9483f292a6"],

Cell["cij0[i], Q0[i] are assumed defined for each layer i", "CodeText",
 CellChangeTimes->{{3.7471221099131403`*^9, 3.747122156274124*^9}, {
   3.747122254137911*^9, 3.747122268201149*^9}, {3.7471222993510733`*^9, 
   3.747122314654456*^9}, {3.747122352668804*^9, 3.747122354116933*^9}, {
   3.747122387497159*^9, 3.747122784093178*^9}, {3.747123005174747*^9, 
   3.747123064142342*^9}, {3.747123150023451*^9, 3.747123218397501*^9}, {
   3.747215567380432*^9, 3.747215652626376*^9}, {3.747215742214069*^9, 
   3.747215788891487*^9}, 3.747296533378478*^9, {3.747312241642372*^9, 
   3.747312242535344*^9}, {3.747376736037942*^9, 3.747376740290017*^9}, {
   3.747376796237442*^9, 3.747376796377987*^9}, {3.747376846066617*^9, 
   3.7473768916112967`*^9}, {3.747376957364555*^9, 
   3.747376978890777*^9}},ExpressionUUID->"694d0844-6d58-4b0e-8566-\
d121be6088e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cijCarcione", "[", 
   RowBox[{"pars_", ",", "\[Omega]0_", ",", "\[Omega]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "c11i", ",", "c13i", ",", "c33i", ",", "c44i", ",", "\[Rho]i", ",", 
      "Q01i", ",", "Q02i"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c11i", ",", "c13i", ",", "c33i", ",", "c44i", ",", "\[Rho]i", ",", 
        "Q01i", ",", "Q02i"}], "}"}], "=", "pars"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"2", " ", "c44i", " ", "\[Omega]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q01i", "2"]}]], "-", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
             "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"Q01i", "-", "Q02i"}], ")"}], " ", "\[Omega]0"}]}], 
            ")"}]}], "+", 
          RowBox[{"c33i", " ", "\[Omega]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
             "+", 
             RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
            ")"}]}], "+", 
          RowBox[{"c11i", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{"1", "+", 
                SuperscriptBox["Q01i", "2"]}]], " ", "\[Omega]"}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
             "+", 
             RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
            ")"}]}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                RowBox[{"1", "+", 
                 SuperscriptBox["Q01i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
            "+", 
            RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}]}], ")"}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                RowBox[{"1", "+", 
                 SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
            "+", 
            RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
           ")"}]}]], ",", 
        RowBox[{"c13i", "-", 
         FractionBox[
          RowBox[{"2", " ", "c44i", " ", "\[Omega]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q01i", "2"]}]], "+", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
             "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"Q01i", "+", "Q02i"}], ")"}], " ", "\[Omega]0"}]}], 
            ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q01i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
             "+", 
             RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
             "+", 
             RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
            ")"}]}]], "+", 
         FractionBox["c11i", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox["Q01i", "2"]}]], "+", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}], 
            "\[Omega]"]}]], "+", 
         FractionBox["c33i", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "+", 
             SuperscriptBox["Q01i", "2"]}]], "+", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}], 
            "\[Omega]"]}]]}], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"2", " ", "c44i", " ", "\[Omega]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q01i", "2"]}]], "-", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
             "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"(", 
               RowBox[{"Q01i", "-", "Q02i"}], ")"}], " ", "\[Omega]0"}]}], 
            ")"}]}], "+", 
          RowBox[{"c11i", " ", "\[Omega]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
             "+", 
             RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
            ")"}]}], "+", 
          RowBox[{"c33i", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox[
               RowBox[{"1", "+", 
                SuperscriptBox["Q01i", "2"]}]], " ", "\[Omega]"}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}]}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
             "+", 
             RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
            ")"}]}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                RowBox[{"1", "+", 
                 SuperscriptBox["Q01i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
            "+", 
            RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}]}], ")"}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                RowBox[{"1", "+", 
                 SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
            "+", 
            RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
           ")"}]}]], ",", 
        FractionBox[
         RowBox[{"c44i", " ", 
          RowBox[{"(", 
           RowBox[{"\[Omega]", "+", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["Q02i", "2"]}]], " ", "\[Omega]"}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
           ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
          "+", 
          RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}]], ",", 
        "\[Rho]i"}], "}"}], "//", "N"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7471221099131403`*^9, 3.747122156274124*^9}, {
   3.747122254137911*^9, 3.747122268201149*^9}, {3.7471222993510733`*^9, 
   3.747122314654456*^9}, {3.747122352668804*^9, 3.747122354116933*^9}, {
   3.747122387497159*^9, 3.747122784093178*^9}, {3.747123005174747*^9, 
   3.747123064142342*^9}, {3.747123150023451*^9, 3.747123218397501*^9}, {
   3.747215567380432*^9, 3.747215652626376*^9}, {3.747215742214069*^9, 
   3.747215788891487*^9}, 3.747296533378478*^9, {3.747312241642372*^9, 
   3.747312242535344*^9}, {3.747376736037942*^9, 3.747376740290017*^9}, {
   3.747376796237442*^9, 3.747376796377987*^9}, {3.747376846066617*^9, 
   3.7473768916112967`*^9}, 3.747376957364555*^9, {3.747462645138153*^9, 
   3.7474627406552896`*^9}, {3.747462841515655*^9, 3.747462884840288*^9}, {
   3.747462975724525*^9, 3.7474630120953903`*^9}, 3.747463254220458*^9, {
   3.747465454298058*^9, 3.747465469320595*^9}, {3.74748110214454*^9, 
   3.7474811267710543`*^9}, {3.74748116521229*^9, 3.747481165386428*^9}, {
<<<<<<< Updated upstream
   3.7476387540356216`*^9, 3.747638755681383*^9}, {3.74825306828555*^9, 
   3.748253071614622*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"db78b205-a416-4027-8661-9195665415d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cijCarcioneCompiled", "=", "\[IndentingNewLine]", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cijQ\[Rho]", ",", "_Real", ",", " ", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]0", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", "_Complex"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
=======
   3.7476387540356216`*^9, 3.747638755681383*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"db78b205-a416-4027-8661-9195665415d0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Slowness, L1/L2 matrices", "Subsection",
 CellChangeTimes->{{3.747376755757457*^9, 3.747376792529705*^9}, {
  3.747376913761466*^9, 3.747376930176058*^9}, {3.748161080898367*^9, 
  3.748161085460907*^9}},ExpressionUUID->"aa2026d7-da1a-430a-9a75-\
38fead6a5fd8"],

Cell["\<\
Requires run of the cijCarcione function to get frequency-dependent cij[i]\
\>", "CodeText",
 CellChangeTimes->{{3.7473769873020897`*^9, 3.7473770422542973`*^9}, 
   3.7474189443722467`*^9},ExpressionUUID->"7ddb0035-6cfb-483b-8421-\
770e6389f206"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GetLStovasUrsin", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "c11i_", ",", " ", "c13i_", ",", " ", "c33i_", ",", " ", "c44i_", ",", 
       " ", "\[Rho]i_"}], "}"}], ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "L1", ",", "L2", ",", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", 
       ",", "q\[Alpha]", ",", "q\[Beta]", ",", "\[Alpha]0", ",", "\[Beta]0", 
       ",", "\[Eta]", ",", "\[Delta]", ",", "\[Sigma]0", ",", "S\[Alpha]", 
       ",", "S\[Beta]", ",", "R", ",", "R1", ",", "R2", ",", "req1", ",", 
       "req2", ",", "imq1", ",", "imq2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]0", "=", 
       SqrtBox[
        RowBox[{"c33i", "/", "\[Rho]i"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Beta]0", "=", 
       SqrtBox[
        RowBox[{"c44i", "/", "\[Rho]i"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Sigma]0", "=", 
       RowBox[{"1", "-", 
        FractionBox["c44i", "c33i"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Delta]", "=", 
       FractionBox[
        RowBox[{"c13i", "-", "c33i", "+", 
         RowBox[{"2", "c44i"}]}], "c33i"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Eta]", "=", 
       FractionBox[
>>>>>>> Stashed changes
        RowBox[{
        "c11i", ",", "c13i", ",", "c33i", ",", "c44i", ",", "\[Rho]i", ",", 
         "Q01i", ",", "Q02i"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c11i", "=", 
         RowBox[{"cijQ\[Rho]", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c13i", "=", 
         RowBox[{"cijQ\[Rho]", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c33i", "=", 
         RowBox[{"cijQ\[Rho]", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c44i", "=", 
         RowBox[{"cijQ\[Rho]", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Rho]i", "=", 
         RowBox[{"cijQ\[Rho]", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Q01i", "=", 
         RowBox[{"cijQ\[Rho]", "[", 
          RowBox[{"[", "6", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Q02i", "=", 
         RowBox[{"cijQ\[Rho]", "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"2", " ", "c44i", " ", "\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{"1", "+", 
                    SuperscriptBox["Q01i", "2"]}]], "-", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", 
                "\[Omega]"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                RowBox[{"(", 
                 RowBox[{"Q01i", "-", "Q02i"}], ")"}], " ", "\[Omega]0"}]}], 
              ")"}]}], "+", 
            RowBox[{"c33i", " ", "\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", 
                "\[Omega]"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
              ")"}]}], "+", 
            RowBox[{"c11i", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q01i", "2"]}]], " ", "\[Omega]"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", 
                "\[Omega]"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox[
                  RowBox[{"1", "+", 
                   SuperscriptBox["Q01i", "2"]}]]}], ")"}], " ", "\[Omega]"}],
               "+", 
              RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}]}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox[
                  RowBox[{"1", "+", 
                   SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}],
               "+", 
              RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
             ")"}]}]], ",", 
          RowBox[{"c13i", "-", 
           FractionBox[
            RowBox[{"2", " ", "c44i", " ", "\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    SuperscriptBox["Q01i", "2"]}]], "+", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", 
                "\[Omega]"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                RowBox[{"(", 
                 RowBox[{"Q01i", "+", "Q02i"}], ")"}], " ", "\[Omega]0"}]}], 
              ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    SuperscriptBox["Q01i", "2"]}]]}], ")"}], " ", 
                "\[Omega]"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", 
                "\[Omega]"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
              ")"}]}]], "+", 
           FractionBox["c11i", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["Q01i", "2"]}]], "+", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}], 
              "\[Omega]"]}]], "+", 
           FractionBox["c33i", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "+", 
               SuperscriptBox["Q01i", "2"]}]], "+", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}], 
              "\[Omega]"]}]]}], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"2", " ", "c44i", " ", "\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{"1", "+", 
                    SuperscriptBox["Q01i", "2"]}]], "-", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", 
                "\[Omega]"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                RowBox[{"(", 
                 RowBox[{"Q01i", "-", "Q02i"}], ")"}], " ", "\[Omega]0"}]}], 
              ")"}]}], "+", 
            RowBox[{"c11i", " ", "\[Omega]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", 
                "\[Omega]"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
              ")"}]}], "+", 
            RowBox[{"c33i", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["Q01i", "2"]}]], " ", "\[Omega]"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SqrtBox[
                   RowBox[{"1", "+", 
                    SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", 
                "\[Omega]"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
              ")"}]}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox[
                  RowBox[{"1", "+", 
                   SuperscriptBox["Q01i", "2"]}]]}], ")"}], " ", "\[Omega]"}],
               "+", 
              RowBox[{"\[ImaginaryI]", " ", "Q01i", " ", "\[Omega]0"}]}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SqrtBox[
                  RowBox[{"1", "+", 
                   SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}],
               "+", 
              RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
             ")"}]}]], ",", 
          FractionBox[
           RowBox[{"c44i", " ", 
            RowBox[{"(", 
             RowBox[{"\[Omega]", "+", 
              RowBox[{
               SqrtBox[
                RowBox[{"1", "+", 
                 SuperscriptBox["Q02i", "2"]}]], " ", "\[Omega]"}], "+", 
              RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}], 
             ")"}]}], 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                RowBox[{"1", "+", 
                 SuperscriptBox["Q02i", "2"]}]]}], ")"}], " ", "\[Omega]"}], 
            "+", 
            RowBox[{"\[ImaginaryI]", " ", "Q02i", " ", "\[Omega]0"}]}]], ",", 
          RowBox[{"Re", "@", "\[Rho]i"}]}], "}"}]}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", " ", 
     RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7482523666321974`*^9, 3.7482524213235006`*^9}, {
  3.7482525045882993`*^9, 3.748252505540228*^9}, {3.748252550424831*^9, 
  3.7482525793794355`*^9}, {3.748252637797941*^9, 3.7482527056393776`*^9}, {
  3.748252772961483*^9, 3.748252783894631*^9}, {3.7482530465218344`*^9, 
  3.748253047441819*^9}, {3.748253118101287*^9, 3.748253118521244*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"5508570f-4243-42d6-8022-c457b174ae32"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cijLS", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "c11i_", ",", "c13i_", ",", "c33i_", ",", "c44i_", ",", "\[Rho]i_", ",",
        "Q01i_", ",", "Q02i_"}], "}"}], ",", "\[Omega]0_", ",", "\[Omega]_"}],
     "]"}], ":=", 
   RowBox[{"cijCarcioneCompiled", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "c11i", ",", "c13i", ",", "c33i", ",", "c44i", ",", "\[Rho]i", ",", 
       "Q01i", ",", "Q02i"}], "}"}], ",", "\[Omega]0", ",", "\[Omega]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.747633187893921*^9, 3.7476331889564123`*^9}, {
   3.747633220747635*^9, 3.7476332668930492`*^9}, {3.747633558082571*^9, 
   3.7476335596005917`*^9}, {3.747633764900051*^9, 3.74763376597773*^9}, {
   3.747633814729652*^9, 3.747633822497365*^9}, 3.747634397568671*^9, 
   3.748168380261752*^9, {3.748252801119607*^9, 3.748252832572115*^9}, {
   3.74825286682169*^9, 3.748252924076024*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"32dd7202-9ff1-4d97-a813-ed46295b78db"]
}, Closed]],

Cell[CellGroupData[{

Cell["Slowness, L1/L2 matrices", "Subsection",
 CellChangeTimes->{{3.747376755757457*^9, 3.747376792529705*^9}, {
  3.747376913761466*^9, 3.747376930176058*^9}, {3.748161080898367*^9, 
  3.748161085460907*^9}},ExpressionUUID->"aa2026d7-da1a-430a-9a75-\
38fead6a5fd8"],

Cell["\<\
Requires run of the cijCarcione function to get frequency-dependent cij[i]\
\>", "CodeText",
 CellChangeTimes->{{3.7473769873020897`*^9, 3.7473770422542973`*^9}, 
   3.7474189443722467`*^9},ExpressionUUID->"7ddb0035-6cfb-483b-8421-\
770e6389f206"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GetLStovasUrsin", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "c11i_", ",", " ", "c13i_", ",", " ", "c33i_", ",", " ", "c44i_", ",", 
       " ", "\[Rho]i_"}], "}"}], ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "L1", ",", "L2", ",", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", 
       ",", "q\[Alpha]", ",", "q\[Beta]", ",", "\[Alpha]0", ",", "\[Beta]0", 
       ",", "\[Eta]", ",", "\[Delta]", ",", "\[Sigma]0", ",", "S\[Alpha]", 
       ",", "S\[Beta]", ",", "R", ",", "R1", ",", "R2", ",", "req1", ",", 
       "req2", ",", "imq1", ",", "imq2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]0", "=", 
       SqrtBox[
        RowBox[{"c33i", "/", "\[Rho]i"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Beta]0", "=", 
       SqrtBox[
        RowBox[{"c44i", "/", "\[Rho]i"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Sigma]0", "=", 
       RowBox[{"1", "-", 
        FractionBox["c44i", "c33i"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Delta]", "=", 
       FractionBox[
        RowBox[{"c13i", "-", "c33i", "+", 
         RowBox[{"2", "c44i"}]}], "c33i"]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Eta]", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"c11i", " ", "c33i"}], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"c13i", "+", 
            RowBox[{"2", "c44i"}]}], ")"}], "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["c33i", "2"]}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"R1", "=", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox["p", "2"], 
           SuperscriptBox["\[Beta]0", "2"]}]}], ")"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"2", 
            SuperscriptBox["p", "2"], 
            SuperscriptBox["\[Alpha]0", "2"], "\[Eta]"}]}], ")"}], "2"]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"R2", "=", 
       RowBox[{"\[Sigma]0", "+", 
        RowBox[{"2", 
         SuperscriptBox["p", "2"], 
         SuperscriptBox["\[Beta]0", "2"], "\[Delta]"}], "-", 
        RowBox[{"2", 
         SuperscriptBox["p", "2"], 
         SuperscriptBox["\[Alpha]0", "2"], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", 
            SuperscriptBox["p", "2"], 
            SuperscriptBox["\[Beta]0", "2"]}]}], ")"}], "\[Eta]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"R", "=", 
       FractionBox["R1", 
        RowBox[{"R2", "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["R2", "2"], "+", 
           RowBox[{"2", 
            SuperscriptBox["p", "2"], 
            SuperscriptBox["\[Beta]0", "2"], "R1"}]}]]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S\[Alpha]", "=", 
       RowBox[{
        RowBox[{"2", "\[Delta]"}], "+", 
        RowBox[{"2", 
         SuperscriptBox["p", "2"], 
         SuperscriptBox["\[Alpha]0", "2"], "\[Eta]"}], "+", "R"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S\[Beta]", "=", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["p", "2"], 
            SuperscriptBox["\[Beta]0", "2"]}]}], ")"}], 
         FractionBox[
          SuperscriptBox["\[Alpha]0", "2"], 
          SuperscriptBox["\[Beta]0", "2"]], "\[Eta]"}], "-", "R"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"d2", "=", 
       SqrtBox[
        FractionBox[
         RowBox[{"\[Sigma]0", "+", "\[Delta]"}], 
         RowBox[{"\[Sigma]0", "+", "S\[Alpha]"}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"d3", "=", 
       RowBox[{"2", 
        SuperscriptBox["\[Beta]0", "2"], 
        FractionBox[
         RowBox[{"\[Sigma]0", "+", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{"S\[Alpha]", "+", "\[Delta]"}], ")"}]}]}], 
         RowBox[{"\[Sigma]0", "+", "\[Delta]"}]]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"d4", "=", 
       SqrtBox[
        FractionBox[
         RowBox[{"\[Sigma]0", "-", 
          RowBox[{
           SuperscriptBox["p", "2"], 
           SuperscriptBox["\[Beta]0", "2"], 
           RowBox[{"(", 
            RowBox[{"\[Sigma]0", "+", "S\[Beta]"}], ")"}]}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["p", "2"], 
             SuperscriptBox["\[Beta]0", "2"], 
             RowBox[{"(", 
              RowBox[{"1", "+", "S\[Beta]"}], ")"}]}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"\[Sigma]0", "+", "\[Delta]"}], ")"}]}]]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"d5", "=", 
       FractionBox[
        RowBox[{"\[Sigma]0", "-", 
         RowBox[{"2", 
          SuperscriptBox["p", "2"], 
          SuperscriptBox["\[Beta]0", "2"], 
          RowBox[{"(", 
           RowBox[{"\[Sigma]0", "+", 
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"(", 
              RowBox[{"S\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"\[Sigma]0", "+", "\[Delta]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"d1", "=", 
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          RowBox[{
           SuperscriptBox["p", "2"], "d3"}], "+", "d5"}]]]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"req1", "=", 
       RowBox[{"Re", "[", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["\[Alpha]0", "2"]], "-", 
         SuperscriptBox["p", "2"], "-", 
         RowBox[{
          SuperscriptBox["p", "2"], "S\[Alpha]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"req2", "=", 
       RowBox[{"Re", "[", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["\[Beta]0", "2"]], "-", 
         SuperscriptBox["p", "2"], "-", 
         RowBox[{
          SuperscriptBox["p", "2"], "S\[Beta]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"imq1", "=", 
       RowBox[{"Im", "[", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["\[Alpha]0", "2"]], "-", 
         SuperscriptBox["p", "2"], "-", 
         RowBox[{
          SuperscriptBox["p", "2"], "S\[Alpha]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"imq2", "=", 
       RowBox[{"Im", "[", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["\[Beta]0", "2"]], "-", 
         SuperscriptBox["p", "2"], "-", 
         RowBox[{
          SuperscriptBox["p", "2"], "S\[Beta]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"imq1", "=", 
       RowBox[{
        RowBox[{"Sign", "[", "imq1", "]"}], "imq1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"imq2", "=", 
       RowBox[{
        RowBox[{"Sign", "[", "imq2", "]"}], "imq2"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"req1", "=", "req1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"req2", "=", "req2"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"q\[Alpha]", "=", 
       SqrtBox[
        RowBox[{"req1", "+", 
         RowBox[{"\[ImaginaryI]", " ", "imq1"}]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"q\[Beta]", "=", 
       SqrtBox[
        RowBox[{"req2", "+", 
         RowBox[{"\[ImaginaryI]", " ", "imq2"}]}]]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"q\[Alpha]", "=", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox["\[Alpha]0", "2"]], "-", 
          SuperscriptBox["p", "2"], "-", 
          RowBox[{
           SuperscriptBox["p", "2"], "S\[Alpha]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"q\[Beta]", "=", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox["\[Beta]0", "2"]], "-", 
          SuperscriptBox["p", "2"], "-", 
          RowBox[{
           SuperscriptBox["p", "2"], "S\[Beta]"}]}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"q\[Alpha]", "=", 
         RowBox[{
          RowBox[{"Sign", "[", 
           RowBox[{"Im", "[", "q\[Alpha]", "]"}], "]"}], "q\[Alpha]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"q\[Beta]", "=", 
         RowBox[{
          RowBox[{"Sign", "[", 
           RowBox[{"Im", "[", "q\[Beta]", "]"}], "]"}], "q\[Beta]"}]}], ";"}],
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"L1", "=", 
       RowBox[{"d1", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d2", 
             SqrtBox[
              FractionBox["q\[Alpha]", "\[Rho]i"]]}], ",", 
            RowBox[{
             FractionBox["1", "d4"], 
             FractionBox["p", 
              SqrtBox[
               RowBox[{"\[Rho]i", " ", "q\[Beta]"}]]]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"d3", " ", "d2", " ", "p", " ", 
             SqrtBox[
              RowBox[{"\[Rho]i", " ", "q\[Alpha]"}]]}], ",", 
            RowBox[{
             FractionBox[
              RowBox[{"-", "d5"}], "d4"], 
             SqrtBox[
              FractionBox["\[Rho]i", "q\[Beta]"]]}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"L2", "=", 
       RowBox[{"d1", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             FractionBox["d5", "d2"], 
             SqrtBox[
              FractionBox["\[Rho]i", "q\[Alpha]"]]}], ",", 
            RowBox[{"d3", " ", "d4", " ", "p", " ", 
             SqrtBox[
              RowBox[{"\[Rho]i", " ", "q\[Beta]"}]]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             FractionBox["1", "d2"], 
             FractionBox["p", 
              SqrtBox[
               RowBox[{"\[Rho]i", " ", "q\[Alpha]"}]]]}], ",", 
            RowBox[{
             RowBox[{"-", "d4"}], 
             SqrtBox[
              FractionBox["q\[Beta]", "\[Rho]i"]]}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"q\[Alpha]", ",", "q\[Beta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"L1", ",", "L2"}], "}"}]}], "}"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"q\[Alpha]", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "q\[Beta]"}], "}"}]}], "}"}], ",", "L1", ",", 
        "L2"}], "}"}]}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"l1", "[", "j", "]"}], "=", 
       RowBox[{"L1", "//", "N"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"l2", "[", "j", "]"}], "=", 
       RowBox[{"L2", "//", "N"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"q1", "[", "j", "]"}], "=", 
       RowBox[{"q\[Alpha]", "//", "N"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"q2", "[", "j", "]"}], "=", 
       RowBox[{"q\[Beta]", "//", "N"}]}], ";"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.747144657509535*^9, 3.7471447868422623`*^9}, {
   3.747144842540195*^9, 3.747145036463174*^9}, {3.747145096554556*^9, 
   3.747145148846468*^9}, {3.747145192924012*^9, 3.7471453352013206`*^9}, {
   3.747145387993479*^9, 3.7471455316520147`*^9}, {3.747145624988312*^9, 
   3.7471458085795507`*^9}, {3.7471458625030003`*^9, 3.747145912999799*^9}, {
   3.7471460672645617`*^9, 3.747146106374795*^9}, {3.747164255666718*^9, 
   3.747164320664784*^9}, {3.7471644140049763`*^9, 3.747164426921666*^9}, {
   3.7472030161948023`*^9, 3.747203031592656*^9}, {3.7472188893595247`*^9, 
   3.747218927876945*^9}, {3.747221512240013*^9, 3.747221522272654*^9}, {
   3.7472475260805492`*^9, 3.747247531184722*^9}, {3.74724793112337*^9, 
   3.74724794631741*^9}, {3.747294481174206*^9, 3.7472944840311117`*^9}, {
   3.747312259539938*^9, 3.747312262022614*^9}, {3.747312329605567*^9, 
   3.747312331398467*^9}, {3.7473742767146482`*^9, 3.7473742803021708`*^9}, 
   3.747376940778455*^9, 3.747382844206897*^9, {3.7474631830900373`*^9, 
   3.7474632361722507`*^9}, {3.7474633628346157`*^9, 3.747463366725185*^9}, {
   3.747469945981958*^9, 3.747469970695853*^9}, {3.747546184788455*^9, 
   3.747546239136921*^9}, {3.747546279410055*^9, 3.747546286802005*^9}, 
   3.747546908776013*^9, {3.74754727219872*^9, 3.747547345953332*^9}, {
<<<<<<< Updated upstream
   3.747568039474522*^9, 3.747568040504156*^9}, 3.7481635497893543`*^9, {
   3.7481698555445604`*^9, 3.748169868082901*^9}, {3.748169909031788*^9, 
   3.7481699107152543`*^9}, {3.7481699560013895`*^9, 
   3.7481699572727623`*^9}, {3.7481862538786163`*^9, 3.74818625608794*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"63138713-80ac-408d-a227-16b9d4c14505"],
=======
   3.747568039474522*^9, 3.747568040504156*^9}, 3.7481635497893543`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"63138713-80ac-408d-a227-16b9d4c14505"],
>>>>>>> Stashed changes

Cell[BoxData[
 RowBox[{
  RowBox[{"qLCompiled", "=", "\[IndentingNewLine]", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cij", ",", "_Complex", ",", " ", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Rho]i", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "_Complex"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "L1", ",", "L2", ",", "d1", ",", "d2", ",", "d3", ",", "d4", ",", 
         "d5", ",", "q\[Alpha]", ",", "q\[Beta]", ",", "\[Alpha]0", ",", 
         "\[Beta]0", ",", "\[Eta]", ",", "\[Delta]", ",", "\[Sigma]0", ",", 
         "S\[Alpha]", ",", "S\[Beta]", ",", "R", ",", "R1", ",", "R2"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Alpha]0", "=", 
         SqrtBox[
          RowBox[{
           RowBox[{"cij", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "/", "\[Rho]i"}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Beta]0", "=", 
         SqrtBox[
          RowBox[{
           RowBox[{"cij", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "/", "\[Rho]i"}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Sigma]0", "=", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"cij", "[", 
            RowBox[{"[", "4", "]"}], "]"}], 
           RowBox[{"cij", "[", 
            RowBox[{"[", "3", "]"}], "]"}]]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Delta]", "=", 
         FractionBox[
          RowBox[{
           RowBox[{"cij", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"cij", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "+", 
           RowBox[{"2", 
            RowBox[{"cij", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], 
          RowBox[{"cij", "[", 
           RowBox[{"[", "3", "]"}], "]"}]]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[Eta]", "=", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"cij", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", 
            RowBox[{"cij", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"cij", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", 
              RowBox[{"2", 
               RowBox[{"cij", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}]}], ")"}], "2"]}], 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"cij", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "2"]}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"R1", "=", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["p", "2"], 
             SuperscriptBox["\[Beta]0", "2"]}]}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[Delta]", "+", 
             RowBox[{"2", 
              SuperscriptBox["p", "2"], 
              SuperscriptBox["\[Alpha]0", "2"], "\[Eta]"}]}], ")"}], "2"]}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"R2", "=", 
         RowBox[{"\[Sigma]0", "+", 
          RowBox[{"2", 
           SuperscriptBox["p", "2"], 
           SuperscriptBox["\[Beta]0", "2"], "\[Delta]"}], "-", 
          RowBox[{"2", 
           SuperscriptBox["p", "2"], 
           SuperscriptBox["\[Alpha]0", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", 
              SuperscriptBox["p", "2"], 
              SuperscriptBox["\[Beta]0", "2"]}]}], ")"}], "\[Eta]"}]}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"R", "=", 
         FractionBox["R1", 
          RowBox[{"R2", "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["R2", "2"], "+", 
             RowBox[{"2", 
              SuperscriptBox["p", "2"], 
              SuperscriptBox["\[Beta]0", "2"], "R1"}]}]]}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"S\[Alpha]", "=", 
         RowBox[{
          RowBox[{"2", "\[Delta]"}], "+", 
          RowBox[{"2", 
           SuperscriptBox["p", "2"], 
           SuperscriptBox["\[Alpha]0", "2"], "\[Eta]"}], "+", "R"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"S\[Beta]", "=", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              SuperscriptBox["p", "2"], 
              SuperscriptBox["\[Beta]0", "2"]}]}], ")"}], 
           FractionBox[
            SuperscriptBox["\[Alpha]0", "2"], 
            SuperscriptBox["\[Beta]0", "2"]], "\[Eta]"}], "-", "R"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"q\[Alpha]", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Re", "@", "#"}], "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Abs", "@", 
               RowBox[{"Im", "@", "#"}]}]}]}], ")"}], "&"}], "@", 
          SqrtBox[
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[Alpha]0", "2"]], "-", 
            SuperscriptBox["p", "2"], "-", 
            RowBox[{
             SuperscriptBox["p", "2"], "S\[Alpha]"}]}]]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"q\[Beta]", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Re", "@", "#"}], "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              RowBox[{"Abs", "@", 
               RowBox[{"Im", "@", "#"}]}]}]}], ")"}], "&"}], "@", 
          SqrtBox[
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["\[Beta]0", "2"]], "-", 
            SuperscriptBox["p", "2"], "-", 
            RowBox[{
             SuperscriptBox["p", "2"], "S\[Beta]"}]}]]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d2", "=", 
         SqrtBox[
          FractionBox[
           RowBox[{"\[Sigma]0", "+", "\[Delta]"}], 
           RowBox[{"\[Sigma]0", "+", "S\[Alpha]"}]]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d3", "=", 
         RowBox[{"2", 
          SuperscriptBox["\[Beta]0", "2"], 
          FractionBox[
           RowBox[{"\[Sigma]0", "+", 
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"(", 
              RowBox[{"S\[Alpha]", "+", "\[Delta]"}], ")"}]}]}], 
           RowBox[{"\[Sigma]0", "+", "\[Delta]"}]]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d4", "=", 
         SqrtBox[
          FractionBox[
           RowBox[{"\[Sigma]0", "-", 
            RowBox[{
             SuperscriptBox["p", "2"], 
             SuperscriptBox["\[Beta]0", "2"], 
             RowBox[{"(", 
              RowBox[{"\[Sigma]0", "+", "S\[Beta]"}], ")"}]}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["p", "2"], 
               SuperscriptBox["\[Beta]0", "2"], 
               RowBox[{"(", 
                RowBox[{"1", "+", "S\[Beta]"}], ")"}]}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"\[Sigma]0", "+", "\[Delta]"}], ")"}]}]]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d5", "=", 
         FractionBox[
          RowBox[{"\[Sigma]0", "-", 
           RowBox[{"2", 
            SuperscriptBox["p", "2"], 
            SuperscriptBox["\[Beta]0", "2"], 
            RowBox[{"(", 
             RowBox[{"\[Sigma]0", "+", 
              RowBox[{
               FractionBox["1", "2"], 
               RowBox[{"(", 
                RowBox[{"S\[Beta]", "+", "\[Delta]"}], ")"}]}]}], ")"}]}]}], 
          RowBox[{"\[Sigma]0", "+", "\[Delta]"}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"d1", "=", 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            RowBox[{
             SuperscriptBox["p", "2"], "d3"}], "+", "d5"}]]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"L1", "=", 
         RowBox[{"d1", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d2", 
               SqrtBox[
                FractionBox["q\[Alpha]", "\[Rho]i"]]}], ",", 
              RowBox[{
               FractionBox["1", "d4"], 
               FractionBox["p", 
                SqrtBox[
                 RowBox[{"\[Rho]i", " ", "q\[Beta]"}]]]}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"d3", " ", "d2", " ", "p", " ", 
               SqrtBox[
                RowBox[{"\[Rho]i", " ", "q\[Alpha]"}]]}], ",", 
              RowBox[{
               FractionBox[
                RowBox[{"-", "d5"}], "d4"], 
               SqrtBox[
                FractionBox["\[Rho]i", "q\[Beta]"]]}]}], "}"}]}], 
           "\[IndentingNewLine]", "}"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"L2", "=", 
         RowBox[{"d1", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               FractionBox["d5", "d2"], 
               SqrtBox[
                FractionBox["\[Rho]i", "q\[Alpha]"]]}], ",", 
              RowBox[{"d3", " ", "d4", " ", "p", " ", 
               SqrtBox[
                RowBox[{"\[Rho]i", " ", "q\[Beta]"}]]}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               FractionBox["1", "d2"], 
               FractionBox["p", 
                SqrtBox[
                 RowBox[{"\[Rho]i", " ", "q\[Alpha]"}]]]}], ",", 
              RowBox[{
               RowBox[{"-", "d4"}], 
               SqrtBox[
                FractionBox["q\[Beta]", "\[Rho]i"]]}]}], "}"}]}], 
           "\[IndentingNewLine]", "}"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"q\[Alpha]", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "q\[Beta]"}], "}"}]}], "}"}], ",", "L1", ",", 
          "L2"}], "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", " ", 
     RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.747631872350299*^9, 3.747631902494712*^9}, {
   3.747631958898806*^9, 3.747631996808082*^9}, {3.7476320294552402`*^9, 
   3.7476320424626303`*^9}, {3.747632101540482*^9, 3.747632137667864*^9}, {
   3.747632927085699*^9, 3.7476329414564753`*^9}, {3.747632974309992*^9, 
   3.74763311371392*^9}, {3.747633409604445*^9, 3.7476334391280937`*^9}, {
   3.747633697899619*^9, 3.74763373513489*^9}, {3.7476338031658487`*^9, 
   3.7476338317997217`*^9}, {3.747633881774453*^9, 3.747633915681889*^9}, {
   3.7476339706540737`*^9, 3.747633971470195*^9}, {3.747634020164242*^9, 
   3.74763403991584*^9}, {3.7476340794199457`*^9, 3.74763419823074*^9}, {
   3.747634301932486*^9, 3.74763432952425*^9}, 3.747634424196074*^9, {
   3.7476346293461313`*^9, 3.747634629449667*^9}, {3.747643992132195*^9, 
   3.747644005645019*^9}, {3.7476442190374193`*^9, 3.747644239331298*^9}, {
<<<<<<< Updated upstream
   3.747726167407013*^9, 3.747726237464766*^9}, {3.7481682833426447`*^9, 
   3.7481682979874945`*^9}, {3.7484692656691504`*^9, 3.7484692672600327`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e19a226e-593f-4959-a641-555f09bc95e1"],
=======
   3.747726167407013*^9, 3.747726237464766*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"e19a226e-593f-4959-a641-555f09bc95e1"],
>>>>>>> Stashed changes

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"qL", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "c11i_", ",", " ", "c13i_", ",", " ", "c33i_", ",", " ", "c44i_", ",", 
       " ", "\[Rho]i_"}], "}"}], ",", "p_"}], "]"}], ":=", 
   RowBox[{"qLCompiled", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c11i", ",", " ", "c13i", ",", " ", "c33i", ",", " ", "c44i"}], 
      "}"}], ",", " ", "\[Rho]i", ",", "p"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.747633187893921*^9, 3.7476331889564123`*^9}, {
   3.747633220747635*^9, 3.7476332668930492`*^9}, {3.747633558082571*^9, 
   3.7476335596005917`*^9}, {3.747633764900051*^9, 3.74763376597773*^9}, {
<<<<<<< Updated upstream
   3.747633814729652*^9, 3.747633822497365*^9}, 3.747634397568671*^9, 
   3.748168380261752*^9, {3.748469223635228*^9, 3.7484692237632008`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"46eb411f-d3bf-4190-a84a-642b73214ba8"]
=======
   3.747633814729652*^9, 3.747633822497365*^9}, 3.747634397568671*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"46eb411f-d3bf-4190-a84a-642b73214ba8"]
>>>>>>> Stashed changes
}, Closed]],

Cell[CellGroupData[{

Cell["Reflectivity and transmissivity", "Subsection",
 CellChangeTimes->{{3.747376755757457*^9, 3.747376792529705*^9}, {
  3.747376913761466*^9, 3.747376930176058*^9}, {3.748161080898367*^9, 
  3.748161122293969*^9}},ExpressionUUID->"bf065e10-b1cf-4791-9a14-\
3674ad00f459"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{"REFLECTIVITY", " ", "ONLY"}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"stackRefExperiment2", "[", 
     RowBox[{"\[Omega]_", ",", "p_", ",", 
      RowBox[{"CijsAnd\[Rho]", ":", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}], 
         ".."}], "}"}]}], ",", " ", "d_List"}], "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ArrayQ", "[", "d", "]"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "d"}], "\[Equal]", 
        RowBox[{"Length", "@", "CijsAnd\[Rho]"}]}], ")"}]}], ")"}]}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "qABArray", ",", " ", "L1ar", ",", "L2ar", ",", " ", "L12Array", ",", 
       "CArray", ",", "DArray", ",", "refArray", ",", " ", "transArray", ",", 
       " ", "phaseArray", ",", " ", "foldArray", ",", "f"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"qABArray", ",", " ", "L1ar", ",", " ", "L2ar"}], "}"}], "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"qL", "[", 
           RowBox[{"#", ",", "p"}], "]"}], "&"}], "/@", "CijsAnd\[Rho]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"L12Array", "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"L1ar", ",", " ", "L2ar"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"CArray", ",", "DArray"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
<<<<<<< Updated upstream
=======
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"#1", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], ".", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"#1", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ".", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RotateLeft", "@", "L12Array"}], ",", "L12Array"}], 
           "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"transArray", " ", ",", " ", "refArray"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Transpose", "@", 
               RowBox[{"Inverse", "[", 
                RowBox[{"#1", "+", "#2"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"(", 
                RowBox[{"#1", "-", "#2"}], ")"}], "]"}], ".", 
              RowBox[{"Transpose", "@", 
               RowBox[{"Inverse", "[", 
                RowBox[{"#1", "+", "#2"}], "]"}]}]}]}], "}"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"CArray", ",", " ", "DArray"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"phaseArray", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]", 
           RowBox[{"(", 
            RowBox[{"qABArray", " ", "d"}], ")"}]}], "]"}], "-", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.", ",", "1."}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.", ",", "0."}], "}"}]}], "}"}], ",", 
           RowBox[{"Length", "[", "d", "]"}]}], "]"}]}], "//", "Chop"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"foldArray", "=", 
       RowBox[{"Reverse", "@", 
        RowBox[{"Most", "@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
           "}"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"f", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#4", ".", 
          RowBox[{"(", 
           RowBox[{"#3", "+", 
            RowBox[{
             RowBox[{"Transpose", "[", "#2", "]"}], ".", "#1", ".", 
             RowBox[{"Inverse", "[", 
              RowBox[{
               RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
               RowBox[{"#3", ".", "#1"}]}], "]"}], ".", "#2"}]}], ")"}], ".", 
          "#4"}], ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Fold", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"#1", ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "foldArray"}], 
       "]"}]}]}], 
    RowBox[{"(*", 
     RowBox[{";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
       "}"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"foldArray", "=", 
      RowBox[{"Reverse", "@", 
       RowBox[{"Most", "@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
          "}"}], "]"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{";", "\[IndentingNewLine]", 
      RowBox[{"phaseArray", "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "\[Omega]", 
         RowBox[{"(", 
          RowBox[{"qABArray", " ", "d"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"foldArray", "=", 
       RowBox[{"Reverse", "@", 
        RowBox[{"Most", "@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
           "}"}], "]"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.748081217799539*^9, {3.74808129919536*^9, 3.748081302325453*^9}, {
   3.748081422927822*^9, 3.7480814596291533`*^9}, {3.748081642043152*^9, 
   3.748081644664382*^9}, {3.748081782122211*^9, 3.748081784711622*^9}, {
   3.748081930967084*^9, 3.7480819342779093`*^9}, {3.748081976603219*^9, 
   3.7480819898729773`*^9}, {3.748086023145913*^9, 3.748086026145265*^9}, {
   3.74808621596025*^9, 3.748086244741735*^9}, 3.748086304710166*^9, {
   3.748086369476879*^9, 3.7480865306598663`*^9}, {3.748086562986905*^9, 
   3.74808662037327*^9}, {3.748088584676117*^9, 3.748088585979105*^9}, {
   3.748088636397079*^9, 3.748088668964531*^9}, {3.748088753554801*^9, 
   3.748088778046401*^9}, {3.7480888238708143`*^9, 3.748088842760363*^9}, {
   3.748088905549971*^9, 3.748088907291031*^9}, {3.748160962079929*^9, 
   3.7481609652345247`*^9}, {3.7481610471357727`*^9, 3.74816105022423*^9}, {
   3.7481630759154453`*^9, 3.7481630866528378`*^9}, {3.748163219544882*^9, 
   3.748163222145549*^9}, {3.7481632971146483`*^9, 3.7481632994528513`*^9}, {
   3.748163417538108*^9, 3.7481634367791533`*^9}, {3.7481635675826693`*^9, 
   3.7481635678764524`*^9}},ExpressionUUID->"ddbe2a2b-33ab-4868-ae3c-\
17030ae9fe75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "BOTH", " ", "REFLECTIVITY", " ", "AND", " ", "TRANSMISSIVITY", 
    "\[IndentingNewLine]", 
    RowBox[{"OUPUT", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "IS", " ", "TRANSMISSIVITY", " ", 
    "MATRIX", "\[IndentingNewLine]", 
    RowBox[{"OUPUT", "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", "IS", " ", "REFLECTIVITY", " ", 
    "MATRIX"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"stackRefExperiment2RT", "[", 
     RowBox[{"\[Omega]_", ",", "p_", ",", 
      RowBox[{"CijsAnd\[Rho]", ":", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}], 
         ".."}], "}"}]}], ",", " ", "d_List"}], "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ArrayQ", "[", "d", "]"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "d"}], "\[Equal]", 
        RowBox[{"Length", "@", "CijsAnd\[Rho]"}]}], ")"}]}], ")"}]}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "qABArray", ",", " ", "L1ar", ",", "L2ar", ",", " ", "L12Array", ",", 
       "CArray", ",", "DArray", ",", "refArray", ",", " ", "transArray", ",", 
       " ", "phaseArray", ",", " ", "foldArray", ",", "fR", ",", "fT"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"qABArray", ",", " ", "L1ar", ",", " ", "L2ar"}], "}"}], "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"qL", "[", 
           RowBox[{"#", ",", "p"}], "]"}], "&"}], "/@", "CijsAnd\[Rho]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"L12Array", "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"L1ar", ",", " ", "L2ar"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"CArray", ",", "DArray"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"#1", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], ".", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"#1", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ".", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RotateLeft", "@", "L12Array"}], ",", "L12Array"}], 
           "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"transArray", " ", ",", " ", "refArray"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Transpose", "@", 
               RowBox[{"Inverse", "[", 
                RowBox[{"#1", "+", "#2"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"(", 
                RowBox[{"#1", "-", "#2"}], ")"}], "]"}], ".", 
              RowBox[{"Transpose", "@", 
               RowBox[{"Inverse", "[", 
                RowBox[{"#1", "+", "#2"}], "]"}]}]}]}], "}"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"CArray", ",", " ", "DArray"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"phaseArray", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]", 
           RowBox[{"(", 
            RowBox[{"qABArray", " ", "d"}], ")"}]}], "]"}], "-", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.", ",", "1."}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.", ",", "0."}], "}"}]}], "}"}], ",", 
           RowBox[{"Length", "[", "d", "]"}]}], "]"}]}], "//", "Chop"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"foldArray", "=", 
       RowBox[{"Reverse", "@", 
        RowBox[{"Most", "@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
           "}"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fR", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#4", ".", 
          RowBox[{"(", 
           RowBox[{"#3", "+", 
            RowBox[{
             RowBox[{"Transpose", "[", "#2", "]"}], ".", "#1", ".", 
             RowBox[{"Inverse", "[", 
              RowBox[{
               RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
               RowBox[{"#3", ".", "#1"}]}], "]"}], ".", "#2"}]}], ")"}], ".", 
          "#4"}], ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fT", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#1", ".", 
          RowBox[{"Inverse", "[", 
           RowBox[{
            RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
            RowBox[{"#3", ".", 
             RowBox[{"fR", "[", 
              RowBox[{"#5", ",", "#2", ",", "#3", ",", "#4"}], "]"}]}]}], 
           "]"}], ".", "#2", ".", "#4"}], ")"}], "&"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Fold", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"fT", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"#1", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"fR", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
        "foldArray"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7481609483712664`*^9, 3.7481610455785456`*^9}, 
   3.748163577713608*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"b17b506d-5a69-45d1-a8d1-10e9d1f14517"],

Cell[BoxData[
 RowBox[{"<<", "CompiledFunctionTools`"}]], "Input",
 CellChangeTimes->{{3.747732866491877*^9, 3.7477328664936132`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ba1d8ada-d434-4775-b72f-6e205d1c62e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stackRefExperiment", "[", 
    RowBox[{"\[Omega]_", ",", "p_", ",", 
     RowBox[{"CijsAnd\[Rho]", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}], ".."}],
        "}"}]}], ",", " ", "d_List"}], "]"}], "/;", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ArrayQ", "[", "d", "]"}], "&&", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Length", "@", "d"}], "\[Equal]", 
       RowBox[{"Length", "@", "CijsAnd\[Rho]"}]}], ")"}]}], ")"}]}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "qABArray", ",", " ", "L12Array", ",", "CArray", ",", "DArray", ",", 
      "refArray", ",", " ", "transArray", ",", " ", "phaseArray", ",", " ", 
      "foldArray", ",", "f"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qABArray", ",", " ", "L12Array"}], "}"}], "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"GetLStovasUrsin", "[", 
          RowBox[{"#", ",", "p"}], "]"}], "&"}], "/@", "CijsAnd\[Rho]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"CArray", ",", "DArray"}], "}"}], "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
        RowBox[{
>>>>>>> Stashed changes
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"#1", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], ".", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"#1", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ".", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
<<<<<<< Updated upstream
           RowBox[{
            RowBox[{"RotateLeft", "@", "L12Array"}], ",", "L12Array"}], 
           "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"transArray", " ", ",", " ", "refArray"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Transpose", "@", 
               RowBox[{"Inverse", "[", 
                RowBox[{"#1", "+", "#2"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"(", 
                RowBox[{"#1", "-", "#2"}], ")"}], "]"}], ".", 
              RowBox[{"Transpose", "@", 
               RowBox[{"Inverse", "[", 
                RowBox[{"#1", "+", "#2"}], "]"}]}]}]}], "}"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"CArray", ",", " ", "DArray"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"phaseArray", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]", 
           RowBox[{"(", 
            RowBox[{"qABArray", " ", "d"}], ")"}]}], "]"}], "-", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.", ",", "1."}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.", ",", "0."}], "}"}]}], "}"}], ",", 
           RowBox[{"Length", "[", "d", "]"}]}], "]"}]}], "//", "Chop"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"foldArray", "=", 
       RowBox[{"Reverse", "@", 
        RowBox[{"Most", "@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
           "}"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"f", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#4", ".", 
          RowBox[{"(", 
           RowBox[{"#3", "+", 
            RowBox[{
             RowBox[{"Transpose", "[", "#2", "]"}], ".", "#1", ".", 
             RowBox[{"Inverse", "[", 
              RowBox[{
               RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
               RowBox[{"#3", ".", "#1"}]}], "]"}], ".", "#2"}]}], ")"}], ".", 
          "#4"}], ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Fold", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"#1", ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "foldArray"}], 
       "]"}]}]}], 
    RowBox[{"(*", 
     RowBox[{";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
       "}"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"foldArray", "=", 
      RowBox[{"Reverse", "@", 
       RowBox[{"Most", "@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
          "}"}], "]"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{";", "\[IndentingNewLine]", 
      RowBox[{"phaseArray", "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "\[Omega]", 
         RowBox[{"(", 
          RowBox[{"qABArray", " ", "d"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"foldArray", "=", 
       RowBox[{"Reverse", "@", 
        RowBox[{"Most", "@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
           "}"}], "]"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.748081217799539*^9, {3.74808129919536*^9, 3.748081302325453*^9}, {
   3.748081422927822*^9, 3.7480814596291533`*^9}, {3.748081642043152*^9, 
   3.748081644664382*^9}, {3.748081782122211*^9, 3.748081784711622*^9}, {
   3.748081930967084*^9, 3.7480819342779093`*^9}, {3.748081976603219*^9, 
   3.7480819898729773`*^9}, {3.748086023145913*^9, 3.748086026145265*^9}, {
   3.74808621596025*^9, 3.748086244741735*^9}, 3.748086304710166*^9, {
   3.748086369476879*^9, 3.7480865306598663`*^9}, {3.748086562986905*^9, 
   3.74808662037327*^9}, {3.748088584676117*^9, 3.748088585979105*^9}, {
   3.748088636397079*^9, 3.748088668964531*^9}, {3.748088753554801*^9, 
   3.748088778046401*^9}, {3.7480888238708143`*^9, 3.748088842760363*^9}, {
   3.748088905549971*^9, 3.748088907291031*^9}, {3.748160962079929*^9, 
   3.7481609652345247`*^9}, {3.7481610471357727`*^9, 3.74816105022423*^9}, {
   3.7481630759154453`*^9, 3.7481630866528378`*^9}, {3.748163219544882*^9, 
   3.748163222145549*^9}, {3.7481632971146483`*^9, 3.7481632994528513`*^9}, {
   3.748163417538108*^9, 3.7481634367791533`*^9}, {3.7481635675826693`*^9, 
   3.7481635678764524`*^9}, {3.748170546207245*^9, 3.7481705528408027`*^9}, {
   3.7484692096935673`*^9, 3.748469211509047*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"ddbe2a2b-33ab-4868-ae3c-17030ae9fe75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "BOTH", " ", "REFLECTIVITY", " ", "AND", " ", "TRANSMISSIVITY", 
    "\[IndentingNewLine]", 
    RowBox[{"OUPUT", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "IS", " ", "TRANSMISSIVITY", " ", 
    "MATRIX", "\[IndentingNewLine]", 
    RowBox[{"OUPUT", "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", "IS", " ", "REFLECTIVITY", " ", 
    "MATRIX"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"stackRefExperiment2RT", "[", 
     RowBox[{"\[Omega]_", ",", "p_", ",", 
      RowBox[{"CijsAnd\[Rho]", ":", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}], 
         ".."}], "}"}]}], ",", " ", "d_List"}], "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ArrayQ", "[", "d", "]"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "@", "d"}], "\[Equal]", 
        RowBox[{"Length", "@", "CijsAnd\[Rho]"}]}], ")"}]}], ")"}]}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "qABArray", ",", " ", "L1ar", ",", "L2ar", ",", " ", "L12Array", ",", 
       "CArray", ",", "DArray", ",", "refArray", ",", " ", "transArray", ",", 
       " ", "phaseArray", ",", " ", "foldArray", ",", "fR", ",", "fT"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"qABArray", ",", " ", "L1ar", ",", " ", "L2ar"}], "}"}], "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"qL", "[", 
           RowBox[{"#", ",", "p"}], "]"}], "&"}], "/@", "CijsAnd\[Rho]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"L12Array", "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"L1ar", ",", " ", "L2ar"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"CArray", ",", "DArray"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"#1", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], ".", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"#1", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ".", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RotateLeft", "@", "L12Array"}], ",", "L12Array"}], 
           "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"transArray", " ", ",", " ", "refArray"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"2", 
              RowBox[{"Transpose", "@", 
               RowBox[{"Inverse", "[", 
                RowBox[{"#1", "+", "#2"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"(", 
                RowBox[{"#1", "-", "#2"}], ")"}], "]"}], ".", 
              RowBox[{"Transpose", "@", 
               RowBox[{"Inverse", "[", 
                RowBox[{"#1", "+", "#2"}], "]"}]}]}]}], "}"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"CArray", ",", " ", "DArray"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"phaseArray", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]", 
           RowBox[{"(", 
            RowBox[{"qABArray", " ", "d"}], ")"}]}], "]"}], "-", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.", ",", "1."}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1.", ",", "0."}], "}"}]}], "}"}], ",", 
           RowBox[{"Length", "[", "d", "]"}]}], "]"}]}], "//", "Chop"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"foldArray", "=", 
       RowBox[{"Reverse", "@", 
        RowBox[{"Most", "@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
           "}"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fR", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#4", ".", 
          RowBox[{"(", 
           RowBox[{"#3", "+", 
            RowBox[{
             RowBox[{"Transpose", "[", "#2", "]"}], ".", "#1", ".", 
             RowBox[{"Inverse", "[", 
              RowBox[{
               RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
               RowBox[{"#3", ".", "#1"}]}], "]"}], ".", "#2"}]}], ")"}], ".", 
          "#4"}], ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fT", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#1", ".", 
          RowBox[{"Inverse", "[", 
           RowBox[{
            RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
            RowBox[{"#3", ".", 
             RowBox[{"fR", "[", 
              RowBox[{"#5", ",", "#2", ",", "#3", ",", "#4"}], "]"}]}]}], 
           "]"}], ".", "#2", ".", "#4"}], ")"}], "&"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Fold", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"fT", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"#1", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"fR", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
        "foldArray"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7481609483712664`*^9, 3.7481610455785456`*^9}, 
   3.748163577713608*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"b17b506d-5a69-45d1-a8d1-10e9d1f14517"],

Cell[BoxData[
 RowBox[{"<<", "CompiledFunctionTools`"}]], "Input",
 CellChangeTimes->{{3.747732866491877*^9, 3.7477328664936132`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"ba1d8ada-d434-4775-b72f-6e205d1c62e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stackRefExperiment", "[", 
    RowBox[{"\[Omega]_", ",", "p_", ",", 
     RowBox[{"CijsAnd\[Rho]", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}], ".."}],
        "}"}]}], ",", " ", "d_List"}], "]"}], "/;", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ArrayQ", "[", "d", "]"}], "&&", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Length", "@", "d"}], "\[Equal]", 
       RowBox[{"Length", "@", "CijsAnd\[Rho]"}]}], ")"}]}], ")"}]}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "qABArray", ",", "L1ar", ",", "L2ar", ",", " ", "L12Array", ",", 
      "CArray", ",", "DArray", ",", "refArray", ",", " ", "transArray", ",", 
      " ", "phaseArray", ",", " ", "foldArray", ",", "f"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qABArray", ",", " ", "L1ar", ",", " ", "L2ar"}], "}"}], "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"GetLStovasUrsin", "[", 
          RowBox[{"#", ",", "p"}], "]"}], "&"}], "/@", "CijsAnd\[Rho]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"L12Array", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"L1ar", ",", " ", "L2ar"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"CArray", ",", "DArray"}], "}"}], "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"#1", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], ".", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ".", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RotateLeft", "@", "L12Array"}], ",", "L12Array"}], 
          "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"transArray", " ", ",", " ", "refArray"}], "}"}], "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Transpose", "@", 
              RowBox[{"Inverse", "[", 
               RowBox[{"#1", "+", "#2"}], "]"}]}]}], ",", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"(", 
               RowBox[{"#1", "-", "#2"}], ")"}], "]"}], ".", 
             RowBox[{"Transpose", "@", 
              RowBox[{"Inverse", "[", 
               RowBox[{"#1", "+", "#2"}], "]"}]}]}]}], "}"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"CArray", ",", " ", "DArray"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"phaseArray", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "\[Omega]", 
          RowBox[{"(", 
           RowBox[{"qABArray", " ", "d"}], ")"}]}], "]"}], "-", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.", ",", "1."}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.", ",", "0."}], "}"}]}], "}"}], ",", 
          RowBox[{"Length", "[", "d", "]"}]}], "]"}]}], "//", "Chop"}]}], ";",
      "\[IndentingNewLine]", 
=======
           RowBox[{"0", ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "#2"}], "]"}]}], 
           "}"}]}], "}"}], "&"}], "@@@", 
       RowBox[{"(", 
        RowBox[{"qABArray", " ", "d"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
>>>>>>> Stashed changes
     RowBox[{"foldArray", "=", 
      RowBox[{"Reverse", "@", 
       RowBox[{"Most", "@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
          "}"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#4", ".", 
         RowBox[{"(", 
          RowBox[{"#3", "+", 
           RowBox[{
            RowBox[{"Transpose", "[", "#2", "]"}], ".", "#1", ".", 
            RowBox[{"Inverse", "[", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
              RowBox[{"#3", ".", "#1"}]}], "]"}], ".", "#2"}]}], ")"}], ".", 
         "#4"}], ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "foldArray"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.74763675587466*^9, 3.7476368963729887`*^9}, {
   3.747636971421583*^9, 3.74763697620394*^9}, {3.7476370169864683`*^9, 
   3.747637030129373*^9}, {3.747637075327847*^9, 3.74763707915868*^9}, {
   3.7476371737751513`*^9, 3.747637233082361*^9}, {3.747637264403428*^9, 
   3.747637269945384*^9}, {3.747637318681024*^9, 3.7476373274553127`*^9}, {
   3.747637370191145*^9, 3.747637382438341*^9}, {3.747637431951044*^9, 
   3.747637447339295*^9}, {3.7476375266187983`*^9, 3.74763752935212*^9}, {
   3.747637563989428*^9, 3.747637657899994*^9}, {3.7476377071097527`*^9, 
   3.747637748600946*^9}, {3.747637781124876*^9, 3.7476378000402193`*^9}, {
   3.747638026234003*^9, 3.747638028680345*^9}, {3.748088530492985*^9, 
   3.748088532865138*^9}, 3.748088619825428*^9, {3.748088681992937*^9, 
   3.7480886889153433`*^9}, {3.748088739441575*^9, 3.7480887406021852`*^9}, {
   3.748088788105398*^9, 3.748088790867527*^9}, {3.748088856602511*^9, 
<<<<<<< Updated upstream
   3.748088892020687*^9}, {3.7481868952940493`*^9, 3.748186898316882*^9}, {
   3.748186990156733*^9, 3.7481869986466093`*^9}, 3.748187041228713*^9, {
   3.7481870910492163`*^9, 3.748187109622216*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"e634895c-37b0-4e69-9eac-21794dc36da3"],
=======
   3.748088892020687*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"e634895c-37b0-4e69-9eac-21794dc36da3"],
>>>>>>> Stashed changes

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stackRefTransCoefs", "[", 
    RowBox[{"\[Omega]_", ",", "p_", ",", 
     RowBox[{"CijsAnd\[Rho]", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}], ".."}],
        "}"}]}], ",", " ", "d_List"}], "]"}], "/;", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ArrayQ", "[", "d", "]"}], "&&", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Length", "@", "d"}], "\[Equal]", 
       RowBox[{"Length", "@", "CijsAnd\[Rho]"}]}], ")"}]}], ")"}]}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
<<<<<<< Updated upstream
     "qABArray", ",", "L1ar", ",", "L2ar", ",", " ", "L12Array", ",", 
      "CArray", ",", "DArray", ",", "refArray", ",", " ", "transArray", ",", 
      " ", "phaseArray", ",", " ", "foldArray", ",", "f"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qABArray", ",", " ", "L1ar", ",", " ", "L2ar"}], "}"}], "=", 
=======
     "qABArray", ",", " ", "L12Array", ",", "CArray", ",", "DArray", ",", 
      "refArray", ",", " ", "transArray", ",", " ", "phaseArray", ",", " ", 
      "foldArray", ",", "f"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"qABArray", ",", " ", "L12Array"}], "}"}], "=", 
>>>>>>> Stashed changes
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"GetLStovasUrsin", "[", 
          RowBox[{"#", ",", "p"}], "]"}], "&"}], "/@", "CijsAnd\[Rho]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
<<<<<<< Updated upstream
     RowBox[{"L12Array", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{"L1ar", ",", " ", "L2ar"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
=======
>>>>>>> Stashed changes
     RowBox[{"CArray", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
<<<<<<< Updated upstream
         RowBox[{
          RowBox[{"Transpose", "[", "#1", "]"}], ".", "#2"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RotateLeft", "@", 
           RowBox[{"L12Array", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ",", 
          RowBox[{"L12Array", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DArray", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", "#1", "]"}], ".", "#2"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RotateLeft", "@", 
           RowBox[{"L12Array", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"L12Array", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"transArray", "=", 
      RowBox[{"2", 
       RowBox[{"Transpose", "/@", " ", 
        RowBox[{"Inverse", "/@", 
         RowBox[{"(", 
          RowBox[{"CArray", "+", "DArray"}], ")"}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"refArray", "=", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", ".", "#2"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "/@", 
            RowBox[{"(", 
             RowBox[{"CArray", "-", "DArray"}], ")"}]}], ",", "transArray"}], 
          "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phaseArray", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "\[Omega]", 
          RowBox[{"(", 
           RowBox[{"qABArray", " ", "d"}], ")"}]}], "]"}], "-", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.", ",", "1."}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.", ",", "0."}], "}"}]}], "}"}], ",", 
          RowBox[{"Length", "[", "d", "]"}]}], "]"}]}], "//", "Chop"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"foldArray", "=", 
      RowBox[{"Reverse", "@", 
       RowBox[{"Most", "@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
          "}"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#4", ".", 
         RowBox[{"(", 
          RowBox[{"#3", "+", 
           RowBox[{
            RowBox[{"Transpose", "[", "#2", "]"}], ".", "#1", ".", 
            RowBox[{"Inverse", "[", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
              RowBox[{"#3", ".", "#1"}]}], "]"}], ".", "#2"}]}], ")"}], ".", 
         "#4"}], ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "foldArray"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.747555608005961*^9, 3.747555753258423*^9}, {
   3.747555890171571*^9, 3.747555956081686*^9}, {3.7475559989224043`*^9, 
   3.747556010129097*^9}, {3.7475562169802322`*^9, 3.747556227697433*^9}, {
   3.747556262008429*^9, 3.747556275271633*^9}, {3.74755644140516*^9, 
   3.7475565038880663`*^9}, {3.747556568375897*^9, 3.7475566217811413`*^9}, {
   3.747556803662681*^9, 3.74755683391006*^9}, {3.747556909363254*^9, 
   3.747557064398746*^9}, {3.74755709551928*^9, 3.7475571019973927`*^9}, {
   3.7475571482302094`*^9, 3.747557251121316*^9}, {3.747557284736432*^9, 
   3.74755733467837*^9}, {3.7475574320141163`*^9, 3.747557455770465*^9}, 
   3.74755909948695*^9, {3.747559130539483*^9, 3.7475591464717073`*^9}, {
   3.747559184121533*^9, 3.7475592363563347`*^9}, {3.7475592858781147`*^9, 
   3.7475592862246532`*^9}, {3.7475593559957037`*^9, 3.747559357057309*^9}, {
   3.747559440481435*^9, 3.747559441935639*^9}, {3.747559955960231*^9, 
   3.74755995622073*^9}, {3.747560016956656*^9, 3.747560017411149*^9}, {
   3.7475653651631823`*^9, 3.7475653899353456`*^9}, 3.747565504662695*^9, {
   3.747565546939814*^9, 3.7475656047526197`*^9}, {3.747565674344746*^9, 
   3.74756573440341*^9}, 3.747565851988043*^9, 3.747565935376108*^9, {
   3.747566001214603*^9, 3.747566002403901*^9}, {3.7475678804049664`*^9, 
   3.7475678829036093`*^9}, {3.747568067711347*^9, 3.747568072764374*^9}, {
   3.747568145324336*^9, 3.747568152202157*^9}, {3.7475684197794333`*^9, 
   3.74756848637429*^9}, {3.747568671265724*^9, 3.7475686903198853`*^9}, {
   3.747568794837668*^9, 3.747568848682014*^9}, {3.7475689100827503`*^9, 
   3.7475689277440166`*^9}, {3.7475690289583473`*^9, 3.747569137905196*^9}, {
   3.747569208282239*^9, 3.747569331899601*^9}, {3.747569366235539*^9, 
   3.747569439518632*^9}, {3.747569482096428*^9, 3.747569507317397*^9}, {
   3.7475695623891077`*^9, 3.747569567243656*^9}, {3.747569602586689*^9, 
   3.747569628825963*^9}, {3.7475698641884623`*^9, 3.7475698923139563`*^9}, {
   3.747570001710972*^9, 3.74757000215718*^9}, {3.7475700505319357`*^9, 
   3.74757007985842*^9}, {3.7475702110000877`*^9, 3.747570213799655*^9}, {
   3.7475705607073708`*^9, 3.747570580019402*^9}, 3.747570652325571*^9, {
   3.747571233441557*^9, 3.7475712876118717`*^9}, {3.7475713271898823`*^9, 
   3.747571331362451*^9}, {3.747571439152083*^9, 3.747571584418634*^9}, {
   3.747571624929181*^9, 3.7475717654290743`*^9}, 3.747571859895982*^9, {
   3.747571917376864*^9, 3.747571955535079*^9}, 3.747572001028906*^9, {
   3.747635038476562*^9, 3.747635060912736*^9}, {3.747635096908558*^9, 
   3.747635106509342*^9}, {3.747635229395138*^9, 3.747635249218822*^9}, {
   3.747635308564817*^9, 3.74763533422733*^9}, {3.7481632768037677`*^9, 
   3.7481632859981585`*^9}, {3.7481634207416067`*^9, 
   3.7481634395865984`*^9}, {3.7481635735896416`*^9, 3.7481635745331507`*^9}, 
   3.748186912075914*^9, {3.748187011694622*^9, 3.748187044718749*^9}, {
   3.748187086778679*^9, 3.748187107501587*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"d1b0567f-ffd6-4ec6-b5d3-fa7ac7bae802"]
}, Closed]],
=======
         RowBox[{
          RowBox[{"Transpose", "[", "#1", "]"}], ".", "#2"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RotateLeft", "@", 
           RowBox[{"L12Array", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ",", 
          RowBox[{"L12Array", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DArray", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", "#1", "]"}], ".", "#2"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RotateLeft", "@", 
           RowBox[{"L12Array", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"L12Array", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"transArray", "=", 
      RowBox[{"2", 
       RowBox[{"Transpose", "/@", " ", 
        RowBox[{"Inverse", "/@", 
         RowBox[{"(", 
          RowBox[{"CArray", "+", "DArray"}], ")"}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"refArray", "=", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", ".", "#2"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Transpose", "/@", 
            RowBox[{"(", 
             RowBox[{"CArray", "-", "DArray"}], ")"}]}], ",", "transArray"}], 
          "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phaseArray", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "#1"}], "]"}], 
            ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "#2"}], "]"}]}], 
           "}"}]}], "}"}], "&"}], "@@@", 
       RowBox[{"(", 
        RowBox[{"qABArray", " ", "d"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"foldArray", "=", 
      RowBox[{"Reverse", "@", 
       RowBox[{"Most", "@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"transArray", ",", "refArray", ",", " ", "phaseArray"}], 
          "}"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#4", ".", 
         RowBox[{"(", 
          RowBox[{"#3", "+", 
           RowBox[{
            RowBox[{"Transpose", "[", "#2", "]"}], ".", "#1", ".", 
            RowBox[{"Inverse", "[", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "2", "]"}], "+", 
              RowBox[{"#3", ".", "#1"}]}], "]"}], ".", "#2"}]}], ")"}], ".", 
         "#4"}], ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "foldArray"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.747555608005961*^9, 3.747555753258423*^9}, {
   3.747555890171571*^9, 3.747555956081686*^9}, {3.7475559989224043`*^9, 
   3.747556010129097*^9}, {3.7475562169802322`*^9, 3.747556227697433*^9}, {
   3.747556262008429*^9, 3.747556275271633*^9}, {3.74755644140516*^9, 
   3.7475565038880663`*^9}, {3.747556568375897*^9, 3.7475566217811413`*^9}, {
   3.747556803662681*^9, 3.74755683391006*^9}, {3.747556909363254*^9, 
   3.747557064398746*^9}, {3.74755709551928*^9, 3.7475571019973927`*^9}, {
   3.7475571482302094`*^9, 3.747557251121316*^9}, {3.747557284736432*^9, 
   3.74755733467837*^9}, {3.7475574320141163`*^9, 3.747557455770465*^9}, 
   3.74755909948695*^9, {3.747559130539483*^9, 3.7475591464717073`*^9}, {
   3.747559184121533*^9, 3.7475592363563347`*^9}, {3.7475592858781147`*^9, 
   3.7475592862246532`*^9}, {3.7475593559957037`*^9, 3.747559357057309*^9}, {
   3.747559440481435*^9, 3.747559441935639*^9}, {3.747559955960231*^9, 
   3.74755995622073*^9}, {3.747560016956656*^9, 3.747560017411149*^9}, {
   3.7475653651631823`*^9, 3.7475653899353456`*^9}, 3.747565504662695*^9, {
   3.747565546939814*^9, 3.7475656047526197`*^9}, {3.747565674344746*^9, 
   3.74756573440341*^9}, 3.747565851988043*^9, 3.747565935376108*^9, {
   3.747566001214603*^9, 3.747566002403901*^9}, {3.7475678804049664`*^9, 
   3.7475678829036093`*^9}, {3.747568067711347*^9, 3.747568072764374*^9}, {
   3.747568145324336*^9, 3.747568152202157*^9}, {3.7475684197794333`*^9, 
   3.74756848637429*^9}, {3.747568671265724*^9, 3.7475686903198853`*^9}, {
   3.747568794837668*^9, 3.747568848682014*^9}, {3.7475689100827503`*^9, 
   3.7475689277440166`*^9}, {3.7475690289583473`*^9, 3.747569137905196*^9}, {
   3.747569208282239*^9, 3.747569331899601*^9}, {3.747569366235539*^9, 
   3.747569439518632*^9}, {3.747569482096428*^9, 3.747569507317397*^9}, {
   3.7475695623891077`*^9, 3.747569567243656*^9}, {3.747569602586689*^9, 
   3.747569628825963*^9}, {3.7475698641884623`*^9, 3.7475698923139563`*^9}, {
   3.747570001710972*^9, 3.74757000215718*^9}, {3.7475700505319357`*^9, 
   3.74757007985842*^9}, {3.7475702110000877`*^9, 3.747570213799655*^9}, {
   3.7475705607073708`*^9, 3.747570580019402*^9}, 3.747570652325571*^9, {
   3.747571233441557*^9, 3.7475712876118717`*^9}, {3.7475713271898823`*^9, 
   3.747571331362451*^9}, {3.747571439152083*^9, 3.747571584418634*^9}, {
   3.747571624929181*^9, 3.7475717654290743`*^9}, 3.747571859895982*^9, {
   3.747571917376864*^9, 3.747571955535079*^9}, 3.747572001028906*^9, {
   3.747635038476562*^9, 3.747635060912736*^9}, {3.747635096908558*^9, 
   3.747635106509342*^9}, {3.747635229395138*^9, 3.747635249218822*^9}, {
   3.747635308564817*^9, 3.74763533422733*^9}, {3.7481632768037677`*^9, 
   3.7481632859981585`*^9}, {3.7481634207416067`*^9, 
   3.7481634395865984`*^9}, {3.7481635735896416`*^9, 3.7481635745331507`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"d1b0567f-ffd6-4ec6-b5d3-fa7ac7bae802"]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical testing", "Subsection",
 CellChangeTimes->{{3.747376755757457*^9, 3.747376792529705*^9}, {
  3.747376913761466*^9, 3.747376930176058*^9}, {3.7481610690736427`*^9, 
  3.7481610746062107`*^9}},ExpressionUUID->"b9a0e559-e977-4bcb-84fe-\
98ea291bb321"],

Cell[BoxData[
 RowBox[{
  RowBox[{"binarymodel", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", "shale", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "22.56", ",", "12.38", ",", "17.35", ",", "3.15", ",", "2.38", ",", 
       "100", ",", "50"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "sandstone", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "26.73", ",", "12.51", ",", "26.73", ",", "7.11", ",", "2.22", ",", 
       "150", ",", "100"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "siltstone", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "60.13", ",", "38.26", ",", "50.87", ",", "17.17", ",", "2.18", ",", 
       "100", ",", "50"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7481611395428357`*^9, 3.74816114136067*^9}, {
  3.7481614526313667`*^9, 3.7481614529752817`*^9}, {3.7481644609993825`*^9, 
  3.74816446428913*^9}},ExpressionUUID->"30278ee1-bdad-494f-9f36-\
cc8013096086"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nrep", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"binarymodel", ",", 
       RowBox[{"{", "nrep", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"nrep", ",", "7"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7481611496035876`*^9, 3.748161153853909*^9}, 
   3.748161264759799*^9, {3.7481621473691998`*^9, 3.7481621499931464`*^9}, 
   3.748163637061421*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"1aecccf8-5f85-4b1f-b1eb-625ef29d538c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "2018", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dList", "=", 
   RowBox[{
    RowBox[{"ArrayPad", "[", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", ".1"}], "}"}], ",", 
        RowBox[{
         RowBox[{"Length", "[", "model", "]"}], "-", "2"}]}], "]"}], ",", 
      "1"}], "]"}], "/", "1000"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7481611634183226`*^9, 3.7481612157705317`*^9}, {
   3.748162118267109*^9, 3.7481621189177914`*^9}, 3.748162300895407*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"898e37d1-7bf3-4bac-a58d-fb2477340795"],
>>>>>>> Stashed changes

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Omega]comp", "=", 
   RowBox[{"2", " ", "Pi", " ", "40"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.748161236448517*^9, 3.7481612400541043`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"c2d0bc3b-209a-48e9-b6da-a30cb59aeb98"],

<<<<<<< Updated upstream
Cell["Time-domain description", "Subsection",
 CellChangeTimes->{{3.747376755757457*^9, 3.747376792529705*^9}, {
  3.747376913761466*^9, 3.747376930176058*^9}, {3.748161080898367*^9, 
  3.748161122293969*^9}, {3.7481659473532043`*^9, 
  3.7481659558528643`*^9}},ExpressionUUID->"24e23425-c5be-4b69-8a20-\
615758d6bc01"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"addSrcRec", "[", 
    RowBox[{"RT_", ",", "\[Omega]_", ",", "zs_", ",", "zr_", ",", "qAB1_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
=======
Cell[BoxData[
 RowBox[{
  RowBox[{"cijsNum", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"cijCarcione", "[", 
      RowBox[{"#", ",", "150", ",", "\[Omega]comp"}], " ", "]"}], "&"}], "/@",
     "model"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7475597918221493`*^9, 3.7475598050885572`*^9}, {
  3.748161277456563*^9, 3.7481612885781593`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"7ef98c1f-0395-4684-a56f-cc3e59384db1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "=", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
>>>>>>> Stashed changes
    RowBox[{
     RowBox[{"{", "exp", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
<<<<<<< Updated upstream
      RowBox[{
       RowBox[{"exp", "[", "z_", "]"}], ":=", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", "z", " ", "qAB1"}], 
         "]"}], "-", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"exp", "[", "zr", "]"}], ".", "RT", ".", 
         RowBox[{"exp", "[", "zs", "]"}]}], "//", "N"}], "//", "Chop"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "NOTE", " ", "THAT", " ", "RPP", " ", "IS", " ", "TAKEN", " ", "FOR", " ", 
    "INTEGRATION", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "after", " ", "the", " ", 
      "StackRefExperiment", " ", "function"}], ")"}]}], "\[IndentingNewLine]",
    "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"integrandp", "[", 
    RowBox[{"x_", ",", 
     RowBox[{"p_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Omega]_", "?", "NumericQ"}], ",", 
     RowBox[{"CijsAnd\[Rho]", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}], ".."}],
        "}"}]}], ",", "dList_", ",", "zs_", ",", "zr_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p0", "=", "p"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"addSrcRec", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"stackRefExperiment2", "[", 
          RowBox[{
          "\[Omega]", ",", "p0", ",", "CijsAnd\[Rho]", ",", " ", "dList"}], 
          "]"}], ",", "\[Omega]", ",", "zs", ",", "zr", ",", 
         RowBox[{
          RowBox[{"qL", "[", 
           RowBox[{
            RowBox[{"CijsAnd\[Rho]", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "p0"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{"x", " ", "p0", " ", "\[Omega]"}]}], "]"}], "p0", " ", 
      SuperscriptBox["\[Omega]", "2"]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
=======
      RowBox[{"Im", "@", 
       RowBox[{
        RowBox[{"stackRefExperiment2", "[", 
         RowBox[{
         "\[Omega]comp", ",", "p", ",", "cijsNum", ",", " ", "dList"}], "]"}],
         "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "p", " ", 
      SuperscriptBox["\[Omega]comp", "2"], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"1", ",", 
        RowBox[{"x", " ", "p", " ", "\[Omega]comp"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Full"}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7481619944845076`*^9, 3.7481621092311554`*^9}, {
  3.7481621586882668`*^9, 3.748162278771578*^9}, {3.7481623128361588`*^9, 
  3.748162378558922*^9}, {3.74816261713986*^9, 3.7481626425103235`*^9}, {
  3.7481626967756433`*^9, 3.748162698394926*^9}, {3.748163659534176*^9, 
  3.7481636990522585`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"e5cf36f5-c503-4f30-a30a-72d9d477ab14"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
p/jqxgbGr3s2aV/n7dH/8SRF9Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$32511#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 4.999999897959183}, {-2379.9753385389768`, 
   7268.578666573647}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7481623102533154`*^9, 3.7481623799747486`*^9}, {
   3.7481626208888297`*^9, 3.748162643775688*^9}, 3.748163584557807*^9, {
   3.748163647334737*^9, 3.7481637063215885`*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"7e151dac-83b8-476a-b594-5faee213568f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "=", "100"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"NIntegrate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"stackRefExperiment2", "[", 
        RowBox[{"\[Omega]comp", ",", "p", ",", "cijsNum", ",", " ", "dList"}],
         "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "p", " ", 
      SuperscriptBox["\[Omega]comp", "2"], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"1", ",", 
        RowBox[{"x", " ", "p", " ", "\[Omega]comp"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "10000"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}], ",", 
        RowBox[{"\"\<MaxErrorIncreases\>\"", "\[Rule]", "2000"}]}], "}"}]}], 
     ",", 
     RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "60"}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", "8"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "Infinity"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.748162656245847*^9, 3.748162743352501*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"ea8c2e57-8741-47c2-bcae-0902e2194e90"],

Cell[BoxData[
 TemplateBox[{
  "CompiledFunction","cfsa",
   "\"Argument \\!\\(\\*RowBox[{\\\"p\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) should be a \
\\!\\(\\*RowBox[{\\\"\\\\\\\"machine-size real number\\\\\\\"\\\"}]\\).\"",2,
   43,23,27110895998980422308,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.748162730597555*^9, 3.7481627436362267`*^9}},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"93e5dfcd-1d03-460b-978f-afcc7b0b2493"],

Cell[BoxData[
 TemplateBox[{
  "CompiledFunction","cfsa",
   "\"Argument \\!\\(\\*RowBox[{\\\"p\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) should be a \
\\!\\(\\*RowBox[{\\\"\\\\\\\"machine-size real number\\\\\\\"\\\"}]\\).\"",2,
   43,24,27110895998980422308,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.748162730597555*^9, 3.7481627436833506`*^9}},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"2dcc11bf-65d4-4570-a552-507b0e07c8be"],

Cell[BoxData[
 TemplateBox[{
  "CompiledFunction","cfsa",
   "\"Argument \\!\\(\\*RowBox[{\\\"p\\\"}]\\) at position \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) should be a \
\\!\\(\\*RowBox[{\\\"\\\\\\\"machine-size real number\\\\\\\"\\\"}]\\).\"",2,
   43,25,27110895998980422308,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.748162730597555*^9, 3.7481627437064133`*^9}},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"6c936bda-790e-4204-ba1b-f75768adb45a"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"CompiledFunction\\\", \
\\\"::\\\", \\\"cfsa\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,43,26,27110895998980422308,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.748162730597555*^9, 3.7481627437334847`*^9}},
 CellLabel->
  "During evaluation of \
In[43]:=",ExpressionUUID->"df3bed8b-ec17-4343-99d4-682d770acf17"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.74816270310144*^9, 3.748162745064022*^9}},
 CellLabel->"Out[43]=",ExpressionUUID->"2a4d7d34-642a-406b-bd90-97d9aa1eaa86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"RepeatedTiming", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"stackRefExperiment2", "[", 
          RowBox[{"\[Omega]comp", ",", "p", ",", "cijsNum", ",", "dList"}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "0", ",", "1", ",", ".01"}], "}"}]}], "]"}], ",", 
      "10"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RepeatedTiming", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"stackRefExperiment2RT", "[", 
          RowBox[{"\[Omega]comp", ",", "p", ",", "cijsNum", ",", "dList"}], 
          "]"}], ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "0", ",", "1", ",", ".01"}], "}"}]}], "]"}], ",", 
      "10"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7481616039627705`*^9, 3.7481616750780735`*^9}, {
  3.7481617218835335`*^9, 3.7481617228260403`*^9}, {3.7481617556222677`*^9, 
  3.7481617648748517`*^9}, {3.748161812385187*^9, 3.7481618570377207`*^9}, {
  3.7481619704618998`*^9, 3.7481619737917128`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"cb63265d-9771-4015-b0d2-2b6b28ca1a07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6933305036665957655`3.", ",", "0.9842892682233850277`2."}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.74816160443603*^9, 3.7481616581228285`*^9}, {
   3.7481617199925065`*^9, 3.748161733080308*^9}, 3.7481618360400877`*^9, 
   3.7481618676578283`*^9, 3.748161995347761*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"5661e5ec-3476-462d-9603-2ce5a658b31f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Stovas and Ursin (2003) and Ursin and Stovas (2002) reflectivity examples\
\>", "Section",
 CellChangeTimes->{{3.7473773381799393`*^9, 3.747377347721385*^9}, {
  3.7473810680377293`*^9, 3.747381088021717*^9}, {3.747387221887478*^9, 
  3.747387230470008*^9}},ExpressionUUID->"a7709b23-ba22-4f44-8d10-\
6a9e0601c295"],

Cell[CellGroupData[{

Cell["Single interface reflectivity", "Subsection",
 CellChangeTimes->{{3.74737706065038*^9, 
  3.747377091039295*^9}},ExpressionUUID->"722ba902-75ea-441d-9400-\
c7e60c355260"],

Cell["Requires precomputed L1/L2 matrices and vertical slowness", "CodeText",
 CellChangeTimes->{{3.747377094531076*^9, 
  3.7473771281059017`*^9}},ExpressionUUID->"2c812491-40d7-4377-90b4-\
01e89ef4746f"],

Cell[BoxData[
>>>>>>> Stashed changes
 RowBox[{
  RowBox[{"integrandk", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"k_", "?", "NumericQ"}], ",", 
    RowBox[{"\[Omega]_", "?", "NumericQ"}], ",", 
    RowBox[{"CijsAnd\[Rho]", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}], ".."}], 
      "}"}]}], ",", "dList_", ",", "zs_", ",", "zr_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k0", "=", 
      RowBox[{"1000", "k"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"addSrcRec", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"stackRefExperiment2", "[", 
         RowBox[{"\[Omega]", ",", 
          FractionBox["k0", "\[Omega]"], ",", "CijsAnd\[Rho]", ",", " ", 
          "dList"}], "]"}], ",", "\[Omega]", ",", "zs", ",", "zr", ",", 
        RowBox[{
         RowBox[{"qL", "[", 
          RowBox[{
           RowBox[{"CijsAnd\[Rho]", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           FractionBox["k0", "\[Omega]"]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"x", " ", "k0"}]}], "]"}], "k0"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.748081217799539*^9, {3.74808129919536*^9, 3.748081302325453*^9}, {
   3.748081422927822*^9, 3.7480814596291533`*^9}, {3.748081642043152*^9, 
   3.748081644664382*^9}, {3.748081782122211*^9, 3.748081784711622*^9}, {
   3.748081930967084*^9, 3.7480819342779093`*^9}, {3.748081976603219*^9, 
   3.7480819898729773`*^9}, {3.748086023145913*^9, 3.748086026145265*^9}, {
   3.74808621596025*^9, 3.748086244741735*^9}, 3.748086304710166*^9, {
   3.748086369476879*^9, 3.7480865306598663`*^9}, {3.748086562986905*^9, 
   3.74808662037327*^9}, {3.748088584676117*^9, 3.748088585979105*^9}, {
   3.748088636397079*^9, 3.748088668964531*^9}, {3.748088753554801*^9, 
   3.748088778046401*^9}, {3.7480888238708143`*^9, 3.748088842760363*^9}, {
   3.748088905549971*^9, 3.748088907291031*^9}, {3.748160962079929*^9, 
   3.7481609652345247`*^9}, {3.7481610471357727`*^9, 3.74816105022423*^9}, {
   3.7481630759154453`*^9, 3.7481630866528378`*^9}, {3.748163219544882*^9, 
   3.748163222145549*^9}, {3.7481632971146483`*^9, 3.7481632994528513`*^9}, {
   3.748163417538108*^9, 3.7481634367791533`*^9}, {3.7481635675826693`*^9, 
   3.7481635678764524`*^9}, {3.748165960437085*^9, 3.748166111836695*^9}, {
   3.7481661810320673`*^9, 3.7481662586509895`*^9}, {3.7481686789651327`*^9, 
   3.748168681848782*^9}, {3.748169564981106*^9, 3.748169575228354*^9}, {
   3.7481696316523905`*^9, 3.7481696803960047`*^9}, {3.748170220641249*^9, 
   3.748170222872183*^9}, {3.748188455821892*^9, 3.7481884734756517`*^9}, {
   3.748188506792981*^9, 3.7481885083149757`*^9}, {3.748188542359837*^9, 
   3.7481886916278677`*^9}, {3.748188727916415*^9, 3.748188751986814*^9}, {
   3.748188839251871*^9, 3.748188840004078*^9}, {3.748188922435025*^9, 
   3.748188959426744*^9}, {3.7481890304654293`*^9, 3.7481890310046463`*^9}, {
   3.748189150303624*^9, 3.74818916389394*^9}, {3.748189228633381*^9, 
   3.748189228784087*^9}, {3.748189286421384*^9, 3.7481893305900393`*^9}, {
   3.748189379862699*^9, 3.748189423281727*^9}, {3.748189461287429*^9, 
   3.7481894688440447`*^9}, {3.7482523148813334`*^9, 3.748252316690002*^9}, 
   3.7482533193707657`*^9, {3.748253724340501*^9, 3.7482537628951426`*^9}, {
   3.748467241944826*^9, 3.748467243544701*^9}, {3.748468754091114*^9, 
   3.7484687548707647`*^9}, {3.748469227575811*^9, 3.748469231932229*^9}, {
   3.7484701380228024`*^9, 3.7484701392452097`*^9}, 3.748470530107772*^9, {
   3.748471107604259*^9, 3.748471116904315*^9}, 3.748627239606888*^9, {
   3.748627303821944*^9, 3.74862734005015*^9}, {3.748627618467058*^9, 
   3.7486276469034767`*^9}, {3.748627886217473*^9, 3.748627886632139*^9}, {
   3.7486283632579517`*^9, 3.74862836377284*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"6efafe00-0bd2-4936-85d3-c4e30adbbf6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical testing", "Subsection",
 CellChangeTimes->{{3.747376755757457*^9, 3.747376792529705*^9}, {
  3.747376913761466*^9, 3.747376930176058*^9}, {3.7481610690736427`*^9, 
  3.7481610746062107`*^9}},ExpressionUUID->"b9a0e559-e977-4bcb-84fe-\
98ea291bb321"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"overburden", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
<<<<<<< Updated upstream
        RowBox[{
         SuperscriptBox["vp", "2"], "den"}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["vp", "2"], "den"}], "-", 
         RowBox[{"2", 
          SuperscriptBox["vs", "2"], "den"}]}], ",", 
        RowBox[{
         SuperscriptBox["vp", "2"], "den"}], ",", 
        RowBox[{
         SuperscriptBox["vs", "2"], "den"}], ",", "den", ",", "500", ",", 
        "500"}], "}"}], "/.", 
      RowBox[{"vp", "\[Rule]", "2.5"}]}], "/.", 
     RowBox[{"vs", "\[Rule]", "1.2"}]}], "/.", 
    RowBox[{"den", "\[Rule]", "1.8"}]}]}], ";"}], "\[IndentingNewLine]", 
=======
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", 
           RowBox[{"q1", "[", 
            RowBox[{"j", ",", "q"}], "]"}], " ", 
           RowBox[{"dz", "[", 
            RowBox[{"j", ",", "d"}], "]"}]}], ")"}], "]"}], ",", "0"}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", " ", "\[Omega]", " ", 
           RowBox[{"q2", "[", 
            RowBox[{"j", ",", "q"}], "]"}], " ", 
           RowBox[{"dz", "[", 
            RowBox[{"j", ",", "d"}], "]"}]}], ")"}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rd", "[", 
     RowBox[{
     "n_Integer", ",", "n_Integer", ",", "\[Omega]_", ",", "q_", ",", "d_", 
      ",", "RT_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
>>>>>>> Stashed changes
 RowBox[{
  RowBox[{"binarymodel", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", "shale", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "22.56", ",", "12.38", ",", "17.35", ",", "3.15", ",", "2.38", ",", 
       "100", ",", "50"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", "sandstone", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "26.73", ",", "12.51", ",", "26.73", ",", "7.11", ",", "2.22", ",", 
       "150", ",", "100"}], "}"}]}], 
    RowBox[{"(*", 
     RowBox[{",", "\[IndentingNewLine]", 
      RowBox[{"(*", "siltstone", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "60.13", ",", "38.26", ",", "50.87", ",", "17.17", ",", "2.18", ",", 
        "100", ",", "50"}], "}"}]}], "*)"}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7481611395428357`*^9, 3.74816114136067*^9}, {
   3.7481614526313667`*^9, 3.7481614529752817`*^9}, {3.7481644609993825`*^9, 
   3.74816446428913*^9}, {3.7484649186057167`*^9, 3.7484649268959827`*^9}, 
   3.748467430473914*^9, {3.7484715386307783`*^9, 3.748471589917218*^9}, {
   3.748628068086671*^9, 3.748628096939891*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"30278ee1-bdad-494f-9f36-cc8013096086"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nrep", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "overburden", "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"binarymodel", ",", 
         RowBox[{"{", "nrep", "}"}]}], "]"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7481611496035876`*^9, 3.748161153853909*^9}, 
   3.748161264759799*^9, {3.7481621473691998`*^9, 3.7481621499931464`*^9}, 
   3.748163637061421*^9, 3.7481705105716724`*^9, {3.7484649217426167`*^9, 
   3.748464923348007*^9}, {3.7484649951226473`*^9, 3.7484649952741203`*^9}, {
   3.748465045461815*^9, 3.748465046254342*^9}, {3.748465163829555*^9, 
   3.748465196975263*^9}, {3.748466694322772*^9, 3.74846672083871*^9}, {
   3.748467954813881*^9, 3.74846795653433*^9}, {3.748469455258732*^9, 
   3.74846945537542*^9}, {3.74862810657156*^9, 3.748628111530076*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"1aecccf8-5f85-4b1f-b1eb-625ef29d538c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "2018", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dList", "=", 
   RowBox[{"ArrayPad", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{
        RowBox[{"Length", "[", "model", "]"}], "-", "2"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7481611634183226`*^9, 3.7481612157705317`*^9}, {
   3.748162118267109*^9, 3.7481621189177914`*^9}, 3.748162300895407*^9, {
   3.748466778224012*^9, 3.748466782307736*^9}, {3.748466886465749*^9, 
   3.748466898153194*^9}, {3.7484679593881083`*^9, 3.748467960843074*^9}, {
   3.748469448895007*^9, 3.7484694490433817`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"898e37d1-7bf3-4bac-a58d-fb2477340795"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]comp", "=", 
   RowBox[{"2", " ", "Pi", " ", "40"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]0", "=", 
   RowBox[{"2", "Pi", " ", "150"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.748161236448517*^9, 3.7481612400541043`*^9}, {
  3.748253232989724*^9, 3.748253236740283*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c2d0bc3b-209a-48e9-b6da-a30cb59aeb98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cijsNum", "=", 
   RowBox[{
<<<<<<< Updated upstream
    RowBox[{
     RowBox[{"cijLS", "[", 
      RowBox[{"#", ",", "\[Omega]0", ",", "\[Omega]comp"}], " ", "]"}], "&"}],
     "/@", "model"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7475597918221493`*^9, 3.7475598050885572`*^9}, {
  3.748161277456563*^9, 3.7481612885781593`*^9}, {3.748253225025985*^9, 
  3.748253239097845*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"7ef98c1f-0395-4684-a56f-cc3e59384db1"],

Cell[CellGroupData[{

=======
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "45"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "23", ",", "3"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.747554589357366*^9, 3.747554609420073*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"dbeb9f6a-7f91-4218-a592-75baea961db1"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.7475545978509274`*^9, 3.7475546097673798`*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"d63a0628-85f2-430f-a389-7bfc574dc25e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rock Physics Input", "Subsection",
 CellChangeTimes->{{3.74737706065038*^9, 3.747377091039295*^9}, {
  3.747377174388645*^9, 3.747377178494112*^9}, {3.7473773663300533`*^9, 
  3.7473773717451363`*^9}, {3.747377436124074*^9, 3.747377438141183*^9}, {
  3.747381098223908*^9, 3.747381217810768*^9}, {3.747381299518055*^9, 
  3.747381311024928*^9}, {3.74748391116861*^9, 
  3.747483914390914*^9}},ExpressionUUID->"e796478a-6d6e-4604-902d-\
8413ef35dd10"],

>>>>>>> Stashed changes
Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "=", "10"}], ",", 
     RowBox[{"zs", "=", "0.4"}], ",", 
     RowBox[{"zr", "=", "0.3"}], ",", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"2", "Pi", " ", "50"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Re", "@", 
        RowBox[{"integrandp", "[", 
         RowBox[{"x", ",", 
          RowBox[{"p", "+", 
           RowBox[{".005", "I"}]}], ",", "\[Omega]", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"cijLS", "[", 
             RowBox[{"#", ",", "\[Omega]0", ",", "\[Omega]"}], "]"}], "&"}], "/@",
            "model"}], ",", "dList", ",", "zs", ",", "zr"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0", ",", ".5"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Full"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Re", "@", 
        RowBox[{"integrandk", "[", 
         RowBox[{"x", ",", "k", " ", ",", "\[Omega]", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"cijLS", "[", 
             RowBox[{"#", ",", "\[Omega]0", ",", "\[Omega]"}], "]"}], "&"}], "/@",
            "model"}], ",", "dList", ",", "zs", ",", "zr"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", ".5"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Full"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7484619161588163`*^9, 3.7484620458302097`*^9}, {
   3.748462429905717*^9, 3.748462445888713*^9}, {3.748463504997155*^9, 
   3.7484635238105717`*^9}, {3.748463978411553*^9, 3.748463984358206*^9}, {
   3.7484667409506893`*^9, 3.748466742578753*^9}, {3.7484668499098473`*^9, 
   3.7484668536343927`*^9}, {3.748467005644704*^9, 3.748467005758637*^9}, 
   3.7484674226417723`*^9, {3.748467480185676*^9, 3.748467495092663*^9}, {
   3.7484676148186617`*^9, 3.748467672542636*^9}, {3.748467719601657*^9, 
   3.748467759506364*^9}, {3.748467796177391*^9, 3.748467798759104*^9}, 
   3.748469428973393*^9, {3.748469465216878*^9, 3.748469539675826*^9}, {
   3.748471146699874*^9, 3.74847115902015*^9}, {3.748471385252336*^9, 
   3.748471401102807*^9}, {3.7486273533698072`*^9, 3.748627447140073*^9}, {
   3.748627557078505*^9, 3.748627576372477*^9}, {3.748627608374769*^9, 
   3.7486276140611763`*^9}, {3.7486276531317883`*^9, 3.748627740657885*^9}, 
   3.7486278693296013`*^9, {3.748627943387446*^9, 3.748627943769418*^9}, 
   3.748627997296269*^9, {3.748628437755842*^9, 3.748628504587635*^9}, {
   3.748628541299165*^9, 3.7486285676309137`*^9}, {3.748629550190731*^9, 
   3.748629555745419*^9}, {3.7486327555500526`*^9, 
   3.748632774433963*^9}},ExpressionUUID->"e2fde1a8-cd03-4fcf-b6b9-\
c493655646b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwcV3c8Fe73lygraYkGsqKkhUo4PValYYeGkFEhIxnZe++9x3W591rX3tzn
XqMkJWSEUERJfDQk6uv3++t5ndc5zznnfd7P8zrnHDKz07FgZmJi0uBgYvr/
02K2lzanpvTyh289n7MPZlHZZ/+eXxSUKgW/2P++jE9np2RU8suATMmYmbia
O/p4QNTXRVwJCnqvjykSQ9GVl4MVmfyqIHH7v90yftFINOIg8Z/gZVh/QG1Q
7opEaxr3kk3FrwM3KfOa0XgA+hzQ32aapA3M1bG0/+5bIwPzX81x/Hpg5OXk
tWfAAbep7KtlZNwA+r/bcnWFQfiEiCL1u6ARvLZpn7jMGY0zmE3IYoRb4Hul
nKmHOQazTfnl3RA3hgSWapfxy6G4YeLNS4aeCWSm0I+Udrpiey1zjdtJpmBd
9Hc2du8dJE770fF90Ay2bumS7Prth8aOB6tE8pvDN87lNMvFSJSQzUcTu2UB
l89unjGZj0Ea2ykKLRmWULZU2uVUEomYvM/X3xi3gtAzbyI99PxQzUK37DfB
ByB0/Yb3DltdZGNsXBFs+hAsf7p1xsV6YOGeb9JCBGsolqjg39wXjocUfYvq
PtqAiCGH4F+nWBxVslNCW/wR5NFOaudOxWC1g/n5c1Z2QL9L0tKJCMFeHWk8
WM8eRgc6r30tcMRGXh+uR/6wh1uDlaUldfZIRk4q0ijJATpUorgcDULQ9gWn
F2JnHCF4TsrQxCIWfSY2s/836AicaX+XIuPiUPudLZdaXB9DZIagiXttFMrZ
oxkUxu8Ekyd2jvFN+yD3l8ltNxqc4NVvXxFavDK+ETjBLHLrCfz4eK1su5I/
Pqkoib79eQJj14r79ofGYK4fDt6NGc5Ae+eGiwvj8afihuZgRReoqe1A8dJx
mG6+eU133AXY94svn3wWgjMPXJUX8naFfRHkNyIEG+zan+A6L+gGSrcokasf
XJFuxFhNHc0NfLWjtKMdIpG0qviPANOnkFD8r+L8dDxiX3t0WpvZHZzj37/k
cktAHytrHQ4S3MGo+bp9jVIMarVmos6peACn8h7Z48o+KE3k8kL1Rw94UVx3
uvO8CXZ+FyvlF+gJwbbEeWkcjLXjRx5eF/eCzLMLdzT547HUFRHyvk4veEbh
VLn7IxGzbbb5NGPlDfJm+EFGbTx2vDMSZ8TiA+dqpfwE8kPx3fq/5a16PvBJ
Qagt09MSX90j0itG9IHf/yrXXm71QfIOFxfDf/jAZGutlpFILJJ4ab39PzVf
+DXcP5tgkYT2SMZIGyb5gvmdkr5snyTEHFh1rWXGF5zGHRWYbsaixYkhG9Ez
fnByfcCdKuyDxhXWw8OC/WDvimn01v8e4Bcph4oWB/3Aq1eseMdSOK77rtZ1
Q8If7mbK30RpibhA6+Fck6s/aB9vVKzRTMEJxVFsIs/9IafCgve+eSL2Zas8
HMofAE0aehyhU2H4yMXYkAr7ANjpNvI4jaSL3wTazb3rDIBT2syJ7OzByL3t
mgarYCCAs06WgG4iEt0sVSTtHAj3Lu/5edA1FXUjDi7Dl4EgcCHyvHJjEnri
M2vjKxoEhdVUaqhPOBJo7XhJcQ+CscSfbselrqKO9Xzp/jdBYHlq+UPZaAi2
U/CPXpcMBu0awZ3E6CTM5266KO4bDL/Lg2xRZRqm1YO21lAwkJa2WPHlJuMH
Kwcr3I6HAJtvm06HeATeeWZtJyEoBJoKXn+88gDhhicjj7vHQoBH43mGRGkY
uldV1/9DJnQDb0y58stkxLWcJCsYEQq7Omb3HVxKR9UnnyRd+hAKBg3P2k6G
pSBje91fDvJhkPHh4rDYmwi0peykYXpsGFxUi790gvsoKvu6vb5tNgyUnCJo
Q74R2FBqgX8BwuFRXJo6YVsqZrLufro3ORzMSf6ZD05lYjKZ8u7CQjiw593N
P+ycinVmQxQeqkVA286nXCPekfiPuFVmfEYEyG3P8bbaK4TyLdT+Ni1HABa8
P/HrVhS6mi9yd0YjEhb3LnA+1ElDP6Y20bbnRUKX+PMnH12yUNahCaFzvyPB
NPD751zzNKRu0uJrphUFEdEZn+WPRaFvWRlT4YVRoC/+M6nWTAmnjD1Vqf4b
Bbd7T8hrCcVgdMAof1w/Gj5KiNqezEzHn2+eYWUriYagq5qrF+nZuKubo5KP
OQZctPqfX9ZPxwLzbvdKjsXA8SOGXOTBKOzIObdL2SgGduQrcZLXNFDHEcO2
twExoOXK9GmBPxbt0+h0sqbGQEAlkTv8WwayeyAnxjQaA4LLLfeFQ3NQWwhx
IGFrLByv0GxpuZiB+Ei7gyRPx0Lu2sBfJ49oZNPpL9diHAvFdz+t/36ji2kz
/83ohMWCb4AO+d2BOLx7i1nyp+pYEI/84/hPIws/EOu96DEZCysd0f8UZXJx
i+qFFZ5tcfAq7udMxPlMvNO8jEQ8GwdCSurcFlwx2NJfwEjePA7qpTsCfGtu
osa8SPZX0XFA1z7keOBoPOKhr9Xfa4wDx7fZQ1zl2ch80vrhykwcbFqodG6a
ykV1TO/2Re6MB2VJ1e2iJ7IQl5DGi0NK8WBGXfrxUi8GmUC9e82DeCh1uKbB
ImaKq40lpK4kxsNw8Q/ZJvUEzOGVPPqeFg+LtyaTNaJzsHHmlkin+Xgo/kdk
Y43KwxVNTxTZ+RKgaND47KOd2XjL6MevmSoJUFqXa5MSEoNv/tHNOmWXAKI3
XtFunbdAZfsY1zvTEmDvVcxmqp+IWORP/bvVkQDRuEukSy4XGRrlli0uJcDN
pUunN0kS0Ld3ehx5+xLhmCCbcLRGDgoyZrPQVUkE+QqyS9C2eHRgsrGVxSYR
ZAaq0wTSrqDKe3b7ahISgc+fQhyrjcUaM8JPrJoTYd1N+bGkaA6euP/2Fd9M
Inw2OZT4gELALl9Cj3RxJ4G16cGf6Rt4uB8pBrqfSYK9lvEam3nSMHFx8b2U
SRI03mwPGrX2xQqP8+XHQ5Jg+/bf7kfbA1HfD4PE6PIkYLXsG1nbm4EeunIu
XhhJAjiWbzhqSUCb/rRo/MecDOvCh4d6T+ejFE9HIuFoMiTWaHHfkstB0kzi
TPp6yXA3Vu+bDTkGtfsN39zimQxlAm0DvM0P8G3WyOpaYjKEP5nb/zk4Cf8X
fIHnQU8yHPPa4RxokIdDOb4/3PcrGYIaUrL0DxGxUGRh+wvBFMh/Kv2mfD4P
126/JeR5KQUydqapzVuk4Otx3O7SDilQXJB404rbCU/vpg+8T00BW7fuePGN
eckj+cmJWHoK7O5/EtjpmYN27ZMMV/6SAnbDFkWsakREyRidXt6VCoy4ZfNo
diK6IBhzgaiQCsFqCyluqdloMFcl/YZFKuzZ7NHdzxyOHon++rE1KhUcRa8/
NfnsjVkKKVr1NalAihDNq+xIx+mSxkUP36fCwDnPLNOEfHyqeMeWA2xpUGWr
fTvbvgA/l243eXkiDZ5HSOV7ruZhk3LXRi+jNEh6lPbp7UIi/nlaiveEXxpE
zJDjtdgQjqx5bz9JSYNXMV+l+GQ2+sG5+BdxfRv2DTLrQtsIqKFRXVx1LQ1E
lLuLf3AWIm2lVZ8foulweSmQjJOJaJZW8q7gWjoc/irm+/NnJvJWMZUzdE4H
If1n2bI//BBvx+5Y9ux0iJjsb38xH4aLLz370tCZDsPTe/scq3Owygt3dZvF
dBBfYkne+bIAj1w7nnuQPwNETNInKgIKsf3rqT89KAPuTFuYHiPk4a26STd8
HmbAuUPp5I8hcThr4HL5yfgMGP588eYBucdI1nCd80NjBpSo1/I9O5OOukeo
lgkfM4BRKlefWkJEZnfMsdq2TGgc1+RzKySh3+/3HvglmwkpZ/bfONtJRDFm
L5xJxpkQ9FNnUPx2OhKf9uo1Cs6EyrL7SU0LDqjZ6pQUJzUTWotrdo6WxGO9
z9NBTUOZUPKEb0d1GQF/sUmdtN2UBYJC1J03v5Kw37erCoJHsoD1xItxI1US
5ndkSn6tkwUVMc47qD25mPq9csnXPQu8j7t7R4tG4IsuVldP52fBq8bc3V08
QWj8977Cj91ZkJvJe1VoPAc5efRsSvqRBSLLqnGxV0iI85/v7YsC2ZBi6Tn3
bI2MUh4YGEupZ8M55+f9kEtEov1SJjseZYNCtFzdj8AUVK7EbPYzMRs8hs/6
cXkt05TIg/feNWdDtqSUH0tnCn6xq8SCNp0NbkXr51u2FmApwJVvtuTAJsct
+vzlFOz4vUimfV8O/DW/6euHyLienFRdK50DmfRrA/f/5WKmu75yFOUcMAun
NDiIhGH13Ta1GTdyoJ9tX764cBiKeH7jbPTDHEi/rSQVIpeH+rxQva9XDuzg
EFYvf0lG+2Sk5J3icsBJzI1HN7AImczxNloW5IC0anfn688FqCBrk4JRQw40
JTUfNf2bir7qzjdd6cmBLT47CKTFAZoM+6Ci0lQOZPAKiZjLp+GnLbjlxM8c
uL3VNFxLuxDTHheDCEcuvCyfCyUqFOOtksm0PQK5oHeAQ1VyA9/1cV/EdioX
nsmdLU79k4cT4m3oq2q54JxB0OnVC8cjlwxUvhrlgqVL0TnOP+Ho0F/U9t42
Fw4uTfG06hLQ/UoptTe+uRC7esnn4fUiVHp/b0dbYi40NRrw7eMuQd8PMl+s
JeeCtNihuKWDJHS+b76T3JwLuQUhMofF05FfyOCljN5cSDoVVOqxcAY/U6Q/
j5rOhf9SiRZR7BmYe7lYw/d3LrA80CoPaCBhfVLyi8fb8uC/ix7/ufeW4Iw7
flctD+VB+894uQ88xXhqp+1LQ9k8UCaZf+rrJWCJZwbXr1zOg4uMt5vIdeHY
zlP5leKdPJCVT1WvKIhCNaeOaZ1wyAOaXJS+TFo+Wvu0t1c4MA/2Wa8H5EwV
I+VMZp09qXng+1/xnFZ0KQrV+fpma0keMPU59aUcJ6PXW4d0V2l5sIsjL2H3
TDribab3z/dv3HdNT52W0MW3HUv038/mQVld+ZUJxSxMOJzytndtw17dTfeY
MgV/HvUzaOMhQBfrqFn7/TJ8Is52qEaUAAvyQnHP9Euw80VDI/JZAli+IvjR
nuTj5jXlkfSrBHj9VVv2n1A4Zqk4divKhACHX3w990IoFmlY8Y36OBHgvGKB
phV7AYo5sPnO4xACfKizzO3wKUWDvV/HLDIIsIeQsfXprzIkEDxkbEglgMeH
5VQmDgoyV2C812gjAFPvOfa13RmIslRiojhEgL05thucmeOlgpTJ4/MEoDGX
Vena5uCzt/3NhJnyQX/p4Otto0XYa8ejD7t358PTSZVjS05U3NZhaL5VIh+O
hG3jnLpbijk9VKZ/n88HQblYRkFnPtY5KW05r5kPL2S5r6nKh+KUGb5P4/fy
wUTCd+6IQzwaT998v9clH+b/kVO+pxQiMe2FWUZ4PiwonlaK5aSifd4X5a1y
84FU9lo43JmKeEpywjlq8yG0/L1C6SsSYn33e7SkOx/KBcL99zyPR6tsutLa
U/lQpf3j/rxyNF6UK/b+/isfHrkOBmzxL8TT5qy9yduIcErmtFroRv4jccbC
50WIMBThNZZbRcWvabWPx88SgX/MK/hnLwm3L/C0+14nApt0Jof12zjccOAh
r5g5EZZfBWrdvBSLqBoMq2duRHg+g/fteUJCRNcD9dbRROgtqql1H6GitIIn
HNuJRDDEwrKKn6kopr/nVkUDETqLv/RtaSahQGaJEv3XRCiluXx8Xx2Lnp7w
/bsyTYTXSa/1Hm2Px3bGI5oZf4hwQOzS6yJrMjaPOJ0LOwqg0EryhJRCOb7Z
EPHflHgB0MveeRzjLceas9MqQQoFYBD4JuZKNAmr8kKipE4BRKoKMIYtY7C8
aspMt1UBZEkYSwZ8T0DHHZfO2HsWgI73O5RqTkGiORqhu+ILQOW/oVmVlHLE
30MYqSEVgBef48cLZ8oR99ra0ZstBTDozD5+9yIJsRy54bneVwBvLhyr7n0T
iX4blPXkzBVAbGScdMH3JLwQyCak+q8AOroWq27cKcIfK00dPu0uBKN6OxP9
r+V4eLKBHnakEKLvizFrXC3HPdt375a+UAhcKubNBz4WYoairUWvfiFciryr
yfAIw3XWHTVO1oUgLYjesHOlotJUQTY+30Kwqo5tZtctRoROV6PGpEJQvbNJ
afJcBUr50UsxLi6EP7KWLof1ylGUyNG1TfRCWGz0CSKbFyJ/7YBrxMFCII3d
5fraE4RcvceyLn0thKd3q/ayyqVj2xK5xS/MJChQirsdolyCzd5Fo2g+Ekj1
26Xc9qjAhuxzcaekSUBKe1TXfa0cXzuj/HFAhQQK1bqPIp8VYGWLdFk3IxLM
utGycnr88Nn470EH7EjAO/COi802Ex3D14ZaA0jAYWvLbiJRioS/FUjeSyNB
xeLdtrOVFWjvQSb3LVQS7BXeuXLlbDniumLUTW4nge+N/WN4ewFidqs4eO0d
CfhFawUStniiXwWcdouLJOgwM9JKp2Tj+X5zWvwWMgzxUUQnmMrwFHPLjjMH
yLA6EP58frQCD57Ye2/kJBnWB6OPT+4sx93G9lWeF8lQ6EY+0S5PxPSI56yH
7pDBmJ076djXx7i2QdigzZEMs+zTHhXLOah41p1kFUKGvk0BBhLPylAe78Bv
jiwyhN76nsa0UoGSVaWvlFaSwcs/ServKBVFOAZnaD8ng+uQvHmJRj7yy5n4
+n2cDFtZ57OvvTFHLj3nIOU7GaSa4yrStm3M49LV08/ZKHD30ldJZXoZzo88
EfHnAAWyz+7qblyswPJfi04dO0mBR1NFXVJPy3Hv1cPDxmoUeG//LfpNSSG+
X5znHWNEgdJhedvsf2H4L6eAON2WAocpZf3EuGSUYJ3avexLgZ3XNdwI3kXo
6Ivdj8WSKDDWTru7RbsC0Y/E8BtQKMCayEm+4VuBDMM4aSEtFOiN3RnDEVGM
FuaCLBveUOCvJVtHW3gaCrzMvG1+hgIL+ZtP6mUF4ANkz8qDfyiw6ULHGLte
Aa5g+22kub0I1Ldwfk/bqPel+05MviJFYFfbysY2XYHfd34rqDhTBJlaV2zt
T1Ox82Hrax+vFIHJ88pe/ssEzBU8s7zHpAhMpRNHJh8+wHkzpmkXnYqAo+BV
TPTjHHROfeyCW0gRpPMp560ElqLXRMNPlIwiyDBrn9pOqECWrP2Ro9Qi6Lu4
N+hVZDlaM9eU4W4vAqVnL4rrY0govq1rBIaLYN8lnf7BuzHoiKi6r8PXIpA8
cWsz56kETPPHhwmbiiHOLU8++TMZ3/ig0NO/pxj0KeZxL1rL8VflOqctR4qh
9YAPX+PlChyQd3r/WaVi+Lj0xLv/SzHex1yGH+gUw2PbiqLrzzMw1fTI/XTL
Yhj54VLMcsADXcRE7pdPi2H+5r+oab98NC50qPpvVDFItNwYnVGjIiefjFsn
CMXww2AwT8SsAnFM7GU2qy2GStsslzx+KsqFeFL8i2IoF80T/P2bgM5mc2u2
vy+GJnEuv1lTV9TzN/THz+ViWHHdauzFlYnNjVkzJNhKwOjjh+Gq8GL8p9lH
+eaBEnilT45wGCrHcQfXZsNPlIBYsJxejFg5lvB0iW5WLYHXE1yfxxpJuGX0
P9lvhiUQIXuB1lYch/UVHo0K2ZaAUtPuDBuzGDSfPuen41sC6SLHu40phcjv
j7lkQGIJ6I9eLjepoiK+WxOvqskl0M9V8nYwthyVNdxy/tRcAsiGOnTKuxip
7xs8wP+mBJwCvtmfUsxCo246DI2ZEvg9KEsxPGmDHYdfPvBYLYF94+/GDu3P
w+znLvOUcpcC7fjtfJmtpTgnpa3mvXApXHm2wrV4uxzLrcCdHWdKoUWPif+a
SBnuNmjcrHKlFBy6KbKm0vn4Xq0cxeluKfxdnHlC2+mHV3krtAoelwJFPcNz
RDoFxTgf+zUYXApbUjWmxSrISPwtKZM9oxSa/uXvTAunomZZUdXz1FLID3Rp
irpMRXqJ2Z9t2kpBTsP8qYgBCX3+vi82a6gUVjqlH3G+SUA+eklnXs+XgsDH
ezI5DsF4b9WO8U2byiDoneXW+yn5+HbEH72PvGWgybl6R+JNKc4zn37RIVUG
AxLMX11lqPiTwitlsnIZ9MTp7O/aTMZSe+rrww3LAF5EeFyJTsSOX/NOPHpU
Bpx+Z8aNhUJRbXtEoVZAGfjgT2+brIloLdNZ4HRaGXyxlPj3y60UKTubJO6h
lkGE3eSZLJYyFHJdg2ulvQx4xhYIe/8VoJfiMv4j7zb8KR3YfcopFu38d3C1
aakMtB3OcygJRuPiL/51rzZTgXSJe0R0mYh7BleWadxU4Cn+2Xx/tgQvMWyP
V/BT4cenV+XjYSV4N3XqIUGUCtt96S/UthOxXIZBQcJxKtwaRHtdE8KxUUj3
ZKA8FWJGgqZCf8ciDyd00EWNCmetdF1TZApQlkmN4X0tKiw5mckeOFqC8NWj
CUa3qKBw/HzTMFcx+ng255WG5YY/L72uChUC2iK2h1PBgQrnx4vOTagFIskd
YerHPKjg8E2GcfFVPL66/tdXIJgKV1iuPxGQL8CP5h43b4+jwqvq4SkHnWIc
OzC7wpRJhVa1ryqKGRRche/I/FdIhfS3b3gHyLn4bckbuw8VVHDzOW/mxuOD
f6deLOpvpgLtzPsbyvsT0YGgppn2Z1QwCpxISNlRgJQcTwrX9lGhttA8pN6+
CJkaF9whjVPhWANnwS4NMgrQ2J+aOkeFX9QLtO1Xc1CBXEx/2HcqOBUNOHl+
cUHPhVl5PP5Rgf7WdlFtKRHPcz+9YstRDk1qQUuy3UTM/WchyHhPOSQFbtfa
m0rBJz/do2sKlcP9fexW9mIkrNc3tH7haDkId6btETfNws6t186dkisHN9fi
m4fbHXBqEd1JBJXDZachlj2PklBT8hnq7qvlcCqvLz7Ak4jG/Yu/sBqUQyOn
TKjoOBltsj90+JdpOSzt3PVpm3whEr2dZDZrUw4P7p7WfUPNQOqXOLOGXcqh
RXpg03T9Q/RAxme4y68crn5vKhKqScIRQj92N0WWg5+Gwm7xjf5byvVQqySl
HEhh6l/NtMi4d2U8PItQDvSE+pD1qAL8/aNuZ3RpObA1B1XneaZj3t5nzL71
5fBOmLdeztEcn2tWVHJs29Bf2GJxezkJ3SZXuN17VQ6bt1CDz/ASkVfi4Wq9
kXKo1JHfT1gjoVzfjEW16Y38q5Z5YsUKUJvtDqkzi+UQPfp1766KNDRjFGQl
8accHp3+uynwuzFiV/+Tx7+lAjJZhOYUdZKx1Cn7cY4dFUDRY/kbKkLE1wWm
+df2V4BBLEU3+DMJO3Dc1P8qXgE3FTzq8leIOOFnT8z4yQpoHHn9WOlYGq6Z
Uul+pVABQv+m5UNf6eG3l3yXIi9WgO/r/qSO2GT0s7SF96pOBby+rPWWIk1E
vHvWznPcqYAW5jiP0N1kdMb9nOkzqwqIV8lMK7ErQIaTzkFBjhXwNmQ1PPh1
OnK9WFWk6lkB3/dUcHxjs0YpJUuvmUMqYFw7Ts1tTxKu23X8Jy2uAn4b1L8J
/J6Ph9xs9ntnVkBgweahPlsyXnlPvqBIqoA3sXs7mKAQ86l/svhTUQE9N0/9
bBnOxGeLRcPrmysgJ/t5QGefEzbcaUZ1eVYBqQuZSrdZEpGra/aAbF8FzJ34
5qj0Ix+ljI+uLo9VgE9bmIPsDzKqV90nVDFbAXV7ED8cIqERioGa/fJGvsnu
Xf+1Z6NVnsSH0n8rYItMlOcpxlO0z+VN9DxbJazN6L5hsknA8mPbqym7KkHc
jLxgfoKIb6pcG7kvUAmyRyx0uQgU/JQc9k9cshIeWyy+7Gcn47Ttz0SnT1cC
tH5qHW3KwQ1PWDUISpWw7Okk3LfuhUfeKduZXt7wv11VuVMvAa0inwRBvUrw
yarXNswjon2k5vox40q4WnU78ZNNETrP/Wc8/UElqMaXBeZ+JqPbTmdZbjpV
wshLQ34O21zkMfJEks+7EpCeddzebB+UcaHy+tvQSggxjdCcoyXgpoLFxwkJ
leAxV1p6TLUAj3JJp+pkV4JNyJldw2rFeM3RuoWHUgn0zNuKGVUUfGCY9KGn
qhIEBp7n/pnJxYowwxbZWgkMtmsyzWQfbEwUkb7SVQkLpjeDnhclIi9OU132
gUpguv62hsFZiLIcslw731eC1NXMyW8CJahl8F1m4OdKSPXf9ynasAiNK/Iz
VH5UAk92f/ZnwTz0l3BjdhNTFSxO6P8nJu6NBDgSttE4qoB/24MvMezJWMm+
95TXnipw1e+XYp4vxMZvuQ0VhKpg9rX1prefSrCXwlXP1SNVcF9TVGC2swhn
5YXm1clWgX57gXTk9jzcytbZ6XyhCq6djyAHNT7FE49YvspcqYIrB2+VCHam
IKYBtHNZvwquFjp8Uh4gIaHz3mc2Bgkwff3ALDy6FF3IbbptZ10F79SlDIN+
FCGTrau+x5yrYO/ln5fbqbnIx/ZM4RefKoi8Nh5if9YJ5fQ5dZPDq2DJN8ZX
pysN085VLFklVQFVsbZsspqMJ7K/8YrnVoFMqNffs6xlmGnLMYWPRVWgSz/7
OPVtERayeWiaV1MF3JGH2s8z52L0pjDIBFeBVqtA8412K2x2drpIoLsKRv9y
bc/6LwP5ZQn3jr6tgl9MBjxLTykoj8XkZ9rkhuybJsl3rgzRH2buN5qvAhWP
+02O94pQ5Zy1tfHPKkj/83vi40oOyr8v33iPqRp6jydOrM89Rgmf2DgfcFRD
0iG98PLDqTjQcvDmo93VYGukJziRRsLO00TKY4FqkL8DXsZVpdjS3GnVVaIa
Gu5rRN2zLsEGH5Q1vE5VQ8T3eQHYRcSXzHak+StUQ+qLnUt9XVH43OT7uRD1
amCtb3UfmY1ER0xKz0VpVUOJ8mM9/hf5aP97j9D4m9XQM/hrL95WgriMrwyn
mFcD+fD2z35XStH6KL9k1qNqSGsXdLdEJLRwa9aV4FoN0U9/Xw4dTUHjIzXP
SH7V8G5gW7CsqSN+ZRTIVxpRDRkOw6vEOzmYNqR7vzKpGnjLTQ9JWFAw1UC4
ri6nGjYLRHB4byrFuW8Xt7ZQNvAlnCFkmVFwnH6rAaOqGpwcEz6HuOZg//7I
wmct1ZBAaPSUpzzBTrq3f718Vg1HeT1TDh5IRhZvjlzse1MNYby/k1unCtAN
7d9JQ6PVsBZ6TuFjSjG6+LpzZmymGvhdOAfVN/g4q5kk92GxGjJpf0RsCAQk
0WMeNLtaDTYrb9KiT0Yi/mun335lqYG1NdfmOpswzNG9SXyZuwby0j1kvtTm
4VWN109W+Grgr+C9mNNHKPjL86z2deEaOMye99hasQiPXrLds/lYDSTIiGfv
2OjfLzvPW7CdqYGwg94rhv5JuEWdo3obqoE7/9UleyjboNL2IZZdV2qgo5Pe
9uhcBspWLdTj06+ByQBNM4vhAhTDeJJ/8G4NTH3QweUrZOSjrPpd+EENlLyX
aT82WoAc8E5Vicc1sJdyqNG9OwOZXZiMP+ZZAxPXJKWC+58g3dayD6eCa+AS
Xc6RNy0Oqyp5nT4bWwPpfbqTX/vysEzzVX/F9BpQmg6TzycXYjGF/X3KxBqY
HdCXpncVYN7GOeFLZRvxixUl3iTm4C3ydY7X6msg8uM0/9/CMPyrLoiuw6iB
q+XqfOu8fmj2jP5Ow5c1YOcVutCSkYGGa0TM7gzWgOzEvXIb+3zUJftfudlk
DaDKv2HnMoiooYq26f6XGpiz0UqUrctFRaejtW1/1ECwOMsf8Zp4lFFxJ9fx
Xw20N2S/I7/5Qos4KbXkwl4Lc3pXtidujsee1NULnrtqoYHV8vN2lxz86Pjz
GL+DtUCXDY+cMSXgu6XJE8GHayHzvamaKD0Xax2zPBF5shZEb0juuqOdglGx
jE/c+VoY6hEKHBD2waeObn6drFYL+XU1U98IfkiE0iuYqVkLt+U6dYPGk9Fu
yRy7PKNaUNwa2vjtbA5iIT1qLbxXC4HXm+TDqnPQD3HF7SW2tbDd76qF5n9p
SGlKuTPMtRam8rusLQzCUVDmJe/7/rXAMSeWwqFwD/cYXj+jHlULT2RHj/EK
xWLe3XrfRFJrYeUwqTJrKg0bvzIq3JRfC6v6xze7BmbigrC7d9+X1oLzsJjD
35YUvKBmsbe5vhbubn3FMiMVgeU2Wb9Ka6uFSCMCfaLxHPZqsg92fVULIQIu
ZJXOUNTh4gw3RmpBT/SHWkduEuI+7fHr9HQtGEtZKv0jpiGDBd+yHYu1sM2o
dE/4sRSUQw62+rZaC8S3MtjqezSaNY8UfMlaB7sFHCS9btmjE0LxgxSeOvA4
7WRRds0Xu75LiQ7ZXwevRkovdCvHY1pS1kVL8TpQ/Hpx1w3lVMymk/9P5WQd
bJkJzDI5k4q1tlFqDynUAXOd3a/wXfE49VmZ3T/1OhBKmnnIbO6Dp/yrD49p
b8iM/hd1FY/REWh833C7DnhZz6ZTjsQix1VacopVHSSOnyzU80lFDdUdms6O
dTAUfavWpSYdMTt0b9XzrIPzz7gNwteSkIbUm9aTIXXwZeZJ1HPLEBT3adBl
e3wdWKW3ri88MsXv8saOf82sg9Ig22v2WTFY1PjDpy5SHUR9XOzPuJmObfjn
skmVdbAUwKr45HY2rupfMAhqqYO8CeYtQmfS8Vr09+3mz+vg2De2SUupaKx6
ZbUT9ddB2PTBs4M3LqOILUw+gu/rQF45vPdeQyzqx6xn1+fqYPbp7b2sOVno
oCfn4sj3OuiflP+jMZaLLM/uINX9q4PXPo3hH+SzUekyr0kSRz3cbNs52Pkx
dmOePMDntKcePFkidtxc0cRKD4VfawvVg8daS5zEowQcJCYRcvxoPdzyJjBU
PHJxz8SxC9vk6uFjtXX8hHg+5s04vfL5Qj1ImnU7iCvnYmODc9RnV+phIsT9
7/f2OFywE+4X3KgH7sS+qoc/LdHCS1WhANN68A+VfnHLKwXJhWoMmdrUww8N
YVOHXwTkraoVAy71EEfrdXZXL0DP/ulfOuhXDw80pShx2nmIp/EW05+IerDr
/xRO2xKHDJ1N64aS64Ent+CZjIwbzjlpZV+TVw/D77punwjPxLPzNhIJJfWw
6+jDnhqvAnyC5DjhUFcPKdfMfnCvFWLXe64pmox6GKr4x3+ekIdpAl5ax3rq
4RexrlIUojHbiD8b5/AGXvVbn4u4gpBWYiht9kM9rDKe6ztG5qIUrWjXjoV6
YCme45fuIaFJzsQT+b/rYcm7b0ftTjI60pk268vSAHblU2amwnnI0S8n5+72
BmgmtH1QehCMGhQLDBX3NUDw5JxBZH4MZv5dxLNfrAEOOZR1aerm4/0vlZfh
eAMUKU8PjT+hYJnc4QHzcw3Qs8z31YCFgq8+sa8LVWmAquOMRB9WAra4vDW9
9FoDDIbmaKYTI7DXwSzPPoMNPSZTz3uEoaQlGZMV0wYobPWXfj+Wh8raXygf
tGkA1ecia+MuFPQs1UxM2bkBGo4yVb93KUKTtr+3Wvk0wK9PlqmtMcSN+Tfm
c3hYA1BrIvcw7iegXbyHX1ITGiCd53HK4DkvLPW5uWwgqwH871fFaY7nYLUW
vbhVUgOQj149vEonY+O4L06ClQ1Q8v2e4TmZYuxs6Weg2twABdqSxJOxhTha
nl/+QWcDXM0ZMWxgTcMkbuqBqN4G4CQLd3gPGiHalPq/incb+qUj3am9/9cf
xiYHpxtg1c2sMvkuCf0X5tS29q0B3r0M3C8iU4w473IWHlptgLO6EsYaP0hI
9HReqDpLI6iqp3LG/sxCilvP2VhzN4J7wajcSxcHdOPdq+sxfI3gctP9jp5E
MrYrszxZLdwIb/hSyqJuFuAQ//VdI1KNsBTN/yfYpQjnGCT8/CvXCKEW1MJj
VDKuP3p0WAQ1gr28g6ZEcC5+8w83XrrSCPucNrE33g7An/sMs2z1GyFa2eQ7
938xaDPpm0/c3UZg9XfYld9GQAc8gu7VPmgE26UHKk82U5Cs1kH10ceNkKl6
SPRgAxldF62S2OTVCFNdX6fHdxGQ5YoGp3hII0SSch3uqEQj7+7JrxpxjfDz
kLf1NCMAp+S4vrbL2NCfu8u0Xp6DqU7bKxMKNvztYbVYmSzEzy8VJNZTG4H7
UXVoBw8ZTx1QdB1vaAQft9kl3V35+M9i383N7Y2gW6nd1ROWgHe3P1SUeNUI
fDwqd7tv2aJjqZuErg03ws2SGlG+x2lI3TaF2fFDIyiknbswc4iI7qLj00lf
GyEuU2fdtrYQue7p6Gz81Qivw26UOnrko5i525SJTU3AczgkgZWRgsjNyxGs
XE1wmc7ybvmXFaLHhtkd4W2CL3GyL9dn4/CIxSEdTaEm8M4wtw5/m4uXz9XJ
OB1pgmnnH00LNUTMxa25N1WmCTT93408uZKPxaamfzcrNcGFkA9O/45kYKUa
j9GpS00wxafh8nLEDxuE7WrdqtsEBpvFn9b9DET2xpRcqTtNwF9xbjBQOgOF
nkIB2lZNwNylzhRxkIDytgxZOjs0wXPnFLZVXwJqGHl0Od29CUoixlUfFmWh
vlJWKVpgE1xSXlL8PB2F5v0yuKejm0DmXX3GZx4rzGJweok9rQliVFMsxtfj
8cGjXX3S+U2wftGgm389G8v9M6nRLW0CXKN95414Hr56jeanVtcEzoGk80XS
OfheuqDmGXoTnHCslRp5nIifznntl+xugsh968bENFccc2b80763TSB9+F/S
59MBqCBQsYprogmMbYl2+zqTUVNfhs/fuSYoyz8/krEpB705tHZ1cbkJWOJ5
Logn56A5u1v8U+sb9u5KSb9PpiOmlobpvq3NUCRm3ue3HIV4ufZVtO9ohmND
J1+/jVdBUjfdvGr3N0O0RqN4oWUEViYNaZDFmuEk62KdRX8qNvx5Zm/68WaY
4JyUsR3OxnaqyR8izjVDvDXruP+WbBwU97PMS6UZREe+acxEJeOMCX0P+2vN
YF+X1OexIwhXSFdfMjNohkbZPY8enLJDzzx279EzbYYzbq0BQbvi0HjX40k1
62YIjz4e2v0kA/3g6ys586QZjKjbds3dy0FcVqeeSno3w+nUo+N3WbOQcHWs
+v7QZmDN4PSWICegs5uXdm6Lb4a2pH6d6w5P0XVtrfd/M5qB0iPCPabph82z
y4oWC5rBxCSAW0cuGbt/5XadojaDJDftnppMDo47/0i1v6EZfEI7RU0v52JS
6EuejrZmiFnKEO/dmolbBqXGanuaISLSoMOrJwb3i0WQyUPNIPKody18RhF/
fvzlSfpUM9xptWYesIxBm+gaypHzzSB+gqeReSUT8fFQuL1/NsN/qlXVCv55
SNqY/Z09Uwsw1E7JvH+fi1SL7xeacbTA3o+W1gHSaejmaudjvd0tgLLyVhcS
A5D9pcMX1AVa4CVrVp3Qax8cnBTEdVaiBfisLN6fzk3FWR+nhyRPtcD6wH2R
NWIerjqlRtyv0AJMfP4FyxfycZdPvsM29RbYnSK33Cyciyd6Niv902yBm1lF
vZKv4vHPA/c4loxaYFNz+dGIG7J4mzX97dS9Ftj+3CX0BikeidYfIvTbtkBZ
7ZJoXXUukt/qa9fh0gL3smqyrCOISEt/4nydbwtc8/9l6n4jH1kSgI0S3gIr
x7+eaA7IQB5LWf3piS1QcKf8jWiJH4qHvzmR2S1gs+O4mmtPCKZE3rH1Jrds
7E9K9Wyh2Zj2rumcQ2ULLG7V7XhSTcRvJQ9sudfcAj0JX5+OhxbgeRf3N3qd
LSBV+vTrj9VczNwxkqXe2wLNus7T5ANxmH+3vPXZdy1w/4jkNRNhB3TCLPXM
kekWuHhPKDR/KhWpU1c2H/jWAq5ObzdFNOej238NXm/73QLdg0yy5TmFyPFq
bcY/5la4ck2fnX88H4Wk8T5Y4moFn/929k4fSUPZs09kP/C2wuL89n6Zn/ao
Rm5g04BQKwjoFQfd7I7D3QEyPR1HWsFtaEhsf1Uelt/+gjlWthWM1sWur1UV
YlKq6ZlbF1pB2rRG5yv3xn4lumItdqUVLvct+TDZZ2D/0qicb/qtMMFTnFgr
8xgvnhUbqDdphVL/I3pSQgnImNHIHmC9cZ8asvCOQkDd13SUrju3gp0dm9CW
xkIkPzTryOfbCqxlOxMfihERycy7cCq8FeRjN0cOGaci3q97RouTWsHwSnTn
dhNDFOBSzOOS2woPv7hFuwYn4aVNKmqouBU07msqSnPmY+OIYTfO2laQetnu
yZAqxN289qUDuBX+hlkFGYwRsHzulg/Z3a2QsDj1xVApCZOOZu59ONgKrf4T
T6OeaSPemtNXZaZaoU5VTDe9JxkFXOjy+TvfCrsuy4ikvyKg/7pMqp/92qj3
OW7b88cKEJXyx+nyJhrU7umZyXTOQ5++qUeXbqHBdPWXkw0Z8UhANo68i4sG
+yWZRoOfWGC9p2MM1x006PEPHfjSm4zDWyXGx3hpkH56bM8KDwHTWZxWlA/Q
oO16efTcr3y8crl1J+kQDULjNLUvnc/Fx6M5jm07TINdxbrKJiux2LJf/6Kj
FA10axuuumVZoUz+XNPBkxv2129/sytOQv3G8+4KZ2gQQLPiT2TJQ5z5Z5Jy
FWigWWzCYBsiIOU5P+oWZRqw1Wcea3LMQW7SPV3WF2mwj3t/fWdBLKI+5p9+
fZUGlDRfwuAHY/ypzvyfrA4NnCOC9CbqErDA3zL+dAMaDP6wSp//noP1Vf6c
ZrpDgwPjn5w79xNwRIj6dQszGvTRhUrpujmY/jL2fpcVDXyuTj341hqHf+8c
8ztuS4Ny/VNJ48/34ROGEpkJjjTIGLQeMg2KQ5aZj2t/u9DgeIkS60nZHJQ5
1dJr7LlRrxNyvedYCaj/MMc8w48Gw8daXvKv5CBOW/0tkiE06LjJrJW8KxEp
V+QIRUXSYM/8gztieyyQ268v8stxNHhp1rTAjWMwVeGMvmEKDQQKWdLDduTg
T75+ds2ZNGgUtJjhaiJggc6XocIEGqga7ZOs1MvD+lz8+cEkGqz0O6nHS6Xg
CG3zlvkSGtjsGdz56L/HmJFUNqRdSYNbAqLnPuyIQavvVv+rqduo71/lSbXW
HHTykPq2Ay00+L7icitchYjuW8Ye9mXQYFV7Je34uXyUXTSKZp7RQF1ehlfr
Xjp6u3j49pWeDTwBh4x9e9zQNrnHztQ+GlQfEVueXIvBqu4tMXuGaZCQtXVs
SCsPu9PYi56O00CUbq456VKIK1j1299/oMER3bVFW4MCPKuR8151jgbRW22d
NdcysWDMl9/kBRoEpfdyt1W74RZTb3LFMg1eDJtrK+2JQ8andxk1rtCgsFzo
hYMPAa2zFLK1rdOgoWjxwuEwMsp4K1/XzYzhdClnWa4/GZ0n9VgNbMVwgeQT
KHyWgEbczPaOc2HQlNJN1V+NRm5XfnbM7MBgpTEaKH8iCPMdDHP+xotB/LuY
7yXBPFy7cFB8ZT8GekXWnUPxFHyDVj7AdAgDkA5MHC8uxj9j1QLZxTEceTfW
WVxZiBPvDcvsPIqBLV38bYJFKpaRtf247wQGzsZrQnq8Nqh/y6YEEVkMRPO6
tOvCOejxUIKKlDyG8eq9bsX9FLSTIrEsAxh8HGl343eUoXL3pjxFVQw0v0du
bjlFSOualo76ZQz3DpmViJ7MRYsCHzdpXscgtZYRwTLmgKIXXcoNdDEcfGXa
/00yHUvTOU1NDDFwe0lzN1ym4J74bJ4HdzBsImtwrGtSsa3FaZqDGYYe7ZGv
vJOlmOtMp91TKwx7jl/1azMi4iK2W4L+NhiWpFxkui6EYo2RhZ5wBwzPpHcf
/LEtEc0V+XklOGMIOBGvl7dMQiGevNKZ7hgYvr84lYlUdFiTMkb0wVDHfNN3
tpSKOoSUIksDMdy+6WUxvp2MLP/rVagNw0CZptkp0xMQa5vFfGs0Bt7zNzKP
HI/A+Ym/058lYNBnG0udHy7AqlaRV3pTN/KlVHtWBlLxh7OH/gxnYRAQHKhI
9CvHfhzVlCkCBrsjpr+d5IvxodFLN7+QMEw6B183KczAtJJR9u8lGAw7Daj/
Nt7vXW/7+rUKDHfrWpxH2PPRXy2WB6x1GPZPhAqPfyhDmcIpfNzNGLx9GmME
Z8qRwvejz3jpGMZghyNPeykabW91Eezc4Fuh9oM7dx5yT9Y9LNG9UQ+bR7GU
tpto34NPb0/0YlhY2uz5KjEHN8i7B517i6EsfgytvyvBRlzb5ZTfbeQbwSTl
N1iOV8bypjUmMPj9Crwkp0XFyWVyibrTGDJICxXGT4lYzrdL9fZnDO6+k1WO
kgH4rY7xd/NvGCRE86WMJVPRE9H/CLbfMfzXub/kMXMR2v0zUNf5N4aVYXsN
FcNyVNXJv9n7L4bRoxZDgZNUpJtaUhG8mQ70mPMFZ/039seHyCyGjQ5Des8d
GmPiUKzCwI7UbXTQMDNTClGOwSe4H+DcnXR4tpTkpGpTiF+9X7On7KXD6NMj
du62VPyoPEao8gAdjqZdH+naXY63+Yu+bjxEB5VduspefEW4WK/Ou02cDrOx
wTo1X9LwVfGrx18epcMl1ssWvS+foi+/3o8PnKDDw39BTg9lCKjGKpquIUeH
n9EfJG+PliKfQaWC1vN0+LQys/fPKyq6cnEhVAZtxMPsXJSXFMRbm2lLVqfD
OZJx5umxFDQpfk1b4CodGORuXppRIC5OWpOJ16aDcHnWLWxPxC5bivnYDOhw
x8tIefRGGVZ2vrXmcZsOB412tbCLU/G2GY6JJVM6XO4N9WQRIuEh/QaGpRUd
hE5utVu9H4cJ7Q8K39nQIUH84I6lBzHokSx/uJYjHUI5FThsTxaic8Rnj9pd
6LBGovNGRZUhlj2uOvKedBhp/mNgtV6KXgUclivzo8PJ7ItpGZVElPb9Lb9o
CB2+eEUdcb4biizMg9ZTIulwqEQgp9orEZ/ol53cFk8H0V7G8BSDhP+oTLf5
pdDBLWfX28bOMtxRmUD6lUmH3yLrAgYDJThWRDXChkAHdE1Rd/IpAd+OX7ab
JNGBTZV2KnOHJxbfTNC9UUqH9Bzi8V9eaWjJUefMi0o6KInvZEm5T0FNU5v2
X6inA3WwYNMFHioK0in/W9VCB8Gg0uDDbcVIm24yJdlGhwd96c7JSrnowCme
jqzndAj3Kh02um6EPuW2kne9osP+hI/+4p+yccUOu8iQ/g1+99wZu7/xPz19
BRzWhzf4pVhxtihT8aWll3qO7+kgf2SH/63oIrzL1PPsp490cMg/Ia1qlYnH
X0sduP15Iz57m0Tyo8eIfGH03+tvdIjTkY+N+p6HnKjhH9R+0OFqSAocEi5F
IHS+s2GVDlYNC4rEW1TEEfOZcpyJAVkf5RQFP5FR/7/UqHxWBqQ9uWE6dyIZ
ZdtdduTnZAB9dfhhp3cIfvh+RT+KhwFOabt13SQKsIwm6dxmXgacYjCOfhsp
w/9aDA667mfAIYujm6nHqbhLeuumr0IM0CGfDR/y3+gHWTUfTcUZ8Jz5M0UB
RWMTbstnb48y4GRMBvWVWQI66rWn+MpJBvxLM+TrUCOjn1/bomlyDJjwy398
wZ+K8B2nx7IKDFC02vEh8lgZingpYkBBDODq4uTar5yPDBT75AUvMsAzZ4Ak
lOaOhEv8BBKuMqDwbwXNsSgDfz1wipldhwEc8/lXLWeKcF3E5LSnAQPM6jLZ
JYhU7LcW8/y/2wywg2evK74X42s2F0qszBiw+9b1dMmN/Y5v9FvMqBUDWs7z
P1kQuIemrmQ7adsyINjo/C9FoTxU0njdsMORAY+isHZjfglyPfr3/HlXBph0
GwpGy1GRSnqJINWTAWMEsZalZjLi5ryzWcyfAY+JD+2IF5PR8FOuT6khDPgZ
6RvrVheE8z83dnFHMeDBZSf1VCEifpSsKfIwngGd7CsiHcKl+IzqB/f2FAbI
bxa2v5hQipmWnPuFshjgfD8uPNylAHdlchzzIDAA+K7NZz+KwQkaWYGDpA3/
3sm3RMRjkPGvk+OnShlgY/1H7MUrIpLIb5eLqmSAxRGbYTW5ErSkZRQ9V8eA
8Fmp+GnDYtSwPv9JtYUBJdZln33yCSiA4nMhh8EA2dvHBPZ2B6HrBrtT/zxj
QFD/C8aT1TjMx0JautHDAO79trURVCKeop7XqOhjgMdRD061zCJcdOdV3rZh
Box73hU61kPGThz3/twfZ8CnVPYxoT85WKn2p27bBwY82a8VrSLkhdnMw4oF
5xggILD1je/JBPSGR4DVfYEB711bpoNe5aOM5vI7b5cZ8EfJ6phzLBlZPFSr
Ofl74z3u8t/1U70QSe8d5o78y4D0iV7gS8xEKwwbq9nNbaD15OMTntdOiG7P
RFNhbwNubzPl9O54HHEwgS+buw3U1FLEK+8Q8I2uww6ru9rgpf7iO/F7hVjQ
pfG5Pn8blH3ZPTXAS8SzIprC5QJtMPRbRKEsJQ1XvJ56yiXaBle4bhmFMDti
D0/nPivJNhByiDN15I9D6kc4pBjSbWAqJFrpXpCLeAYzAwRk2mCyYvuxt1ZE
NOx/csztXBvMHA42MvUmoLwT7bIDSm3wWGufh690KrIZM4w6odoGvrNFT6OG
nJBc2PxM+OU2KGwbvDS/8b+YzvjAp+ttEHTQyuTqejbu+rArRVlvI/6OjMtN
MwQcH1O4mGnUBnnBx+n3cvPwbcXzl38bt8EP0Q9/mWVTsfjnnlw98zZ4KxkS
V+nojheTzFbLHmzIexevPeUKQw0qP3U47drgsGO63oxJJgpYDC2ydGqD7Akt
4wE2ArqWeZCF7tYGe3517yrb2L94NcpvH/RuA5sJplSTi2lo4qdqtWtAG3Qe
y5MdqPVFFMLQtv7QNkj/aR1/ujkQO2nZWB6P3sgf6VbmDKRjpfV/LWEJbXCe
bG50rzcPb6XE751JbYNj5RQ20ts8/PrGYXuU3QZ3uNQEL71Lx2mbG59l5LfB
8A7ZtQNqgdicev3QCrkNjHJSzg4d9EfSd6bcdMvagKU675yvQzpaYXd+U1rV
Bjefn0qWPkRAuIb9KEfDhv2+KpX9AQQUdi/T36J1g2/xpGVHq0ykx3NylNbW
BnWvvRS54oORQHObzIGuNhhYCVFQdPDDsw8MI11etUFvskRW45YMXME7P/2m
vw3eKRtqyzAI2J3hrSQ90gbJe+edhyEfq9rvSg593wZJL76dXg3KwtwHC799
/NgGz8e4n/zVCsEXbviPfZhrgz+52lcLg32QY/TdF1MLbfB5+/LJ48tpKP/Z
+frJ5Q3+WA49j6kloLeb+AonVtogX4b23fsGEbGd/57wfr0NuqtPQudMLpJ3
eu03ztwOszx3R7qNEpBNSbH92Nb2/1Fs5uFUf08cr0iyJVupfNuEJBWKiHGi
kKWyL5EoEREplD3Zk33f93vtQrbkVLgu7i4lLXYJqUiL6nd/f36ezznnM/N6
z8yZuc9zIey32n/Fr4Vx7lSk3QhfF2RPem7lKkvGtJ1XDN5s7oLNo/I2/mqF
eJ0VUh0W6wKzDXrTnMMlWClRQub19i548Gp4WfhMMXbq+yn6alcXhI8uRWa9
yMLpnC85hvZ1Qa/3rVzbqGBMVq//MijbBcW+H4Mu5ESj1dtx71mHuoDPcqNL
MDMPyddeG2AqdcEzs/CO4+4lyP7j6TbG8S6QoYZ9kPtQghL37CXQNbrghvQF
zV07C9ALm3+pNK0u+PNTKKkqLh59T34TRtXtglsR5pqNkd5YhvLYi2LI3s//
wcOuLgNbb0i2HzDuAnH7zvrA/4pxrOYNo36LLrh2dlj/Qmkp7vAzONF3oQs2
2kUXeTKK8GK9jCz5Uhcs6ng0KSam4z1znFt7nbrAVvIhrWncDZvuG11Pcu0C
lodBlodhIgq3e/Kt+0YXCPPti5D5V4Ca0zJGu251wRORTEuTglI0S7tFfXGn
C44FN/Eafi5BO3iMnzwP6oLYEJUtxrz5yFBLvuJZWBcEvbVpPnAqCgX682Tg
qC6YvjX5hzZxD9c2ToV3xnUBTjTOPWSZi8cWnnk/TeoCar/C7/k3JVhEJs+h
I70LrBtcKXzs/vT0pbvnnuR0gQRj1DfWswj7ZlpotBd2gcn2u6qieSmYyFSU
ayvrgnTZkFMniEZohE9wW2tlF8wrNpvHPEhDAqfnNrTUdcHsmzCpwivFSDOI
tPy4qQuOvrXgq0HlyKu5eLyprQu22ZK+1l0sRcVfgumNnV2g6BNWn6Oei17K
2j5t6OoCngyTWdHcYMR9+XjVI3IXwMtyRj/1IVbNEc2qp7L5xdfUjrDnZbeX
XyLrWF3Au8/L86prOc7dRLld+7oL6iI5/H+3lmOaLvFyzbsucF3GmldEi/C6
0HDj6vEuCExzbL0clICV2hw0q2a6QNs1+7IRORA5LWnIV853gX2e4O1jjnko
/eD2HRVfuyBS5t+BgqkyRHZa2Uhc6QIad/fVC65EtJrHXClf7YKkx+Qh39hS
JP+6ZrJsbTcsaRuZqZzKRPZCscxSrm5QOl9dUyOvhxL1nXEJbzf03lH1XHc8
A78I064pFuyG9fVCQQGPSvH3J7tyikS7ITpV4p2KbQWWWVmNLtzWDS+Svkt4
OhCw9eHXvgU7u+EiuWNNzf4CHOvS6JQvyT5Ptdz/bEIontWsiuSV7YYTm9YQ
QyOTkc7WEuLtQ91w6+4Syr3E5v05u39UqRs2Sn+/qC9Xidb1JC8YqHZDHiP0
SvcUAdnnxgo2Qzd8ND4wnC+ZjzpuhSnsPdUN6q/CHcWdrqEdhv6mcWe6IbCN
Zy/Hm0zsJ+l9++fZbpC/d2bv0fZy/PK3a/pls27Y3mvarf2rEisxHVup1t3w
d5vb7LuxcpxItBlRte+Gn0Y3tJQVs/BiiMnfkivdILQgq0u5fg0ZWenv2uza
DYKP354IvZOPKg5rnfS/0Q1B4icuyGQQETe32uXpW91gC2O3k0SqkNN7hXDj
u90w/XqwJU6hDL1oki1/EtwNs5w9po2nU9CeuD1kmfBuaHZy67o/fw8HX9k2
lxTTDdc6WynxskX47QkhgX/x3WBaY+zv/bICq4rwHL6W2g1qF26nB9yrxOmf
1hoPZnVDgXGfriZnCf7+7OdNzQL2/usCO1mb47Bp5peUitJueBqm+NRZIR7V
e358LFbZDX1iJmsLrUvQJr3R1yF1bP679DIJPpXIbdfr33NNbPsUu3mM3SsQ
eYUmYdneDVrnx20UkgqRDJUEz3E3NLoEDnW8DEHhpZ2X5Hu6odtlSp7rSQqe
CGi+l9HfDc/ttGcneMowMqst4WR0w3spLpvf2ZU4V668x2OoG/6U9raVbCDi
VY78j8Mj7Od/4aewYD62fpPGe3qsG2RFDcc/mrjg5vqHB+umu2F+bbfraFIm
EouOOLtjvhsOcHNvkTIrRzcvBXlGfO2GbOcf+5s8KhFNxSfp60o37BWYqmjw
KUfygh6Ntn/Y+hj8oNyTzUKx005DpHU9IE34ezi48xKe7bD7qcjdAw/L2+v0
P+Ri3VTz7Xn8PeD7vmU0xIqAS64bqfMI98Cs6sX5af5KvO7U6Yu3tvbAgUvK
r/+jlmL7HRohHyR6wMEj+8gP9VTc8e1okf7eHuB3bbsqcycA7eg72NUk0wPF
/u2RZOcCdKdw3/Ru+R6I8xU4F3GAiIb8JDY+UOwBl2t/b2oFVSCl86IHfqj0
QNi5ybHxDez7QYbf0FGjB36mSt1F6glo8R+nB0WrB4KZtlrhzEhsNLQaf1yv
B2JtaEvn1YtwZfVSfbFRD/TPlmjc6SXijeFzrE2mPaCVM/Jcp5mInWwnvt+x
6oHQEHWF70JF+IXSyNYpux5gTS9zaUlF4j18LNXzl3uAIhPaamSdgILH+y60
u/TATTWGMR4rRu9anwdKe/RAt9GH8093VyC1xLb8RO8eqHweeHm5/P//7330
7I9fDwi+m+3kn81H3zUrJpyDesDQ+ZXOVrW7qL34U5ZPWA985005LaqajEO5
5UzCo3pgyIT3gplQCdZ1c+NJiesBHfm1GU3PiViAVomLknogRzNgfi27v2Yp
zvvWp/dARa+b/IHbhTgz7eBhnNMD1dEJ+0MtorH97+vT1MIeGKgx+aHsGYOk
LlbnvivrASkRrkft0YVo7tmC2XxlD/y6fEKxJ5mA6qUO8a/W9cBEqMTmM9pE
5Bvt8YLncQ84lQyMUH2KkcZCzV3x9h5QSlh3NfFsEuI0XlSQwWx/4kl8R/rv
YnLj4dlj3T2gneieed4qD8eLexac6uuBZF5nt76vZdg8oM7SlNYDTbRdT/7/
e92O0S+bHAfZekXNH+Vhz59j2go9nsM9cO6t/ptTyhm4vNwrMPh9D4y+FrdL
l12L3fkeHX040QN8PnSLqA0ZSOnGt7mcjz0gc/DxjO2nEvSLqVhcudADe796
HZr+SECdyt42bd96YE7Z4aJfbBkKz2oQIv/oAYF/LzeSRnKRwb+l3ld/2P5p
CZ9QjPJHQo5HQ6bXkcDQanvTW+1E/Kr7lsr3DSR49qh56XRiEc6VbfrMyU+C
z3dOGqxTIuDLcd9LhYVIIDjpPaFHLMeyX4/Z7dlCggCvtXo9WwvxopmP6JEd
JAie712v5xqLG1se98NuEvw4kSSGQ8PRHYkf94ykSHB905FJrr/5SDNERc32
AAma1Zl61KPliGvS96vrYXaNcb0esDWUgPp1Wwh3jpLA9ITik4wHxSix8qd9
lCoJbLKVN/cKpyBLQdWt6UCCWX2FGVvyDfyf9x1qqTYJePNSjMyjsvHEUGt4
ox4Jvt2XOfXxZykmqv1Wf2FEAqMrKjPVm4j4Rp7aMsOEBPS8+ccSbaX4GId/
5aglCeL5jvEpR2XhVad2x0VbEni53CKo5V3Bz8ir2/45sN+f3vbo9GIqipRX
Z/A7k6AjuTZ5y/0SZJQYELXjOgluV5sbZOoRkcj3J5oHvEiQ7aidwvegHA1b
/V057kMCq32bWsLq81H+E40aXX8S9Mb/ZdyMD0VOu4OcLEJIcKvkjKuZTgKW
u/9UwimcBFmZBTn8L4vw15l/LO8YErz0l1Y8t5eImw00Y+/Fk+DJzgGS9SIB
B9YGayWmkOAGlNYGaxZhbRH8Kz+TzeN8zdv493GYx3dtfU0eCbgsOwc/yUUg
2hvk0lFMgisZ7XlnpwtQKoTuGiCw9VmhWzLiCehC0bOhN9Uk6OTJUtUaIqI9
Gzgezj4iAX+MTFKzYwmauaZ1+mczCfzmPs+82pWCqin3/mzoIIGYH/d27OKD
vRVeNIg9J4F4agjx6pU87KS0Kz+BRIK9N7I5F9YTsOUx/xg+Cglkl2WDTTkq
8BmVV7cjmCTIbeCvTBUtwWqqSg7rXpOgyEh+w4YVNo8T8YYB70jgGfSfwZYv
4eg/jTmVH+Ns/eLfOhzqLESCmrqSNz+SILQn8uYhRETrThZvWlgggYjtocBK
QSJa0lrz23mJBOZRVmKtJwvR5KkLU+M/SfDols3l5tQw9FKnmW73j80ne+fn
luFETNITefKasxeeS5ov+SqV4Fb9G+WmPL0we75oUxq7PlUa9idRN/VCu1pA
UH0ou787KxN0RrQXFJOfC1G0cvHD82HXurb1ApH76m37g0442OSDmeauXpA7
3ynW7J6BvMxOoLZ9vaApOqjyXrgMXbZIlzt2oBf+znzAdg1EZG61tKXucC/k
FYq5hyeUIl2bcxxyx3rhn3+yQH1vGjpuW7lQqtYLKq+elzGLPLHsRe7h3agX
3r2ImRvVysM7Ll3uyj7dCxXyeSI5QeVYwLGzdosB+/wnj46/VSfiNVd2ZCee
74UP7jEje+yK8Vcn3wh+i15o/hJ4+PrBBDzuzPKKvNALfL0iqhb14Yh17bAd
hwN7/VjBm7W6hajbLVYv8GovnKZ9elWXSEDN7jNKP916QVpmqkbDnYCIN7R3
eXv1wik9yPKdKEDZXvm8n316IeBYwrv8lDD0wHv1u0tAL2iLjc/0KyXiwNuW
YxOhvfBsX2Lfn4ZifMO3YeBiZC/Ao6xnf3WI2OGOYMvwg14wFR34V3ekHJv6
uxWbJfXCLZkDiZJbc/HpQNJDWnovtFzvyakRdsbKwZJ39XN7IVP+9nDhcjqS
CQ126i7qhep/pmFl9FK0LWzkPCL0wrlbEabT/kTEF66i3l7dC4Ii/9kUu5Si
vxHJMsoNvTA5sM/xcFIaWoxaFK5v6YWrnwPt/I544dEYg39yT3vB7FJE9QWj
PMx4UD5b9oJ9XnA0/1aPcvziIefLPeReKD33Sm2DABE3JdjjHCpbn2jVSl+B
Ylye1F65dbAXrJKumctej8eZKVvTk4Z7wVw4cSnnVwSKSfO+J/ChF2RMtjyX
di5E/hk096jJXjBKJjb7XSUg9yw5a85PvfBrII5ltVKO7HMiTwUtsp8faOu/
1CxAxnkTh38t9wL/JWW50MOhSLtAc8et370wvHFA7h47vo8WZW9YXEOGqq2X
tZ+nF2Opkh9fr3GRwWxflNJIKwFvLTN9N8lLhtnOhdiNdmWYh1Dba7+ZDNkr
jWve+mTjVSJf4xsxMng++eYhpGyPFyqd8813kKG5T67Dbzwdva9+EUPfTYZp
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
m1vRxk3/5jlj9fIfc3Pz/P8AUZtdmg==
         "]]},
       Annotation[#, "Charting`Private`Tag$34810#1"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox[
       TagBox["p", HoldForm], TraditionalForm], None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 0.49999998979591836`}, {-4.8322403572687626`*^8, 
     4.8315952484635943`*^8}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$40126#1"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox[
       TagBox["k", HoldForm], TraditionalForm], None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 0.1499999969387755}, {-2.2769407734137803`, 
     2.2660739846346374`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.748467620414751*^9, 3.748467672973181*^9}, {
   3.748467719985899*^9, 3.748467759909861*^9}, 3.748467799664616*^9, 
   3.7484692850330887`*^9, {3.748469429666642*^9, 3.748469540237727*^9}, 
   3.748469704870392*^9, 3.748469924489888*^9, 3.7484701543216867`*^9, {
   3.748471147381475*^9, 3.748471160112268*^9}, {3.7484713880677156`*^9, 
   3.7484714019758673`*^9}, 3.748627277284683*^9, {3.7486273510663147`*^9, 
   3.748627354438671*^9}, {3.748627413023657*^9, 3.748627448560492*^9}, {
   3.748627558146336*^9, 3.7486275776234617`*^9}, {3.7486276096568937`*^9, 
   3.748627742450611*^9}, 3.748627891291566*^9, {3.748627933595346*^9, 
   3.748627945251459*^9}, 3.7486279995326347`*^9, 3.748628193799605*^9, 
   3.748628273423449*^9, 3.748628393863995*^9, {3.7486284423907948`*^9, 
   3.748628506990369*^9}, {3.748628543144608*^9, 3.748628569914256*^9}, {
   3.748629553555215*^9, 3.748629556987418*^9}, 3.7486297788423653`*^9, {
   3.748632736396652*^9, 3.748632768432262*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"9fec2e44-e3bd-4f36-9731-0c0933dff39d"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.748628278339157*^9},ExpressionUUID->"e883c779-aeb3-4ea6-b690-\
012a54c9b591"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "=", "10"}], ",", 
     RowBox[{"zs", "=", "0.4"}], ",", 
     RowBox[{"zr", "=", "0.3"}], ",", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"2", "Pi", " ", "200"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Im", "@", 
        RowBox[{"integrandp", "[", 
         RowBox[{"x", ",", 
          RowBox[{"p", "+", 
           RowBox[{".005", "I"}]}], ",", "\[Omega]", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"cijLS", "[", 
             RowBox[{"#", ",", "\[Omega]0", ",", "\[Omega]"}], "]"}], "&"}], "/@",
            "model"}], ",", "dList", ",", "zs", ",", "zr"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0", ",", ".5"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Full"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Im", "@", 
        RowBox[{"integrandk", "[", 
         RowBox[{"x", ",", "k", " ", ",", "\[Omega]", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"cijLS", "[", 
             RowBox[{"#", ",", "\[Omega]0", ",", "\[Omega]"}], "]"}], "&"}], "/@",
            "model"}], ",", "dList", ",", "zs", ",", "zr"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", ".5"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", ".5"}], "}"}], ",", "Full"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.748187128183873*^9, 3.74818713877255*^9}, {
   3.748187486030149*^9, 3.748187493444972*^9}, {3.748188876570087*^9, 
   3.748188883933667*^9}, 3.748189473802267*^9, 3.7482532672544556`*^9, {
   3.7482562134277887`*^9, 3.7482562311431427`*^9}, {3.7484618167375517`*^9, 
   3.748461830055317*^9}, 3.748461871303843*^9, {3.7484624599892607`*^9, 
   3.748462463043757*^9}, {3.74846401385914*^9, 3.7484640329527903`*^9}, {
   3.748464490067337*^9, 3.748464517869179*^9}, {3.7484646741797037`*^9, 
   3.7484646868978367`*^9}, 3.7484670083429117`*^9, {3.748467455093829*^9, 
   3.748467475396605*^9}, {3.748467768573749*^9, 3.7484678999026814`*^9}, {
   3.7484699290994387`*^9, 3.7484699370038357`*^9}, {3.7484702433147573`*^9, 
   3.7484702525331373`*^9}, {3.74847046289572*^9, 3.74847049484487*^9}, {
   3.7484711244353857`*^9, 3.748471127551928*^9}, {3.748627760519803*^9, 
   3.748627866659477*^9}, {3.748627927726124*^9, 3.748627929073142*^9}, 
   3.748628005955186*^9, {3.7486288931268797`*^9, 3.748628911194276*^9}, {
   3.748628962630872*^9, 3.748628968718856*^9}, {3.748629544846735*^9, 
   3.748629545034173*^9}, {3.748630193723762*^9, 3.7486301943608227`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"98ad3fba-ca58-4cf0-a468-d7056c5cdff4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
yP5b9L1tq38tLCz6fy4O3Qc=
         "]]},
       Annotation[#, "Charting`Private`Tag$1100826#1"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox[
       TagBox["p", HoldForm], TraditionalForm], None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 0.49999998979591836`}, {-3.93247662469822*^29, 
     4.08297730638429*^29}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
N+cXTzIhAf4HU7SbZg==
         "]]},
       Annotation[#, "Charting`Private`Tag$1105897#1"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox[
       TagBox["k", HoldForm], TraditionalForm], None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
       Charting`ScaledFrameTicks[{Identity, Identity}]}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Medium,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.5}, {-2.5957229984441015`, 2.5754790547440267`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7481871346361628`*^9, 3.748187139533935*^9}, {
   3.748187490886169*^9, 3.748187495423759*^9}, {3.7481888770933857`*^9, 
   3.7481888849694567`*^9}, 3.748188965387986*^9, 3.7481893532073307`*^9, {
   3.748189471916616*^9, 3.748189474555009*^9}, {3.748253256622023*^9, 
   3.748253267644676*^9}, 3.74825332577774*^9, {3.748256207697822*^9, 
   3.7482562321172857`*^9}, {3.7484618175069857`*^9, 3.748461831088121*^9}, 
   3.748461872174203*^9, {3.748462460938854*^9, 3.7484624636826773`*^9}, {
   3.748464017720285*^9, 3.748464035250966*^9}, {3.7484644907540083`*^9, 
   3.7484645187613077`*^9}, {3.748464676694255*^9, 3.748464688103256*^9}, 
   3.7484670088863688`*^9, {3.7484674462522306`*^9, 3.7484674758306627`*^9}, {
   3.7484677690207863`*^9, 3.748467900795697*^9}, 3.748469287633559*^9, 
   3.748469709304421*^9, {3.748469926699773*^9, 3.748469938017796*^9}, 
   3.748470156196989*^9, {3.7484702456314907`*^9, 3.74847025324492*^9}, {
   3.748470463796522*^9, 3.7484704959274807`*^9}, {3.748471122905772*^9, 
   3.748471128386468*^9}, 3.748627281428005*^9, {3.748627766851766*^9, 
   3.748627860043605*^9}, 3.7486278927793016`*^9, 3.748627930581229*^9, 
   3.7486280077377663`*^9, 3.74862842637825*^9, {3.748628893907502*^9, 
   3.748628913690321*^9}, {3.748628964544465*^9, 3.748628971055438*^9}, 
   3.748629547165072*^9, 3.748630197092754*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"d8b74c1f-0fcb-4e91-92f2-41b3b9261ed9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "=", "0"}], ",", 
     RowBox[{"zs", "=", ".1"}], ",", 
     RowBox[{"zr", "=", ".2"}], ",", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"2", " ", "Pi", " ", "10"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"NIntegrate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"integrandp", "[", 
      RowBox[{"x", ",", "p", ",", "\[Omega]", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"cijLS", "[", 
          RowBox[{"#", ",", "\[Omega]0", ",", "\[Omega]"}], "]"}], "&"}], "/@",
         "model"}], ",", "dList", ",", "zs", ",", "zr"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", ".5"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<MaxErrorIncreases\>\"", "\[Rule]", "2000"}]}], "}"}]}], 
     ",", 
     RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", "8"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "Infinity"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.748464539366283*^9, 3.748464664701714*^9}, 
   3.748466994313492*^9, {3.748469545863908*^9, 3.7484695799931803`*^9}, {
   3.748469713082979*^9, 3.748469757057172*^9}, {3.74846979218502*^9, 
   3.748469892755674*^9}, {3.748470162021141*^9, 3.748470167768915*^9}, 
   3.748627950373598*^9},
 CellLabel->
  "In[125]:=",ExpressionUUID->"2c90ef2b-bc1d-47f1-a5c3-883b76ad9b01"],

Cell[BoxData[
 RowBox[{"3.5521795120966475`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.5202557496036375`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.748464568342358*^9, 3.748464665777547*^9}, 
   3.748466996086128*^9, {3.748469564351407*^9, 3.748469581616082*^9}, {
   3.748469715221181*^9, 3.748469750888929*^9}, {3.748469796458076*^9, 
   3.748469837377142*^9}, {3.748469886544787*^9, 3.748469899357315*^9}, {
   3.7484701587581244`*^9, 3.748470168964308*^9}, 3.74862795115232*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"3a582059-c356-4d18-8d53-20e4a317cf70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "=", "0"}], ",", 
     RowBox[{"zs", "=", ".1"}], ",", 
     RowBox[{"zr", "=", ".2"}], ",", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"2", " ", "Pi", " ", "10"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"NIntegrate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"integrandk", "[", 
      RowBox[{"x", ",", "k", ",", "\[Omega]", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"cijLS", "[", 
          RowBox[{"#", ",", "\[Omega]0", ",", "\[Omega]"}], "]"}], "&"}], "/@",
         "model"}], ",", "dList", ",", "zs", ",", "zr"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", ".5"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<MaxErrorIncreases\>\"", "\[Rule]", "2000"}]}], "}"}]}], 
     ",", 
     RowBox[{"MaxRecursion", "\[Rule]", "Infinity"}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", "8"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "Infinity"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.748627958030636*^9, 3.748627979504622*^9}, {
  3.7486285302175493`*^9, 3.7486285312895803`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"1d079126-1891-4dba-baba-e16bf0bca514"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,38,2,31128408726715647136,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.748628430806116*^9, 3.748628531695518*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"9cc2b5db-8828-40b9-b6aa-79e180abcf8f"],

Cell[BoxData[
 RowBox[{"0.012401507290750024`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.0025515584127946186`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.748627968239984*^9, 3.748627980959055*^9}, 
   3.7486284319877577`*^9, 3.748628532912169*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"1098ac79-b02b-4c19-8c43-ca92cc52fc17"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute single trace", "Subsection",
 CellChangeTimes->{{3.747376755757457*^9, 3.747376792529705*^9}, {
  3.747376913761466*^9, 3.747376930176058*^9}, {3.748161080898367*^9, 
  3.748161122293969*^9}, {3.7481659473532043`*^9, 3.7481659558528643`*^9}, {
  3.748634024135983*^9, 
  3.748634030512599*^9}},ExpressionUUID->"4858ec90-f905-4a88-bca4-\
6086604647ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "VARIABLE", " ", "UPPER", " ", "BOUNDARY", " ", "FOR", " ", 
    "INTEGRATION"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"upperB", "[", 
     RowBox[{"f_", ",", "fm_", ",", "p0_", ",", "pm_"}], "]"}], ":=", 
    RowBox[{"p0", "+", 
     RowBox[{
      FractionBox["f", "fm"], "pm"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rickerF", "[", 
     RowBox[{"\[Omega]_", ",", "\[Omega]p_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"2", 
        SuperscriptBox["\[Omega]", "2"]}], 
       RowBox[{
        SqrtBox["Pi"], 
        SuperscriptBox["\[Omega]p", "3"]}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["\[Omega]", "\[Omega]p"], ")"}], "2"]}], "]"}]}], "//", 
     "N"}]}]}]}]], "Input",
 CellChangeTimes->{{3.748628757135374*^9, 3.7486288884092817`*^9}, {
  3.748628918864394*^9, 3.7486289291071997`*^9}, {3.7486289803198643`*^9, 
  3.748629000207176*^9}, {3.7486290338231153`*^9, 3.748629083188883*^9}, {
  3.7486291326008797`*^9, 3.748629167843288*^9}, {3.7486292411974*^9, 
  3.7486292731721773`*^9}, {3.748629312992618*^9, 3.748629317373666*^9}, {
  3.748629485493267*^9, 3.7486294869705553`*^9}, {3.748629610249708*^9, 
  3.7486296551708937`*^9}, {3.748629881169862*^9, 3.748629894372841*^9}, {
  3.7486309657612343`*^9, 3.748630966839916*^9}, {3.748631105945635*^9, 
  3.748631106296427*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"3f4184d5-09c1-46f3-bbac-fb149870b22c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deltafreq", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "=", "0"}], ",", 
        RowBox[{"zs", "=", ".3"}], ",", 
        RowBox[{"zr", "=", ".2"}], ",", 
        RowBox[{"\[Omega]c", "=", 
         RowBox[{"2", "Pi", " ", "f"}]}], ",", 
        RowBox[{"fmax", "=", "200"}], ",", 
        RowBox[{"\[Omega]ricker", "=", 
         RowBox[{"2", "Pi", " ", "30"}]}], ",", 
        RowBox[{"df", "=", "deltafreq"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zeroX", ",", "srcF"}], "}"}], "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "=", "\[IndentingNewLine]", 
             RowBox[{"NIntegrate", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"integrandk", "[", 
                RowBox[{"x", ",", "k", ",", "\[Omega]c", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"cijLS", "[", 
                    RowBox[{"#", ",", "\[Omega]0", ",", "\[Omega]c"}], "]"}], 
                   "&"}], "/@", "model"}], ",", "dList", ",", "zs", ",", 
                 "zr"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", 
                 RowBox[{"upperB", "[", 
                  RowBox[{"f", ",", "fmax", ",", ".1", ",", ".55"}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"Method", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
                  RowBox[{"\"\<MaxErrorIncreases\>\"", "\[Rule]", "2000"}]}], 
                 "}"}]}], ",", 
               RowBox[{"MaxRecursion", "\[Rule]", "20"}], ",", 
               RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}], 
               ",", 
               RowBox[{"PrecisionGoal", "\[Rule]", "8"}], ",", 
               RowBox[{"AccuracyGoal", "\[Rule]", "Infinity"}]}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"rickerF", "[", 
             RowBox[{
              RowBox[{"2", "Pi", " ", "f"}], ",", "\[Omega]ricker"}], "]"}]}],
            "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"f", ",", "1", ",", "fmax", ",", "df"}], "}"}]}], "]"}], "//",
         "Transpose"}]}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"f", ",", "i"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.748162656245847*^9, 3.748162743352501*^9}, {
   3.7481680532312098`*^9, 3.7481680617738657`*^9}, {3.748168206638163*^9, 
   3.7481682301174483`*^9}, {3.7481683177589445`*^9, 
   3.7481683196018333`*^9}, {3.7481684523439517`*^9, 
   3.7481684881910458`*^9}, {3.748168688319949*^9, 3.748168725535676*^9}, {
   3.748168853615446*^9, 3.7481688541127653`*^9}, {3.7481689303679934`*^9, 
   3.748168981112608*^9}, {3.748169012720459*^9, 3.748169039310997*^9}, {
   3.7481691329483986`*^9, 3.748169141314593*^9}, {3.7481691815092225`*^9, 
   3.7481692099617004`*^9}, {3.748169471809354*^9, 3.748169476017544*^9}, 
   3.748169775614017*^9, {3.7481699416433*^9, 3.74816994717297*^9}, {
   3.74817001613792*^9, 3.7481700167004128`*^9}, {3.7481700689778695`*^9, 
   3.748170100515333*^9}, {3.74817014632557*^9, 3.748170151024007*^9}, 
   3.748170184946782*^9, {3.748170229591939*^9, 3.7481702297132587`*^9}, {
   3.7481703144705696`*^9, 3.7481703512309723`*^9}, 3.7481705293274612`*^9, {
   3.748186012681467*^9, 3.748186043601716*^9}, {3.748186078133031*^9, 
   3.748186213338007*^9}, {3.748187147835311*^9, 3.7481871670895147`*^9}, {
   3.748188896960225*^9, 3.748188905738678*^9}, {3.748189311340786*^9, 
   3.748189314368596*^9}, 3.748189363321883*^9, 3.748189451534799*^9, {
   3.748189494527014*^9, 3.7481895058481703`*^9}, {3.748189543772287*^9, 
   3.748189568196405*^9}, 3.748253263166274*^9, {3.748253348651883*^9, 
   3.7482534599673853`*^9}, 3.748254070930442*^9, {3.7482541040296574`*^9, 
   3.748254112828849*^9}, {3.748462559852129*^9, 3.748462574068654*^9}, 
   3.748462779302514*^9, 3.74846416625576*^9, {3.748464332552719*^9, 
   3.7484643360225983`*^9}, {3.748467019489729*^9, 3.7484670209228563`*^9}, {
   3.748470173812943*^9, 3.748470176000525*^9}, 3.748471406847465*^9, 
   3.748627990684147*^9, 3.748628574614544*^9, {3.7486295071065483`*^9, 
   3.748629580637865*^9}, {3.7486296737704573`*^9, 3.748629714869879*^9}, {
   3.7486298080991297`*^9, 3.748629816653709*^9}, {3.748629898189569*^9, 
   3.7486299182202463`*^9}, 3.748630134149352*^9, {3.748630206486733*^9, 
   3.748630211595395*^9}, {3.7486309710951767`*^9, 3.748631026398262*^9}, 
   3.748631074579077*^9, {3.748632898171775*^9, 3.74863290279958*^9}, {
   3.748633074738513*^9, 3.7486330816182117`*^9}, 3.748633219630146*^9, {
   3.748633321637404*^9, 3.74863332521867*^9}, {3.748633574597629*^9, 
   3.7486335766824636`*^9}},ExpressionUUID->"ea8c2e57-8741-47c2-bcae-\
0902e2194e90"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,30,1,31128437189035560388,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.748463998586536*^9, 3.748464039252151*^9, 3.748464167028741*^9, 
   3.7484643368538427`*^9, 3.748467021525505*^9, 3.748469917224184*^9, 
   3.748470190199905*^9, 3.748471413842972*^9, {3.7486295686213503`*^9, 
   3.748629591963616*^9}, 3.7486296250753307`*^9, 3.7486296996954308`*^9, 
   3.748629735647887*^9, 3.7486298176803617`*^9, 3.7486298531620827`*^9, 
   3.748629918798244*^9, 3.74863024951952*^9, 3.7486327914935713`*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"9f116d0c-7f64-4d85-aa72-c2c839f00d25"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,30,2,31128437189035560388,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.748463998586536*^9, 3.748464039252151*^9, 3.748464167028741*^9, 
   3.7484643368538427`*^9, 3.748467021525505*^9, 3.748469917224184*^9, 
   3.748470190199905*^9, 3.748471413842972*^9, {3.7486295686213503`*^9, 
   3.748629591963616*^9}, 3.7486296250753307`*^9, 3.7486296996954308`*^9, 
   3.748629735647887*^9, 3.7486298176803617`*^9, 3.7486298531620827`*^9, 
   3.748629918798244*^9, 3.74863024951952*^9, 3.748632793955565*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"0709fd50-3388-4d15-9104-b4346ddd0052"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,30,3,31128437189035560388,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.748463998586536*^9, 3.748464039252151*^9, 3.748464167028741*^9, 
   3.7484643368538427`*^9, 3.748467021525505*^9, 3.748469917224184*^9, 
   3.748470190199905*^9, 3.748471413842972*^9, {3.7486295686213503`*^9, 
   3.748629591963616*^9}, 3.7486296250753307`*^9, 3.7486296996954308`*^9, 
   3.748629735647887*^9, 3.7486298176803617`*^9, 3.7486298531620827`*^9, 
   3.748629918798244*^9, 3.74863024951952*^9, 3.748632794163488*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"55f7f032-0795-4abe-bac4-d8f7a25fdece"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,30,4,31128437189035560388,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.748463998586536*^9, 3.748464039252151*^9, 3.748464167028741*^9, 
   3.7484643368538427`*^9, 3.748467021525505*^9, 3.748469917224184*^9, 
   3.748470190199905*^9, 3.748471413842972*^9, {3.7486295686213503`*^9, 
   3.748629591963616*^9}, 3.7486296250753307`*^9, 3.7486296996954308`*^9, 
   3.748629735647887*^9, 3.7486298176803617`*^9, 3.7486298531620827`*^9, 
   3.748629918798244*^9, 3.74863024951952*^9, 3.748632794183839*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"2dc208aa-e17b-491d-ac8c-2b27a58443d2"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"20\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"k\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"k\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.021094247887584905`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{RowBox[{\\\"0.004433728613142012`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"-\\\", \
RowBox[{\\\"0.0022991944834116333`\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}]\\) and \\!\\(\\*RowBox[{\\\"8.078358974569279`*^-10\
\\\"}]\\) for the integral and error estimates.\"",2,30,5,
   31128437189035560388,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.748463998586536*^9, 3.748464039252151*^9, 3.748464167028741*^9, 
   3.7484643368538427`*^9, 3.748467021525505*^9, 3.748469917224184*^9, 
   3.748470190199905*^9, 3.748471413842972*^9, {3.7486295686213503`*^9, 
   3.748629591963616*^9}, 3.7486296250753307`*^9, 3.7486296996954308`*^9, 
   3.748629735647887*^9, 3.7486298176803617`*^9, 3.7486298531620827`*^9, 
   3.748629918798244*^9, 3.74863024951952*^9, 3.7486327981643057`*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"acf537b8-df9a-4446-94d5-7c68d7e06482"],

Cell[BoxData[
<<<<<<< Updated upstream
 TemplateBox[{
  "Set","shape",
   "\:f3b5Lists \!\({zeroX, srcF}\) and \!\({{\(-0.002021310693169794`\) - \
0.0000715429454158158`\\\\\\ \[ImaginaryI], 6.643988581243058`*^-6}, \
{\(-0.00015898042497521986`\) + 0.0003480948141385688`\\\\\\ \[ImaginaryI], \
0.00002648751529083387`}, {\(-0.0015177732271102623`\) + \
0.0016901235214155615`\\\\\\ \[ImaginaryI], 0.000059266733467837564`}, \
{\(-0.0029736813809057906`\) - 0.0027099863382649895`\\\\\\ \[ImaginaryI], \
0.00010454676974670938`}, {\(\(0.001431178543855608`\)\(\[VeryThinSpace]\)\) \
- 0.0027016903937044797`\\\\\\ \[ImaginaryI], 0.00016172892501053465`}, \
\[LeftSkeleton]42\[RightSkeleton], {\(-0.0176926\) + \
0.031732405819872245`\\\\\\ \[ImaginaryI], 0.0011846771936294548`}, \
{\(-0.04676147359187824`\) - 0.011219206197315442`\\\\\\ \[ImaginaryI], \
0.0011084150628796754`}, {\(\(0.008511263556364846`\)\(\[VeryThinSpace]\)\) - \
0.04329140532306313`\\\\\\ \[ImaginaryI], 0.0010338984271183477`}, \
\[LeftSkeleton]150\[RightSkeleton]}\) are not the same shape.\:f3b5",2,30,6,
   31128437189035560388,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.748463998586536*^9, 3.748464039252151*^9, 3.748464167028741*^9, 
   3.7484643368538427`*^9, 3.748467021525505*^9, 3.748469917224184*^9, 
   3.748470190199905*^9, 3.748471413842972*^9, {3.7486295686213503`*^9, 
   3.748629591963616*^9}, 3.7486296250753307`*^9, 3.7486296996954308`*^9, 
   3.748629735647887*^9, 3.7486298176803617`*^9, 3.7486298531620827`*^9, 
   3.748629918798244*^9, 3.74863024951952*^9, 3.7486332149931583`*^9, 
   3.7486341695108137`*^9},ExpressionUUID->"1f3b84ff-dc28-481e-92c1-\
1d8fb96d3709"]
=======
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{
                  RowBox[{"(", 
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    TemplateBox[{"18"},
                    "OutputSizeLimit`Skeleton"], "\[VeryThinSpace]", "-", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]}], ")"}], " ", 
                    TemplateBox[{"5"},
                    "OutputSizeLimit`Skeleton"], " ", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "+", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]}]], " ", 
                    SqrtBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]]}]]}], "+", 
                    TemplateBox[{"4"},
                    "OutputSizeLimit`Skeleton"]}], ")"}]}], 
                 RowBox[{
                  RowBox[{"-", "1.`"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "+", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]}]], " ", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]}]]}], "+", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "+", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "-", 
                    FractionBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    TemplateBox[{"5"},
                    "OutputSizeLimit`Skeleton"], "+", 
                    FractionBox[
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"]]}], ")"}], 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"]}]], "+", 
                FractionBox[
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"], 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]]}], ",", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], "}"}], ",", 
             RowBox[{"{", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"], "}"}]}], "}"}], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 45, 26796555998562420339, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 45, 26796555998562420339, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{65., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 45, 26796555998562420339, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[26796555998562420339 === $SessionID, 
   Out[45], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.747482280024672*^9, 3.747482312652038*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"5568286b-fd06-4b0f-8491-4f9b771db407"]
>>>>>>> Stashed changes
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"time", " ", "vector"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t", "=", 
     RowBox[{
      FractionBox[
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "srcF", "]"}], "]"}], 
       RowBox[{"deltafreq", " ", 
        RowBox[{"Length", "[", "srcF", "]"}]}]], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"delay", "=", ".1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Re", "@", 
           RowBox[{"InverseFourier", "@", 
            RowBox[{"(", 
             RowBox[{"srcF", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Exp", "[", 
                  RowBox[{
                  "\[ImaginaryI]", " ", "2", "Pi", "#", " ", "delay"}], "]"}],
                  "&"}], "/@", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Range", "[", "200", "]"}], "-", "1"}], ")"}]}], 
               ")"}]}], ")"}]}]}]}], "}"}], "\[Transpose]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Full"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"\"\<Source wavelet with a delay: \>\"", "<>", 
         RowBox[{"ToString", "[", "delay", "]"}], "<>", "\"\< s\>\""}]}]}], 
      "]"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.748631964872479*^9, 3.748631967275115*^9}, {
  3.7486320782381353`*^9, 3.748632085337183*^9}, {3.7486322431089907`*^9, 
  3.7486322907263117`*^9}, {3.748633104393734*^9, 3.748633105955492*^9}, {
  3.7486333550826387`*^9, 3.74863337589465*^9}, {3.748634040056136*^9, 
  3.7486341191667*^9}, {3.748634150753503*^9, 3.748634158266848*^9}, {
  3.748634473136795*^9, 3.748634500954401*^9}, {3.7486345501983023`*^9, 
  3.74863455587187*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"586e34b0-9483-4a76-9f68-349c0587ff23"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
4hC63/0ftUeBxg==
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Source wavelet with a delay: 0.1 s\"", TraditionalForm],
  PlotRange->{{0, 1.}, {-0.0022414807007996437`, 0.005626976975981912}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7486345012273903`*^9, 3.7486345629371977`*^9},
 CellLabel->"Out[130]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"],ExpressionUUID->"c7740f49-195c-47db-8834-da31ece1e097"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"Re", "@", 
       RowBox[{"InverseFourier", "@", 
        RowBox[{"(", 
         RowBox[{"zeroX", " ", "srcF"}], ")"}]}]}]}], "}"}], "\[Transpose]"}],
    ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t, s\>\"", ",", "\"\<Amplitude\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.748464143696001*^9, 3.748464146810217*^9}, {
   3.748464263311138*^9, 3.748464320728146*^9}, {3.7484671338409853`*^9, 
   3.748467180676756*^9}, 3.748470186238119*^9, {3.748470363058807*^9, 
   3.748470452451909*^9}, {3.7484715148659573`*^9, 3.748471518422521*^9}, {
   3.748630023115735*^9, 3.748630033751243*^9}, {3.748630138116153*^9, 
   3.74863015063831*^9}, {3.748630235940176*^9, 3.748630236119266*^9}, {
   3.7486306981276817`*^9, 3.748630703560721*^9}, {3.7486311284873667`*^9, 
   3.748631144029141*^9}, {3.748633415836673*^9, 3.748633463655257*^9}, {
   3.748633501624813*^9, 3.7486335191167297`*^9}, {3.748633646660088*^9, 
   3.748633658229075*^9}, {3.7486337481798363`*^9, 3.7486337576408453`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"7f8fa2dd-761a-47c4-bea7-5929c96ffa5b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
hg==
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t, s\"", TraditionalForm], 
    FormBox["\"Amplitude\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{395.60546875, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {-0.00009722293517055197, 0.00015438446540924243`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.748633519349642*^9, {3.748633654645114*^9, 3.7486336585206747`*^9}, 
   3.748633757869995*^9, 3.748634506615754*^9},
 CellLabel->
<<<<<<< Updated upstream
  "Out[127]=",ExpressionUUID->"d98bbb29-6dd2-4910-ab8f-4ebbd9ae2ac1"]
=======
  "Out[241]=",ExpressionUUID->"75eb6512-1fbe-47fc-977e-c615f824a091"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stovas and Ursin (2003) Well - log example", "Section",
 CellChangeTimes->{{3.7473773381799393`*^9, 3.747377347721385*^9}, {
  3.7473810680377293`*^9, 
  3.7473810735565042`*^9}},ExpressionUUID->"654570d1-8d91-4418-ab4e-\
b4d11f129a01"],

Cell[CellGroupData[{

Cell["Load and prepare the data", "Subsection",
 CellChangeTimes->{{3.74737706065038*^9, 3.747377091039295*^9}, {
  3.747377174388645*^9, 3.747377178494112*^9}, {3.7473773663300533`*^9, 
  3.7473773717451363`*^9}, {3.747377436124074*^9, 
  3.747377438141183*^9}},ExpressionUUID->"50684b04-fe81-4d99-94dc-\
700678d6ffc8"],

Cell["Null", "CodeText",ExpressionUUID->"a4e34306-0af0-43d3-9a2b-bef36f6ffdde"],

Cell["Null", "Input",ExpressionUUID->"3c24a24d-aeb1-4f04-9cd2-9cd2f0533659"],

Cell[CellGroupData[{

Cell["Null", "Input",ExpressionUUID->"7c3b643f-a89c-4a41-9340-0c358c793a41"],

Cell["Null", "Output",ExpressionUUID->"538c2494-e523-44c0-924c-cbb644e1b9e5"]
}, Open  ]],

Cell["Null", "CodeText",ExpressionUUID->"4a1fcc2e-eb14-4a0d-86b4-b18059e87e68"],

Cell["Null", "Input",ExpressionUUID->"0b6fae64-5505-45f7-89c0-1b7393dbb7d9"],

Cell["Null", "CodeText",ExpressionUUID->"d426c2fa-d51e-43a9-bdb4-89fbf35b9818"],

Cell["Null", "Input",ExpressionUUID->"825af256-9d94-410e-beb9-f128eed58e16"],

Cell["Null", "CodeText",ExpressionUUID->"ec1d9357-e36c-498d-b3dc-c2ca6eaa45e6"],

Cell["Null", "Input",ExpressionUUID->"38f126c4-49c6-4f4c-afee-d02ce9d0e033"]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate the RT response", "Subsection",
 CellChangeTimes->{{3.74737706065038*^9, 3.747377091039295*^9}, {
  3.747377174388645*^9, 3.747377178494112*^9}, {3.7473773663300533`*^9, 
  3.7473773717451363`*^9}, {3.747377436124074*^9, 3.747377438141183*^9}, {
  3.747377649121665*^9, 3.7473776533625317`*^9}, {3.747389921477066*^9, 
  3.747389942007537*^9}},ExpressionUUID->"4abb4fc0-f13d-4a46-aa8d-\
fd1ee6dc1daf"],

Cell[CellGroupData[{

Cell[" for a fixed frequency/slowness pair", "Subsubsection",
 CellChangeTimes->{{3.7473899433922787`*^9, 
  3.7473899479567947`*^9}},ExpressionUUID->"45f35ade-da82-4584-b476-\
a3bbd9a612c8"],

Cell["Null", "CodeText",ExpressionUUID->"579f186d-792d-4052-be9c-9bc6e6f21d50"],

Cell["Null", "Input",ExpressionUUID->"68a1119f-449e-4bae-94ba-4415964f8a47"],

Cell["Null", "CodeText",ExpressionUUID->"88f532b6-3acc-4071-be63-c215502038f5"],

Cell["Null", "Input",ExpressionUUID->"dfd983aa-a615-4802-ab1a-74ea56395253"],

Cell["Null", "CodeText",ExpressionUUID->"9e28f81e-7638-4183-872c-d4b9288c5895"],

Cell["Null", "Input",ExpressionUUID->"66a981f1-5adb-45cc-bedd-5e468599f901"],

Cell["Null", "CodeText",ExpressionUUID->"822657b9-d32a-4350-b146-d093f7eff2d5"],

Cell[CellGroupData[{

Cell["Null", "Input",ExpressionUUID->"2b2b3696-c1f8-4262-96ed-fcc711c6cb7c"],

Cell["Null", "Output",ExpressionUUID->"aba3d9d8-b0fc-476e-84ab-6d774fc7df08"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[" for a range of frequency / wavenumbers", "Subsubsection",
 CellChangeTimes->{{3.7473899433922787`*^9, 3.7473899479567947`*^9}, {
  3.7473900524886923`*^9, 
  3.747390065330941*^9}},ExpressionUUID->"af7e3fe2-ecfe-457d-9c9c-\
2a6a539fb974"],

Cell["predefine arrays", "CodeText",
 CellChangeTimes->{{3.7473901559444923`*^9, 
  3.747390169656323*^9}},ExpressionUUID->"c596615c-554e-4060-887a-\
7a48cf8b6304"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "101", ",", ".5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", ".25", ",", ".00125"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kList", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"2", "Pi", " ", 
       RowBox[{"fList", "[", 
        RowBox[{"[", "fj", "]"}], "]"}], 
       RowBox[{"pList", "[", 
        RowBox[{"[", "pj", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"fj", ",", "1", ",", 
        RowBox[{"Length", "[", "fList", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"pj", ",", "1", ",", 
        RowBox[{"Length", "[", "pList", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"output", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Length", "[", "fList", "]"}], ",", 
       RowBox[{"Length", "[", "pList", "]"}], ",", "2", ",", "2"}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.747390088797329*^9, 3.7473901506320467`*^9}, {
   3.747390575774085*^9, 3.747390610698172*^9}, {3.747390960591589*^9, 
   3.7473909626952*^9}, {3.747391106622665*^9, 3.747391124633696*^9}, {
   3.747391421361306*^9, 3.747391428017626*^9}, {3.7473917541777163`*^9, 
   3.7473917677518797`*^9}, {3.747394265240611*^9, 3.747394284766642*^9}, {
   3.7473964292841253`*^9, 3.7473964294382467`*^9}, {3.747396614841267*^9, 
   3.747396616651857*^9}, {3.747402214558084*^9, 3.747402226399575*^9}, {
   3.7474024244988203`*^9, 3.747402427832797*^9}, {3.747402627187251*^9, 
   3.747402634789793*^9}, {3.747403078333542*^9, 3.747403096005754*^9}, {
   3.747414799790394*^9, 3.74741481510332*^9}, 3.7474149886141653`*^9, {
   3.747415030620665*^9, 3.7474150503018303`*^9}, {3.747417008463871*^9, 
   3.747417024260826*^9}, {3.7474177695228233`*^9, 3.747417782849481*^9}, {
   3.747418060658661*^9, 3.747418078483203*^9}, 3.74741945890383*^9, {
   3.747419586495418*^9, 3.7474195918529882`*^9}, {3.747419990823823*^9, 
   3.747420003835018*^9}, {3.7474691887309227`*^9, 3.747469194786471*^9}, {
   3.747471724713607*^9, 3.747471733906837*^9}, {3.747472394056554*^9, 
   3.7474724372372913`*^9}, {3.747473861402933*^9, 3.747473875077958*^9}, {
   3.747474905801217*^9, 3.747474912130673*^9}, 3.74747508056806*^9, {
   3.747476533788001*^9, 3.747476535504698*^9}, 3.747476577623684*^9, 
   3.747477088901078*^9, 3.747477125908063*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"be723fc6-93c8-414c-975e-afbdb82fb127"],

Cell["loop over frequency/wavenumber", "CodeText",
 CellChangeTimes->{{3.7473901559444923`*^9, 3.747390198259634*^9}, {
  3.747471359811429*^9, 
  3.747471364888942*^9}},ExpressionUUID->"397235b2-ef71-43c8-baba-\
08aa9f2c910f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "fList", "]"}], "\[GreaterEqual]", 
     RowBox[{"Length", "[", "pList", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"listLong", "=", "fList"}], ";", 
     RowBox[{"listShort", "=", "pList"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"writeOut", "[", 
       RowBox[{"jS_", ",", "jL_", ",", "writeFrom_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"output", "[", 
        RowBox[{"[", 
         RowBox[{"jL", ",", "jS"}], "]"}], "]"}], "=", "writeFrom"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pf", "[", 
       RowBox[{"jS_", ",", "jL_"}], "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pList", "[", 
         RowBox[{"[", "jS", "]"}], "]"}], ",", 
        RowBox[{"fList", "[", 
         RowBox[{"[", "jL", "]"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"listLong", "=", "pList"}], ";", 
     RowBox[{"listShort", "=", "fList"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"writeOut", "[", 
       RowBox[{"jS_", ",", "jL_", ",", "writeFrom_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"output", "[", 
        RowBox[{"[", 
         RowBox[{"jS", ",", "jL"}], "]"}], "]"}], "=", "writeFrom"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pf", "[", 
       RowBox[{"jS_", ",", "jL_"}], "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pList", "[", 
         RowBox[{"[", "jL", "]"}], "]"}], ",", 
        RowBox[{"fList", "[", 
         RowBox[{"[", "jS", "]"}], "]"}]}], "}"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7473902033744307`*^9, 3.747390349632296*^9}, {
   3.747390384163583*^9, 3.747390480532502*^9}, {3.7473905244216623`*^9, 
   3.747390525634223*^9}, {3.747390709421997*^9, 3.7473907112610683`*^9}, {
   3.747391012760269*^9, 3.747391012875765*^9}, {3.747391135968746*^9, 
   3.747391140962044*^9}, {3.747391260147698*^9, 3.7473913449125967`*^9}, {
   3.747391394817429*^9, 3.7473913956349382`*^9}, {3.74739153030597*^9, 
   3.747391555131609*^9}, {3.747391722344503*^9, 3.747391731586879*^9}, {
   3.7473942477250357`*^9, 3.747394257277479*^9}, {3.7473943353852787`*^9, 
   3.747394404353936*^9}, {3.747395474036394*^9, 3.747395524833782*^9}, {
   3.747395891036401*^9, 3.747395891385426*^9}, {3.747395966764223*^9, 
   3.7473959745446463`*^9}, {3.747396578668304*^9, 3.747396597418047*^9}, {
   3.747396658706184*^9, 3.747396659000778*^9}, {3.747397391848755*^9, 
   3.747397392813457*^9}, {3.7473998913343763`*^9, 3.747399895652075*^9}, {
   3.747400080995644*^9, 3.747400147097252*^9}, {3.7474003369259987`*^9, 
   3.747400407952282*^9}, {3.7474004383651037`*^9, 3.747400647585788*^9}, 
   3.747400681170877*^9, {3.747400776654929*^9, 3.7474007879539557`*^9}, {
   3.7474008379421186`*^9, 3.747400846669436*^9}, {3.7474008961198387`*^9, 
   3.747400901244816*^9}, {3.7474009460590477`*^9, 3.747401026120905*^9}, {
   3.747401081223762*^9, 3.74740112668215*^9}, 3.747401280073485*^9, {
   3.7474014286662292`*^9, 3.7474014306516*^9}, 3.7474024087202168`*^9, {
   3.7474025765946913`*^9, 3.747402588708708*^9}, {3.747403068001771*^9, 
   3.747403068398427*^9}, {3.747414877308096*^9, 3.747414962246346*^9}, {
   3.74741505523588*^9, 3.747415070119973*^9}, {3.747415258856804*^9, 
   3.747415267336335*^9}, {3.747416892543791*^9, 3.747416894569048*^9}, {
   3.747417810895164*^9, 3.747417885216387*^9}, {3.747417973870023*^9, 
   3.747417979640111*^9}, 3.747418801444216*^9, {3.747419021872449*^9, 
   3.7474191605032177`*^9}, 3.747419219516514*^9, 3.747419290257409*^9, {
   3.7474193444120502`*^9, 3.7474193618305073`*^9}, {3.7474193971346607`*^9, 
   3.747419446368544*^9}, 3.747419489701212*^9, 3.74741959749657*^9, {
   3.747419922912486*^9, 3.747419975291711*^9}, {3.7474200341767073`*^9, 
   3.747420051699609*^9}, 3.747420122730297*^9, {3.747464263371266*^9, 
   3.747464336758173*^9}, {3.747469009803527*^9, 3.74746916359832*^9}, {
   3.747469217542225*^9, 3.747469267734264*^9}, {3.7474693441067953`*^9, 
   3.747469454651286*^9}, {3.747470109507183*^9, 3.747470179758613*^9}, {
   3.747470297841748*^9, 3.747470352480288*^9}, {3.747470491975865*^9, 
   3.747470492641183*^9}, {3.747470526352611*^9, 3.747470527087099*^9}, {
   3.7474705990538073`*^9, 3.747470600187867*^9}, {3.74747074695373*^9, 
   3.747470779164765*^9}, {3.747470828103664*^9, 3.747470828837343*^9}, {
   3.747471037426485*^9, 3.747471038660789*^9}, {3.747471074702343*^9, 
   3.7474711413144417`*^9}, {3.7474712142370043`*^9, 3.747471215318514*^9}, {
   3.747471279399405*^9, 3.74747128004489*^9}, {3.74747156119162*^9, 
   3.747471686170088*^9}, {3.747471739843485*^9, 3.747471760095015*^9}, {
   3.747472109744903*^9, 3.7474721400498343`*^9}, {3.747472359529154*^9, 
   3.747472385364389*^9}, 3.74747260411977*^9, {3.7474728202452374`*^9, 
   3.747472874439253*^9}, {3.747473427292398*^9, 3.747473464583378*^9}, {
   3.7474735162448378`*^9, 3.747473689519911*^9}, {3.7474738176695967`*^9, 
   3.74747382201403*^9}, {3.747473876983663*^9, 3.7474739019691133`*^9}, {
   3.747474004900285*^9, 3.74747403507806*^9}, 3.74747406628459*^9, {
   3.747474138414668*^9, 3.747474143271222*^9}, {3.747474349998983*^9, 
   3.747474386421317*^9}, {3.747474438546207*^9, 3.7474745108162193`*^9}, {
   3.747474558335252*^9, 3.7474746541929913`*^9}, {3.747474778057231*^9, 
   3.747474960887295*^9}, {3.747475114100174*^9, 3.7474751187526827`*^9}, {
   3.7474753318051777`*^9, 3.747475366709848*^9}, {3.747475434466835*^9, 
   3.747475450354697*^9}, {3.747475681991663*^9, 3.747475703233609*^9}, {
   3.7474759242636623`*^9, 3.747475941073176*^9}, {3.747476329676227*^9, 
   3.747476354940586*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"929e6068-5b44-43df-b9ff-24393dcf9891"],

Cell[CellGroupData[{

Cell["Null", "Input",ExpressionUUID->"20f3f7bb-d3fa-48d9-b971-0955804dffed"],

Cell["Null", "PrintTemporary",ExpressionUUID->"fe32d834-ced3-446e-9fe5-4339acc9915e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Null", "Input",ExpressionUUID->"3b00984c-78d5-40dd-8848-49e49155c90c"],

Cell["Null", "Output",ExpressionUUID->"cf37a09d-c5a6-4aba-8937-90c1ec751ecf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Null", "Input",ExpressionUUID->"6c1383d0-10e4-4029-96d2-e61d04290394"],

Cell["Null", "Output",ExpressionUUID->"df54d0c2-2c4d-4b8b-8c0d-092b188b7c5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Null", "Input",ExpressionUUID->"150d8816-b9d1-4ba4-8af5-b5bb42d1e3e1"],

Cell["Null", "Output",ExpressionUUID->"e4326185-f9fa-45d2-80ba-e4c9c4a4640a"]
}, Open  ]]
>>>>>>> Stashed changes
}, Open  ]]
}, Open  ]]
}, Closed]]
},
<<<<<<< Updated upstream
WindowSize->{1436, 855},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
=======
WindowSize->{1718, 1348},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
>>>>>>> Stashed changes
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 169, 3, 67, "Section",ExpressionUUID->"4252a514-f584-47d0-aff6-7b89297f0eb3"],
<<<<<<< Updated upstream
Cell[594, 20, 174, 8, 104, "Text",ExpressionUUID->"4b0ac36b-4b51-49a0-865d-342e48e3fd8b"],
Cell[CellGroupData[{
Cell[793, 32, 200, 3, 54, "Subsection",ExpressionUUID->"7db7c486-ac47-4517-b555-2e9483f292a6"],
Cell[996, 37, 860, 12, 38, "CodeText",ExpressionUUID->"694d0844-6d58-4b0e-8566-d121be6088e7"],
Cell[1859, 51, 10346, 278, 485, "Input",ExpressionUUID->"db78b205-a416-4027-8661-9195665415d0"],
Cell[12208, 331, 11386, 295, 688, "Input",ExpressionUUID->"5508570f-4243-42d6-8022-c457b174ae32"],
Cell[23597, 628, 1040, 23, 30, "Input",ExpressionUUID->"32dd7202-9ff1-4d97-a813-ed46295b78db"]
}, Closed]],
Cell[CellGroupData[{
Cell[24674, 656, 267, 4, 38, "Subsection",ExpressionUUID->"aa2026d7-da1a-430a-9a75-38fead6a5fd8"],
Cell[24944, 662, 257, 5, 38, "CodeText",ExpressionUUID->"7ddb0035-6cfb-483b-8421-770e6389f206"],
Cell[25204, 669, 13589, 352, 1927, "Input",ExpressionUUID->"63138713-80ac-408d-a227-16b9d4c14505"],
Cell[38796, 1023, 11770, 305, 1393, "Input",ExpressionUUID->"e19a226e-593f-4959-a641-555f09bc95e1"],
Cell[50569, 1330, 898, 19, 30, "Input",ExpressionUUID->"46eb411f-d3bf-4190-a84a-642b73214ba8"]
}, Closed]],
Cell[CellGroupData[{
Cell[51504, 1354, 274, 4, 38, "Subsection",ExpressionUUID->"bf065e10-b1cf-4791-9a14-3674ad00f459"],
Cell[51781, 1360, 7968, 196, 451, "Input",ExpressionUUID->"ddbe2a2b-33ab-4868-ae3c-17030ae9fe75"],
Cell[59752, 1558, 7457, 195, 451, "Input",ExpressionUUID->"b17b506d-5a69-45d1-a8d1-10e9d1f14517"],
Cell[67212, 1755, 213, 3, 30, "Input",ExpressionUUID->"ba1d8ada-d434-4775-b72f-6e205d1c62e5"],
Cell[67428, 1760, 6490, 161, 283, "Input",ExpressionUUID->"e634895c-37b0-4e69-9eac-21794dc36da3"],
Cell[73921, 1923, 8319, 189, 313, "Input",ExpressionUUID->"d1b0567f-ffd6-4ec6-b5d3-fa7ac7bae802"]
}, Closed]],
Cell[CellGroupData[{
Cell[82277, 2117, 319, 5, 38, "Subsection",ExpressionUUID->"24e23425-c5be-4b69-8a20-615758d6bc01"],
Cell[82599, 2124, 7017, 152, 467, "Input",ExpressionUUID->"6efafe00-0bd2-4936-85d3-c4e30adbbf6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89653, 2281, 264, 4, 54, "Subsection",ExpressionUUID->"b9a0e559-e977-4bcb-84fe-98ea291bb321"],
Cell[89920, 2287, 2020, 50, 201, "Input",ExpressionUUID->"30278ee1-bdad-494f-9f36-cc8013096086"],
Cell[91943, 2339, 1082, 22, 52, "Input",ExpressionUUID->"1aecccf8-5f85-4b1f-b1eb-625ef29d538c"],
Cell[93028, 2363, 842, 19, 52, "Input",ExpressionUUID->"898e37d1-7bf3-4bac-a58d-fb2477340795"],
Cell[93873, 2384, 419, 9, 52, "Input",ExpressionUUID->"c2d0bc3b-209a-48e9-b6da-a30cb59aeb98"],
Cell[94295, 2395, 471, 11, 30, "Input",ExpressionUUID->"7ef98c1f-0395-4684-a56f-cc3e59384db1"],
Cell[CellGroupData[{
Cell[94791, 2410, 3324, 68, 178, "Input",ExpressionUUID->"e2fde1a8-cd03-4fcf-b6b9-c493655646b6"],
Cell[98118, 2480, 115461, 1928, 229, "Output",ExpressionUUID->"9fec2e44-e3bd-4f36-9731-0c0933dff39d"]
=======
Cell[CellGroupData[{
Cell[616, 22, 200, 3, 53, "Subsection",ExpressionUUID->"7db7c486-ac47-4517-b555-2e9483f292a6"],
Cell[819, 27, 860, 12, 37, "CodeText",ExpressionUUID->"694d0844-6d58-4b0e-8566-d121be6088e7"],
Cell[1682, 41, 10803, 288, 539, "Input",ExpressionUUID->"db78b205-a416-4027-8661-9195665415d0"]
}, Closed]],
Cell[CellGroupData[{
Cell[12522, 334, 267, 4, 37, "Subsection",ExpressionUUID->"aa2026d7-da1a-430a-9a75-38fead6a5fd8"],
Cell[12792, 340, 257, 5, 37, "CodeText",ExpressionUUID->"7ddb0035-6cfb-483b-8421-770e6389f206"],
Cell[13052, 347, 13065, 339, 1968, "Input",ExpressionUUID->"63138713-80ac-408d-a227-16b9d4c14505"],
Cell[26120, 688, 11662, 304, 1469, "Input",ExpressionUUID->"e19a226e-593f-4959-a641-555f09bc95e1"],
Cell[37785, 994, 823, 18, 28, "Input",ExpressionUUID->"46eb411f-d3bf-4190-a84a-642b73214ba8"]
}, Closed]],
Cell[CellGroupData[{
Cell[38645, 1017, 274, 4, 37, "Subsection",ExpressionUUID->"bf065e10-b1cf-4791-9a14-3674ad00f459"],
Cell[38922, 1023, 7846, 195, 390, "Input",ExpressionUUID->"ddbe2a2b-33ab-4868-ae3c-17030ae9fe75"],
Cell[46771, 1220, 7457, 195, 390, "Input",ExpressionUUID->"b17b506d-5a69-45d1-a8d1-10e9d1f14517"],
Cell[54231, 1417, 212, 3, 28, "Input",ExpressionUUID->"ba1d8ada-d434-4775-b72f-6e205d1c62e5"],
Cell[54446, 1422, 6086, 153, 219, "Input",ExpressionUUID->"e634895c-37b0-4e69-9eac-21794dc36da3"],
Cell[60535, 1577, 7968, 181, 264, "Input",ExpressionUUID->"d1b0567f-ffd6-4ec6-b5d3-fa7ac7bae802"]
}, Closed]],
Cell[CellGroupData[{
Cell[68540, 1763, 264, 4, 37, "Subsection",ExpressionUUID->"b9a0e559-e977-4bcb-84fe-98ea291bb321"],
Cell[68807, 1769, 1064, 24, 162, "Input",ExpressionUUID->"30278ee1-bdad-494f-9f36-cc8013096086"],
Cell[69874, 1795, 626, 15, 48, "Input",ExpressionUUID->"1aecccf8-5f85-4b1f-b1eb-625ef29d538c"],
Cell[70503, 1812, 680, 17, 48, "Input",ExpressionUUID->"898e37d1-7bf3-4bac-a58d-fb2477340795"],
Cell[71186, 1831, 261, 5, 28, "Input",ExpressionUUID->"c2d0bc3b-209a-48e9-b6da-a30cb59aeb98"],
Cell[71450, 1838, 423, 10, 28, "Input",ExpressionUUID->"7ef98c1f-0395-4684-a56f-cc3e59384db1"],
Cell[CellGroupData[{
Cell[71898, 1852, 1300, 31, 101, "Input",ExpressionUUID->"e5cf36f5-c503-4f30-a30a-72d9d477ab14"],
Cell[73201, 1885, 64073, 1068, 224, "Output",ExpressionUUID->"7e151dac-83b8-476a-b594-5faee213568f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137311, 2958, 1385, 32, 121, "Input",ExpressionUUID->"ea8c2e57-8741-47c2-bcae-0902e2194e90"],
Cell[138699, 2992, 496, 11, 21, "Message",ExpressionUUID->"93e5dfcd-1d03-460b-978f-afcc7b0b2493"],
Cell[139198, 3005, 496, 11, 21, "Message",ExpressionUUID->"2dcc11bf-65d4-4570-a552-507b0e07c8be"],
Cell[139697, 3018, 496, 11, 21, "Message",ExpressionUUID->"6c936bda-790e-4204-ba1b-f75768adb45a"],
Cell[140196, 3031, 480, 10, 21, "Message",ExpressionUUID->"df3bed8b-ec17-4343-99d4-682d770acf17"],
Cell[140679, 3043, 179, 2, 32, "Output",ExpressionUUID->"2a4d7d34-642a-406b-bd90-97d9aa1eaa86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140895, 3050, 1325, 33, 48, "Input",ExpressionUUID->"cb63265d-9771-4015-b0d2-2b6b28ca1a07"],
Cell[142223, 3085, 394, 7, 32, "Output",ExpressionUUID->"5661e5ec-3476-462d-9603-2ce5a658b31f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[142678, 3099, 325, 6, 67, "Section",ExpressionUUID->"a7709b23-ba22-4f44-8d10-6a9e0601c295"],
Cell[CellGroupData[{
Cell[143028, 3109, 176, 3, 53, "Subsection",ExpressionUUID->"722ba902-75ea-441d-9400-c7e60c355260"],
Cell[143207, 3114, 205, 3, 37, "CodeText",ExpressionUUID->"2c812491-40d7-4377-90b4-01e89ef4746f"],
Cell[143415, 3119, 2357, 57, 314, "Input",ExpressionUUID->"435dfc3c-988a-4c72-839c-2ff4eead17f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145809, 3181, 226, 4, 53, "Subsection",ExpressionUUID->"a9cfd93a-0e1d-4373-a7ac-b559a18f8d04"],
Cell[146038, 3187, 512, 11, 117, "CodeText",ExpressionUUID->"bb684405-7a58-47fc-bdf2-51d6d8edc0e3"],
Cell[146553, 3200, 1485, 41, 105, "Input",ExpressionUUID->"c7bf3000-b46d-468b-9324-5f271387d923"],
Cell[148041, 3243, 5992, 128, 200, "Input",ExpressionUUID->"b53c50af-18cf-4715-a27a-8a7a49c8b870"],
Cell[154036, 3373, 179, 3, 28, "Input",ExpressionUUID->"e0f8eff9-72f6-45cf-9b5a-fd7d96f32878"],
Cell[154218, 3378, 643, 14, 48, "Input",ExpressionUUID->"eded190d-6e7d-421d-badd-899fcd7f6c28"],
Cell[154864, 3394, 175, 3, 28, "Input",ExpressionUUID->"69b48a8e-3f6a-46b2-ad61-10aac0b5fe58"],
Cell[CellGroupData[{
Cell[155064, 3401, 385, 9, 28, "Input",ExpressionUUID->"dbeb9f6a-7f91-4218-a592-75baea961db1"],
Cell[155452, 3412, 181, 2, 32, "Output",ExpressionUUID->"d63a0628-85f2-430f-a389-7bfc574dc25e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155682, 3420, 456, 7, 53, "Subsection",ExpressionUUID->"e796478a-6d6e-4604-902d-8413ef35dd10"],
Cell[156141, 3429, 680, 15, 28, "Input",ExpressionUUID->"08cfc3f2-bfe0-4b4b-8c99-5916ab9ccad1"],
Cell[156824, 3446, 186, 4, 28, "Input",ExpressionUUID->"695ffed5-5637-4d3a-acff-24d6982e85b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157047, 3455, 403, 6, 53, "Subsection",ExpressionUUID->"20efa2a7-db76-4e32-936b-60ad8ce5ba25"],
Cell[157453, 3463, 463, 11, 117, "CodeText",ExpressionUUID->"2c5a3fc1-7173-400a-a9b1-f83a895feec4"],
Cell[157919, 3476, 278, 4, 37, "CodeText",ExpressionUUID->"de058845-3743-46b7-bfa2-9d118eec7154"],
Cell[158200, 3482, 2961, 76, 294, "Input",ExpressionUUID->"237e7007-6244-4f59-b397-35966def350c"],
Cell[161164, 3560, 329, 5, 37, "CodeText",ExpressionUUID->"80021aaa-5de0-4220-b44d-36c5cf660f70"],
Cell[161496, 3567, 736, 19, 48, "Input",ExpressionUUID->"79c9a561-9195-49df-99fd-22aa5a1f6d33"],
Cell[CellGroupData[{
Cell[162257, 3590, 259, 6, 28, "Input",ExpressionUUID->"c16176f2-ee9f-4650-a20f-9e30eddaab01"],
Cell[162519, 3598, 179, 3, 32, "Output",ExpressionUUID->"3cf668a3-8460-4180-a713-31da95bc5122"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162735, 3606, 244, 5, 28, "Input",ExpressionUUID->"59f4b858-3bf1-425a-9925-e6d29d75de0b"],
Cell[162982, 3613, 177, 3, 32, "Output",ExpressionUUID->"ba384fca-6673-45f3-a50d-d07f47da48f6"]
}, Open  ]],
Cell[163174, 3619, 357, 7, 37, "CodeText",ExpressionUUID->"d80aefa0-4c75-45c4-bada-5dc630f229e1"],
Cell[163534, 3628, 2160, 59, 257, "Input",ExpressionUUID->"b208fd7d-2555-4646-a874-5ae98de352b8"],
Cell[165697, 3689, 573, 16, 28, "Input",ExpressionUUID->"f24b6038-070e-431d-a4df-fdf4ec38e5e4"],
Cell[166273, 3707, 1213, 31, 86, "Input",ExpressionUUID->"187dfd08-daa2-45b8-9d2f-d3bab472130c"],
Cell[167489, 3740, 261, 5, 28, "Input",ExpressionUUID->"7b560cad-ba7e-498f-b29b-a806bdbec97d"],
Cell[167753, 3747, 214, 3, 28, "Input",ExpressionUUID->"3917d3e4-b8ba-4860-9c14-1628780e219f"],
Cell[167970, 3752, 153, 3, 28, "Input",ExpressionUUID->"45bed839-51cb-4841-8b26-636011a0f2fc"],
Cell[168126, 3757, 657, 17, 28, "Input",ExpressionUUID->"ad13ff55-dc09-4ba2-9bb3-2ede95e1c6dd"],
Cell[168786, 3776, 418, 8, 37, "CodeText",ExpressionUUID->"16a6ddd9-4cbb-4134-bef0-062654c361d1"],
Cell[169207, 3786, 288, 5, 28, "Input",ExpressionUUID->"e3234ac0-ca14-4c21-8e1e-b3501e4ae96b"],
Cell[169498, 3793, 757, 16, 48, "Input",ExpressionUUID->"1f8fdc26-8da9-4ae5-b24c-d3e9c6e03c2a"],
Cell[170258, 3811, 1367, 34, 48, "Input",ExpressionUUID->"e61ec28e-5d44-4f6c-96c6-7129321a4902"],
Cell[CellGroupData[{
Cell[171650, 3849, 637, 18, 28, "Input",ExpressionUUID->"a5db76f3-c577-4cef-abfa-992972f550df"],
Cell[172290, 3869, 11045, 287, 206, "Output",ExpressionUUID->"5568286b-fd06-4b0f-8491-4f9b771db407"]
>>>>>>> Stashed changes
}, Open  ]],
Cell[213594, 4411, 147, 3, 52, "Input",ExpressionUUID->"e883c779-aeb3-4ea6-b690-012a54c9b591"],
Cell[CellGroupData[{
<<<<<<< Updated upstream
Cell[213766, 4418, 3328, 68, 178, "Input",ExpressionUUID->"98ad3fba-ca58-4cf0-a468-d7056c5cdff4"],
Cell[217097, 4488, 119268, 1988, 225, "Output",ExpressionUUID->"d8b74c1f-0fcb-4e91-92f2-41b3b9261ed9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336402, 6481, 1622, 38, 115, "Input",ExpressionUUID->"2c90ef2b-bc1d-47f1-a5c3-883b76ad9b01"],
Cell[338027, 6521, 581, 9, 34, "Output",ExpressionUUID->"3a582059-c356-4d18-8d53-20e4a317cf70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338645, 6535, 1432, 34, 115, "Input",ExpressionUUID->"1d079126-1891-4dba-baba-e16bf0bca514"],
Cell[340080, 6571, 498, 11, 24, "Message",ExpressionUUID->"9cc2b5db-8828-40b9-b6aa-79e180abcf8f"],
Cell[340581, 6584, 341, 5, 34, "Output",ExpressionUUID->"1098ac79-b02b-4c19-8c43-ca92cc52fc17"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[340971, 6595, 365, 6, 54, "Subsection",ExpressionUUID->"4858ec90-f905-4a88-bca4-6086604647ec"],
Cell[341339, 6603, 1587, 39, 119, "Input",ExpressionUUID->"3f4184d5-09c1-46f3-bbac-fb149870b22c"],
Cell[CellGroupData[{
Cell[342951, 6646, 5180, 100, 262, "Input",ExpressionUUID->"ea8c2e57-8741-47c2-bcae-0902e2194e90"],
Cell[348134, 6748, 888, 17, 24, "Message",ExpressionUUID->"9f116d0c-7f64-4d85-aa72-c2c839f00d25"],
Cell[349025, 6767, 886, 17, 24, "Message",ExpressionUUID->"0709fd50-3388-4d15-9104-b4346ddd0052"],
Cell[349914, 6786, 886, 17, 24, "Message",ExpressionUUID->"55f7f032-0795-4abe-bac4-d8f7a25fdece"],
Cell[350803, 6805, 859, 16, 24, "Message",ExpressionUUID->"2dc208aa-e17b-491d-ac8c-2b27a58443d2"],
Cell[351665, 6823, 1295, 24, 24, "Message",ExpressionUUID->"acf537b8-df9a-4446-94d5-7c68d7e06482"],
Cell[352963, 6849, 1722, 29, 54, "Message",ExpressionUUID->"1f3b84ff-dc28-481e-92c1-1d8fb96d3709"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354722, 6883, 2145, 53, 180, "Input",ExpressionUUID->"586e34b0-9483-4a76-9f68-349c0587ff23"],
Cell[356870, 6938, 23158, 396, 244, 3991, 82, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"c7740f49-195c-47db-8834-da31ece1e097"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380065, 7339, 1296, 27, 30, "Input",ExpressionUUID->"7f8fa2dd-761a-47c4-bea7-5929c96ffa5b"],
Cell[381364, 7368, 4667, 95, 244, "Output",ExpressionUUID->"d98bbb29-6dd2-4910-ab8f-4ebbd9ae2ac1"]
=======
Cell[183372, 4161, 1150, 27, 28, "Input",ExpressionUUID->"8fa2200d-963f-4aa4-84b6-40a5d51ecbf0"],
Cell[184525, 4190, 3929, 74, 245, "Output",ExpressionUUID->"484da902-6ac1-4ec0-b0c8-91fa3a2cfd66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188491, 4269, 881, 23, 28, "Input",ExpressionUUID->"b42175d2-f9ed-4e1b-8a66-726fee5c8004"],
Cell[189375, 4294, 3327, 66, 218, "Output",ExpressionUUID->"587682d2-29a5-47a7-811d-4d9ba0e5b242"]
}, Open  ]],
Cell[192717, 4363, 489, 7, 37, "CodeText",ExpressionUUID->"07f9fdab-7ca5-4010-9381-2a74586ebdad"],
Cell[CellGroupData[{
Cell[193231, 4374, 615, 16, 28, "Input",ExpressionUUID->"43555aed-2e1d-4e03-b14f-8b29ded3a9ad"],
Cell[193849, 4392, 864, 21, 32, "Output",ExpressionUUID->"75eb6512-1fbe-47fc-977e-c615f824a091"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[194774, 4420, 242, 4, 53, "Section",ExpressionUUID->"654570d1-8d91-4418-ab4e-b4d11f129a01"],
Cell[CellGroupData[{
Cell[195041, 4428, 320, 5, 53, "Subsection",ExpressionUUID->"50684b04-fe81-4d99-94dc-700678d6ffc8"],
Cell[195364, 4435, 79, 0, 38, "CodeText",ExpressionUUID->"a4e34306-0af0-43d3-9a2b-bef36f6ffdde"],
Cell[195446, 4437, 76, 0, 30, "Input",ExpressionUUID->"3c24a24d-aeb1-4f04-9cd2-9cd2f0533659"],
Cell[CellGroupData[{
Cell[195547, 4441, 76, 0, 56, "Input",ExpressionUUID->"7c3b643f-a89c-4a41-9340-0c358c793a41"],
Cell[195626, 4443, 77, 0, 70, "Output",ExpressionUUID->"538c2494-e523-44c0-924c-cbb644e1b9e5"]
}, Open  ]],
Cell[195718, 4446, 79, 0, 38, "CodeText",ExpressionUUID->"4a1fcc2e-eb14-4a0d-86b4-b18059e87e68"],
Cell[195800, 4448, 76, 0, 482, "Input",ExpressionUUID->"0b6fae64-5505-45f7-89c0-1b7393dbb7d9"],
Cell[195879, 4450, 79, 0, 38, "CodeText",ExpressionUUID->"d426c2fa-d51e-43a9-bdb4-89fbf35b9818"],
Cell[195961, 4452, 76, 0, 218, "Input",ExpressionUUID->"825af256-9d94-410e-beb9-f128eed58e16"],
Cell[196040, 4454, 79, 0, 59, "CodeText",ExpressionUUID->"ec1d9357-e36c-498d-b3dc-c2ca6eaa45e6"],
Cell[196122, 4456, 76, 0, 178, "Input",ExpressionUUID->"38f126c4-49c6-4f4c-afee-d02ce9d0e033"]
}, Closed]],
Cell[CellGroupData[{
Cell[196235, 4461, 417, 6, 37, "Subsection",ExpressionUUID->"4abb4fc0-f13d-4a46-aa8d-fd1ee6dc1daf"],
Cell[CellGroupData[{
Cell[196677, 4471, 191, 3, 44, "Subsubsection",ExpressionUUID->"45f35ade-da82-4584-b476-a3bbd9a612c8"],
Cell[196871, 4476, 79, 0, 38, "CodeText",ExpressionUUID->"579f186d-792d-4052-be9c-9bc6e6f21d50"],
Cell[196953, 4478, 76, 0, 73, "Input",ExpressionUUID->"68a1119f-449e-4bae-94ba-4415964f8a47"],
Cell[197032, 4480, 79, 0, 38, "CodeText",ExpressionUUID->"88f532b6-3acc-4071-be63-c215502038f5"],
Cell[197114, 4482, 76, 0, 199, "Input",ExpressionUUID->"dfd983aa-a615-4802-ab1a-74ea56395253"],
Cell[197193, 4484, 79, 0, 38, "CodeText",ExpressionUUID->"9e28f81e-7638-4183-872c-d4b9288c5895"],
Cell[197275, 4486, 76, 0, 52, "Input",ExpressionUUID->"66a981f1-5adb-45cc-bedd-5e468599f901"],
Cell[197354, 4488, 79, 0, 38, "CodeText",ExpressionUUID->"822657b9-d32a-4350-b146-d093f7eff2d5"],
Cell[CellGroupData[{
Cell[197458, 4492, 76, 0, 52, "Input",ExpressionUUID->"2b2b3696-c1f8-4262-96ed-fcc711c6cb7c"],
Cell[197537, 4494, 77, 0, 56, "Output",ExpressionUUID->"aba3d9d8-b0fc-476e-84ab-6d774fc7df08"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[197663, 4500, 245, 4, 36, "Subsubsection",ExpressionUUID->"af7e3fe2-ecfe-457d-9c9c-2a6a539fb974"],
Cell[197911, 4506, 164, 3, 37, "CodeText",ExpressionUUID->"c596615c-554e-4060-887a-7a48cf8b6304"],
Cell[198078, 4511, 2818, 61, 105, "Input",ExpressionUUID->"be723fc6-93c8-414c-975e-afbdb82fb127"],
Cell[200899, 4574, 227, 4, 37, "CodeText",ExpressionUUID->"397235b2-ef71-43c8-baba-08aa9f2c910f"],
Cell[201129, 4580, 5911, 105, 181, "Input",ExpressionUUID->"929e6068-5b44-43df-b9ff-24393dcf9891"],
Cell[CellGroupData[{
Cell[207065, 4689, 76, 0, 28, "Input",ExpressionUUID->"20f3f7bb-d3fa-48d9-b971-0955804dffed"],
Cell[207144, 4691, 85, 0, 22, "PrintTemporary",ExpressionUUID->"fe32d834-ced3-446e-9fe5-4339acc9915e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207266, 4696, 76, 0, 28, "Input",ExpressionUUID->"3b00984c-78d5-40dd-8848-49e49155c90c"],
Cell[207345, 4698, 77, 0, 32, "Output",ExpressionUUID->"cf37a09d-c5a6-4aba-8937-90c1ec751ecf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207459, 4703, 76, 0, 28, "Input",ExpressionUUID->"6c1383d0-10e4-4029-96d2-e61d04290394"],
Cell[207538, 4705, 77, 0, 32, "Output",ExpressionUUID->"df54d0c2-2c4d-4b8b-8c0d-092b188b7c5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207652, 4710, 76, 0, 28, "Input",ExpressionUUID->"150d8816-b9d1-4ba4-8af5-b5bb42d1e3e1"],
Cell[207731, 4712, 77, 0, 32, "Output",ExpressionUUID->"e4326185-f9fa-45d2-80ba-e4c9c4a4640a"]
>>>>>>> Stashed changes
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
}
]
*)

